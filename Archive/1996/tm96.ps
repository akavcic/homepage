%!PS-Adobe-2.0
%%Creator: dvips(k) 5.85 Copyright 1999 Radical Eye Software
%%Title: paper.dvi
%%Pages: 3
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o paper.ps paper
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 1999.10.11:1102
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (paper.dvi)
@start
%DVIPSBitmapFont: Fa cmti8 8 29
/Fa 29 122 df<387FFFC0A2B5FCA26C130012057A901A>45 D<121C127F12FFA412FE12
380808788716>I<13F0EA01F812031207A3EA03F0EA01C0C7FCAD121C127F5AA45A1238
0D1D789C16>58 D<DA01FE133091390FFFC07091393F01E0F09138F80079D903E0133D49
48EB1FE0D91F80130F49C7FC017E14074915C0485A485A5B00071680485AA2485A170048
CAFCA25A127EA312FE5AA5163848157816707E16F0007C5D15014B5A6C5D4BC7FC6C140E
6C6C133C6C6C5B6C6C485A3900F80FC0D97FFFC8FCEB0FF82C2F75AD33>67
D<011FB612FEA2903900FE0001EE007E4A143EA20101151E171C5CA21303A25C16E00107
1301170002E05B1503130F15074A485A91B5FC5BECC01F4A6CC7FCA2133FA2DA000E13E0
A2491401030013C0017E1403178001FE14071700495C161E12015E49147CED01FC0003EC
0FF8B7FC5E2F2D7CAC30>69 D<90381FFFF8A2903800FE00A25CA21301A25CA21303A25C
A21307A25CA2130FA25CA2131FA25CA2133FA291C7FCA25BA2137EA213FEA25BA21201A2
5BA21203B512C0A21D2D7CAC1B>73 D<D91FFFED0FFF600100EE3FC0A2F07F8018EF9026
01EF8014FF943801DF0014CFEF039F01034B5A183E028F140E171C0107167EDA87C0EB38
7C14071770010FEDE0FC60010EEC01C0EE0380011E158193380701F090381C03E0160E01
3CEC1C036001381438A20178EC700704E05B90387001F0EDF1C001F09038F3800F6001E0
EBF700A2000102FE131F4B91C7FC13C0486C6C5AD80FF05DD8FFFE9039F00FFFF815E040
2D7BAC40>77 D<011FB512FCEEFF80903A00FE000FE0EE03F04AEB00F8A20101157CA25C
177E130317FC5CA20107EC01F8A24AEB03F017E0010FEC07C0EE0F804AEB3F00ED01FC91
B512F04991C7FC0280C8FCA3133F91C9FCA35B137EA313FE5BA312015BA21203B512C0A2
2F2D7CAC30>80 D<4AB4FC020F13C091383E03F09138F800FCD903E0133E49487F011FC7
FC013EEC0F804914074915C012014915E04848140312075B120F485AA248C8FC1607123E
127EA348ED0FC0A3EE1F80A21700485D163E167E6C157C16FC4B5A007C01F05B903903FC
03E03A3E070E07C0903906060F80271F0E071FC7FC390F0C033E018C13F8D803EC5B3901
FE0FC03A007FFF0018EB0FF7D90007133816301670ED80F0ED81E015C3EDFFC0A25E93C7
FC6E5AEC00F82B3B75AD37>I<011FB512E016FC903900FE003FEE0FC04AEB07E0160301
01EC01F0A24A14F8A21303EE03F05CA20107EC07E017C04AEB0F80EE1F00010F143E16FC
9138C007F091B512805B9138C00FE091388003F06F7E133F6F7E91C7FCA2491301A2017E
5CA201FE1303A2495C17080001163C17384914E0EEF07800031670B5D8C00113E0923800
7FC0C9EA1F002E2E7BAC34>I<91380FF00C91383FFC1C9138F80F3C903903C007BC9039
078003FC90390F0001F8131E491300A24914F0A313F816E0A216007F7F6D7EEB7FF8ECFF
806D13E06D13F801077F01017FEB001FEC01FF6E7E8181A281121CA35D003C141EA25DA2
007E5C5D007F495A6D485A26F1F01FC7FC38E07FFC38C00FF0262F7BAD28>I<000FB712
F0A23A1FE00FE00701001401001E02C013E0481500141F12380078EC8001A20070013F14
C012F0481400A25CC791C7FC147EA214FEA25CA21301A25CA21303A25CA21307A25CA213
0FA25CA2131FA25CA2133F003FB57EA22C2D74AC33>I<EB07C0EB1FF090387C39C0EBF8
1FEA01F03803E00FEA07C0120FD81F801380A2EA3F00141F481400127EA25C00FE133E5A
A2EC7E18EC7C385AA214FCD878011378397C03F870A2393C0F78E0381E1E3D390FF81FC0
3903E00F001D1F799D24>97 D<EB01F8EB0FFE90383E0780EBFC03D801F013C03803E007
0007130FEA0FC001801380121F48C8FCA25A127EA312FE5AA5EC0180007CEB03C0EC0780
EC0F006C131E001E137C380F83F03807FFC0C648C7FC1A1F799D21>99
D<153EEC07FEA2EC007EA2157CA215FCA215F8A21401A215F0A21403EB07C390381FF3E0
EB7C3BEBF81FEA01F03903E00FC0EA07C0120FEA1F801580EA3F00141F5A007E1400A25C
12FE48133EA2EC7E18153848137CA214FCD878011378397C03F870A2393C0F78E0381E1E
3D390FF81FC03903E00F001F2F79AD24>I<EB03F8EB0FFEEB3E0FEBF8073901F00380EA
03E0EA07C0000F1307D81F8013005C383F001E5C387F03F8EBFFE049C7FC007EC8FC12FE
5AA4127CEC0180EC03C0EC07806CEB0F00141E6C137C380F83F03803FFC0C648C7FC1A1F
799D21>I<EC01F0EC07FCEC0F9EEC1F1EEC1E3EEC3E7EA3EC7C381500A314FC5CA59038
7FFFF0A2903801F000A313035CA413075CA4130F5CA4131F91C7FCA45B133EA4137E137C
A3EA38F812FCA25B12FDEAF1E0EAF3C0EA7F80001EC8FC1F3D81AE16>I<14F8EB03FE90
380F873890381F03F8137EEB7C0113F81201EA03F015F0EA07E01403120F01C013E0A214
07121F018013C0A2140FA21580141F120F143FEC7F006C6C5AEA03C33801FFBF38007E3E
1300147EA2147CA214FC00385BEAFC015C495A48485A38F01F80D87FFEC7FCEA1FF01D2C
7C9D21>I<131FEA03FFA2EA003FA2133EA2137EA2137CA213FCA25BA21201147E9038F3
FF809038F787C03903FE03E013FC13F8A2EA07F013E0A213C0000F130715C01380A2001F
130F15801300141F481406150E003E133F143E007E141EEC7E1C007C137CEC3C3812FC15
7048EB1FE00070EB07801F2F7BAD24>I<130E131FEB3F80A2EB1F00130E90C7FCA9EA03
E0EA0FF0EA1E78EA1C7C12381278127013FCEAF0F812E012E1EAC1F0120112035B12075B
A2120F13831387121F13075BEA3F0E123EEA1E1C133C1338EA0FF0EA03C0112E7AAC16>
I<137CEA0FFCA21200A213F8A21201A213F0A21203A213E0A21207A213C0A2120FA21380
A2121FA21300A25AA2123EA2127EA2127CA2EAFC30137012F8A213F013E012F012F113C0
12FBEA7F80EA1E000E2F7AAD12>108 D<3B07801FC007F03B1FE07FF01FFC3B3DF1E0F8
783E3B38F3C078F01E3B78FF007DC01FD870FEEB7F80A2D8F1FC1400D8E1F8137EA24913
7C00C302FC5B0003163E495BA200070101147E177C01C05B17FC000F0103ECF830187001
80EBE00117F0001F010715F0040313E0010001C013E0EFE1C048010F1301EFE380003E91
398000FF00001C6DC7123C341F7A9D3A>I<3907801FC0391FE07FF0393DF1E0F83938F3
C0783978FF007CEA70FEA2EAF1FCEAE1F8A25B00C314FC00035C5BA2000713015D13C014
03000FECE0C015E1EB800715C1001F14C3020F13800100138391380787005A158E003EEB
03FC001CEB00F0221F7A9D28>I<EB03F8EB0FFE90383E0F809038FC07C03801F003D803
E013E01207390FC001F01380121FEA3F0014035A127EA2140700FE14E05AA2EC0FC0A2EC
1F80A2007CEB3F00143E5C6C5B381E01F0380F07C06CB4C7FCEA01FC1C1F799D24>I<38
07803E391FE0FF80393CF3C1C03938F781E03878FF07EA70FE13FC12F139E1F8038091C7
FC5B12C312035BA21207A25BA2120FA25BA2121FA290C8FCA25AA2123E121C1B1F7A9D1E
>114 D<EB0FC0EB7FF0EBF03C3801E01C3803C01EEA0780143EA2000F133C1418EBC000
13F813FF6C13C06C13E06C13F0EA007F130713031301EA780012FCA2130100F813E012E0
EB03C038F0078038781F00EA1FFCEA07F0171F7A9D1D>I<131C133EA2137EA2137CA213
FCA25BA21201A2B512E0A23803F000A25BA21207A25BA2120FA25BA2121FA290C7FCA248
13C01301123E130314801307003C1300130E131E6C5AEA0FF0EA07C0132B7AA918>I<EA
03C0D80FF01338D81E78137CD81C7C13FC003814F812781270EBFC01D8F0F813F012E012
E138C1F003000114E0120313E01407000714C013C0A2EC0FC3000F14871380A2141F158F
0007EB3F0E147F01C0131C3903E1E7BC3901FF83F839007E01E0201F7A9D26>I<EA03C0
D80FF01338D81E78137CD81C7C13FC003814F812781270EBFC01D8F0F813F012E012E138
C1F003000114E0120313E01407000714C013C0A2140F000F14801380A2141F150000075B
5C13C03803E1FE3801FFBE38007E3EEB007E147CA2003E5BA2387E01F0A2387C03E03870
07C06C485AD83C3EC7FCEA1FF8EA07E01E2C7A9D23>121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmcsc10 5 2
/Fb 2 123 df<387FFFF03860703000401310A200801308A300001300ADEA07FF15157F
9419>116 D<EAFFFEEAF01C12C013381280137013E01200EA01C0A2EA0380EA0700A2EA
0E02A2121C123813061270131EEAFFFE0F157E9415>122 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmr5 5 1
/Fc 1 51 df<EA03FCEA0FFF383C0FC0387003E0387801F0EAFC0014F8A214781278C712
F814F0A2EB01E0EB03C0EB0780EB0F00131C5B13E03801C018EA0380EA0600481338383F
FFF05AB5FCA2151C7D9B1C>50 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmti9 9 30
/Fd 30 123 df<923803FF80031F13F092383F00F803F8133C4A48133E4A48137E17FE4A
5A17FC17384A481300A3141F92C8FCA55C143E011FB612E0A217C09039007E0007147C16
0F1780A214FC4A131F1700A301015C4A133EA3167E0103147C5C1718EEFC1CEEF83C0107
15385C1778177016F0010F15F04AEBF8E01679EE3FC0011FEC0F0093C7FC91C9FCA3133E
A21238EA7E3C137CEAFE7812FC485AEA79E0EA3FC0000FCAFC2F4582B42B>12
D<B51280A46C1300110579911B>45 D<121C127F12FFA412FE12380808778718>I<0107
B612C04915F017FC903A003F8001FEEE007FEF1F8092C7EA0FC0EF07E05CEF03F0147E17
0102FE15F8A25CA21301A25CA2130317035CA2130718F04A1407A2130F18E04A140F18C0
011F151F18805CEF3F00133F177E91C85AA2494A5A4C5A017E4A5A4C5A01FE4A5A047EC7
FC49495A0001EC0FF8007FB612E0B7C8FC15F835337BB23A>68 D<0003B812C05A188090
3AF800FC003F260FC001141F0180150F01005B001EEE07001403121C003C4A5BA2003801
07140E127800705CA2020F141E00F0161CC74990C7FCA2141FA25DA2143FA292C9FCA25C
A2147EA214FEA25CA21301A25CA21303A25CA21307A25C497E001FB512F05AA2323374B2
37>84 D<49B612FC5BA292380001F8D907F8EB03F04A130702C0EB0FE04948EB1FC0EE3F
8091C7EA7F00011E147E16FE011C495A013C495A4B5A0138495A5E0178495A90C7123F4B
C7FC15FE4A5A5D4A5A14074A5A4A5A4A5A4AC8FC147E14FE4948130749485B4948130E49
5A4A131E131F4948131C49C7123C13FE48485C5B484814F800074A5A4848130348481307
4848EB1FE048C712FF90B6FCB7FC5E2E337AB22F>90 D<EB03F0EB0FF890383E1C609038
7C0FF0EBF807EA01F0EA03E00007EB03E0EA0FC0A2381F800715C0EA3F00A2140F481480
127EA2141F00FE14005A1506EC3F07EC3E0F150E147E007C141EECFE1CEB01FCD83C0313
3C393E07BE38391F0E1E783907FC0FF03901F003C0202278A027>97
D<137EEA0FFE121F5B1200A35BA21201A25BA21203A25BA21207A2EBC3E0EBCFF8380FDC
3EEBF81F497E01E01380EA1FC0138015C013005AA2123EA2007E131F1580127CA2143F00
FC14005AA2147EA25CA2387801F85C495A6C485A495A6C48C7FCEA0FFCEA03F01A3578B3
23>I<14FCEB07FF90381F078090383E03C0EBFC013801F8033803F0073807E00F13C012
0F391F80070091C7FC48C8FCA35A127EA312FE5AA4007C14C0EC01E0A2EC03C06CEB0F80
EC1F006C137C380F81F03803FFC0C648C7FC1B2278A023>I<ED0FC0EC03FFA21680EC00
1FA31600A25DA2153EA2157EA2157CA215FCA2903803F0F8EB0FF8EB3E1DEB7C0F496C5A
EA01F0EA03E000071303D80FC05BA2381F8007A2D83F005BA2140F5A007E5CA2141F12FE
4891C7FC1506EC3F075DEC3E0E147E007C141EECFE1CEB01FCD83C03133C393E07BE3839
1F0E1E783907FC0FF03901F003C0223578B327>I<EB03F8EB0FFEEB3E0F9038F8078038
01F003EA03E0EA07C0120FEA1F801407D83F0013005C007E133EEB03F8387FFFE04848C7
FC00FCC8FCA45AA4EC0180EC03C0A2007CEB0780EC1F00003C133E6C13F8380F03E03807
FF80D801FCC7FC1A2277A023>I<151FED7FC0EDF0E0020113F0EC03E3A2EC07C316E0ED
C1C091380FC0005DA4141F92C7FCA45C143E90381FFFFEA3D9007EC7FC147CA414FC5CA5
13015CA413035CA413075CA3130FA25CA3131F91C8FCA35B133E1238EA7E3CA2EAFE7812
FC485AEA78E0EA3FC0000FC9FC244582B418>I<143FECFF80903803E1E6903807C0FF90
380F807FEB1F00133E017E133F49133EA24848137EA24848137CA215FC12074913F8A214
01A2D80FC013F0A21403120715E01407140F141F3903E03FC00001137FEBF0FF38007FCF
90381F0F801300141FA21500A25C143E1238007E137E5C00FE5B48485A387803E0387C0F
80D81FFFC7FCEA07F820317CA023>I<EB0FC0EA03FFA25CEA001FA391C8FCA25BA2133E
A2137EA2137CA213FCA29038F83F80ECFFE03901FBE0F09038FF80F8EC007849137C485A
5B5BA2484813FC5D5BA2000F13015D1380A2001F13035DEB0007EDC0C048ECC1E0020F13
C0003E1481A2007E1483ED0380007C1407160000FC140E151E48EB07F80070EB01F02335
7BB327>I<EB0180EB07E0A2130FEB07C0EB038090C7FCABEA01F0EA03FCEA0F1E120E12
1C123C1238EA783E1270A2137EEAF07CEA60FCC65AA212015BA212035BA2000713C0EBC1
E0000F13C01381A21383EB038013071400130E131EEA07F8EA01F013337AB118>I<EB0F
C0EA01FF5A5CEA001FA391C7FCA25BA2133EA2137EA2137CA213FCA2491378EC01FE0001
EB078FEC0E0F9038F01C3F143800031370ECE03E9038E1C01C9038E38000D807E7C7FC13
EE5B13F8120F13FFEB9FC0EB83F0EA1F81EB80F81300150C48141E151C123EA2007E143C
1538127C157800FCEB787015E048EB3FC00070EB0F8020357BB323>107
D<133FEA07FF5A13FEEA007EA3137CA213FCA213F8A21201A213F0A21203A213E0A21207
A213C0A2120FA21380A2121FA21300A25AA2123EA2127EA2127C1318EAFC1C133CEAF838
A21378137012F013F0EAF8E01279EA3FC0EA0F00103579B314>I<2703C003F8137F3C0F
F00FFE01FFC03C1E783C1F07C1E03C1C7CF00F8F01F03B3C3DE0079E0026383FC001FC7F
D97F805B007001005B5E137ED8F0FC90380FC00100E05FD860F8148012000001021F1303
60491400A200034A13076049013E130FF081800007027EEC83C0051F138049017C1403A2
000F02FC1407053E130049495CEF1E0E001F01015D183C010049EB0FF0000E6D48EB03E0
3A227AA03F>I<3903C007F0390FF01FFC391E787C1E391C7CF01F393C3DE00F26383FC0
1380EB7F8000781300EA707EA2D8F0FC131F00E01500EA60F8120000015C153E5BA20003
147E157C4913FCEDF8180007153C0201133801C013F0A2000F1578EDE070018014F016E0
001FECE1C015E390C7EAFF00000E143E26227AA02B>I<14FCEB07FF90381F07C090383E
03E09038FC01F0EA01F83903F000F8485A5B120F484813FCA248C7FCA214014814F8127E
A2140300FE14F05AA2EC07E0A2007CEB0FC01580141FEC3F006C137E5C381F01F0380F83
E03803FF80D800FCC7FC1E2278A027>I<011E137C90387F81FF9039F3C387C09039E3EF
03E03901E1FE01D9C1FC13F0EBC3F8000313F0018314F814E0EA07871307000313C01200
010F130316F01480A2011F130716E01400A249EB0FC0A2013EEB1F80A2017EEB3F00017F
133E5D5D9038FF81F09038FDC3E09038F8FF80027EC7FC000190C8FCA25BA21203A25BA2
1207A25BB5FCA325307FA027>I<3903C00FC0390FF03FF0391E78F078391C7DE03C393C
3FC0FC00381380EB7F00007814F8D8707E13701500EAF0FC12E0EA60F812001201A25BA2
1203A25BA21207A25BA2120FA25BA2121FA290C8FC120E1E227AA020>114
D<EB03F0EB1FFCEB3C1EEB780FEBF007EA01E0140F0003131F13C0A2EBE00414007FEBFF
8014E06C13F06C13F8EB7FFC1307EB00FE147E143E123800FC133CA3147C00F013784813
F0EAF001387803E0383C0F80381FFE00EA03F818227AA01F>I<1303EB0F80A3131FA214
00A25BA2133EA2137EA2137C387FFFF8A2B5FC3800F800A21201A25BA21203A25BA21207
A25BA2120FA25B1460001F13F014E01300130114C01303001E1380EB07005BEA0F1EEA07
F8EA01E015307AAE19>I<EA01F0D803FC1307D80F1E5B000E5C121C123C00385CD8783E
133E1270A2017E137ED8F07C137CEA60FCC65A15FC00015C5BA2140100035C13E0166002
031370EDE0F0D807C014E0A20003EB07E116C09038E00FC1EC1FC3000190383FE3809038
F071E73A007FE0FF0090381F803C24227AA029>I<01F01338D803FC13FCEA0F1E120E12
1C123C0038147CEA783E0070143CA2137ED8F07C1338EA60FCC65A1578000114705BA215
F0000314E05BA2EC01C0A2EBC003158014071500EBE00EA26C6C5A3800F878EB7FE0EB1F
801E227AA023>I<D801F01538D803FC010E13FCD80F1E131E000E143E121C123C003802
7E137CD8783E137C0070163CA2017E13FCD8F07C491338EA60FCC65A0201147800014A13
7013F0A2020314F0000316E001E05BA2160117C001C013C00207EB0380A29039E00FE007
1700021F130E3A01F03DF01E3A00F878F83C90393FF03FF090390FC00FC02E227AA033>
I<011F137C90387FC1FF3A01E1E787803A03C0F703C0903880FE0FEA07004813FC000E15
80001E9038F80700001C91C7FC1301003C5B1218120013035CA31307A25C1506010F130F
150E14800038141ED87C1F131C00FC143C1538013F5B39F07FC0E03970F3C3C0393FE1FF
80260F807EC7FC22227CA023>I<13F0D803FC1307D80F1E130F000E141F121C123C0038
143FD8783E133E1270A2017E137ED8F07C137CEA60FCC65A15FC000114F85BA214010003
14F013E0A2140315E0EA07C0A20003130715C0EBE00F141F0001133F9038F07F8038007F
EFEB1F8FEB001F1500A25C003E133E007E137E147C5C007C5BEA7001495A38380780D83C
1FC7FCEA0FFCEA07F020317AA025>I<903807801C90381FE03C90383FF038017F137890
38FFF8F03901F07CE0EBE01F3903C003C09038800780EC0F00C7121E141C143C5C5C495A
EB07C0495A011EC7FC5B5B4913704913F0000114E0485A38078001390FC003C0381FF807
90383E0F80393C1FFF00127838700FFE38F007F838E001E01E227CA01F>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmsy6 6 4
/Fe 4 113 df<B712C0A322037A8D30>0 D<EA01FE3807FF804813C0381F03E0383C00F0
4813780070133800F0133C48131CA66C133C00701338007813786C13F0381F03E0380FFF
C06C13803801FE0016167C9720>14 D<EA01E0EA03F0A4EA07E0A213C0120FA21380A2EA
1F00A2121EA2123E123CA25AA3127012F05A12600C1A7E9B12>48
D<170C171C173C1738177817F017E0160117C0160317801607EE0F00160E161E161C163C
163816785E5E15015E15034B5AD8038091C7FC00075CD81FC0130E003F141ED8F3E0131C
0043143CD801F05B15706C6C13F05DEB7C015DEB3E034A5A011F90C8FC5CEB0F8E149EEB
07DC14FC6D5A5C13015C13002E327C8232>112 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmex10 10 8
/Ff 8 22 df<1430147014E0EB01C01303EB0780EB0F00A2131E5BA25B13F85B12015B12
03A2485AA3485AA3121F90C7FCA25AA3123EA2127EA6127C12FCB3A2127C127EA6123EA2
123FA37EA27F120FA36C7EA36C7EA212017F12007F13787FA27F7FA2EB0780EB03C01301
EB00E0147014301462738226>0 D<12C07E12707E123C7E7EA26C7E6C7EA26C7E7F1200
7F1378137CA27FA37FA31480130FA214C0A31307A214E0A6130314F0B3A214E01307A614
C0A2130FA31480A2131F1400A3133EA35BA2137813F85B12015B485AA2485A48C7FCA212
1E5A12385A5A5A14627C8226>I<151E153E157C15F8EC01F0EC03E01407EC0FC0EC1F80
15005C147E5CA2495A495AA2495AA2495AA2495AA249C7FCA2137EA213FE5B12015BA212
035BA21207A25B120FA35B121FA45B123FA548C8FCA912FEB3A8127FA96C7EA5121F7FA4
120F7FA312077FA21203A27F1201A27F12007F137EA27FA26D7EA26D7EA26D7EA26D7EA2
6D7E6D7EA2147E80801580EC0FC0EC07E01403EC01F0EC00F8157C153E151E1F94718232
>16 D<12F07E127C7E7E6C7E7F6C7E6C7E12017F6C7E137EA27F6D7EA26D7EA26D7EA26D
7EA26D7EA26D7EA280147E147F80A21580141FA215C0A2140F15E0A3140715F0A4140315
F8A5EC01FCA9EC00FEB3A8EC01FCA9EC03F8A515F01407A415E0140FA315C0141FA21580
A2143F1500A25C147E14FE5CA2495AA2495AA2495AA2495AA2495AA249C7FC137EA25B48
5A5B1203485A485A5B48C8FC123E5A5A5A1F947D8232>I<160F161F163E167C16F8ED01
F0ED03E0ED07C0150FED1F801600153E157E5D4A5A5D14034A5A5D140F4A5AA24AC7FC14
3E147E5CA2495AA2495AA2495AA2130F5CA2495AA2133F91C8FCA25B137E13FEA25B1201
A25B1203A35B1207A35B120FA35BA2121FA45B123FA690C9FC5AAA12FEB3AC127FAA7E7F
A6121F7FA4120FA27FA312077FA312037FA312017FA212007FA2137E137F7FA280131FA2
6D7EA2801307A26D7EA26D7EA26D7EA2147E143E143F6E7EA26E7E1407816E7E1401816E
7E157E153E811680ED0FC01507ED03E0ED01F0ED00F8167C163E161F160F28C66E823D>
I<12F07E127C7E7E6C7E6C7E6C7E7F6C7E1200137C137E7F6D7E130F806D7E1303806D7E
A26D7E147C147E80A26E7EA26E7EA26E7EA2811403A26E7EA2811400A281157E157FA281
1680A2151F16C0A3150F16E0A3150716F0A31503A216F8A4150116FCA6150016FEAA167F
B3AC16FEAA16FC1501A616F81503A416F0A21507A316E0150FA316C0151FA31680153FA2
16005DA2157E15FE5DA214015DA24A5AA214075DA24A5AA24A5AA24AC7FCA2147E147C14
FC495AA2495A5C1307495A5C131F49C8FC137E137C5B1201485A5B485A485A48C9FC123E
5A5A5A28C67E823D>I<B512F8A500F8C7FCB3B3B3B3B3B3B3B3B3B3A8B512F8A515C66B
822C>I<B512F8A5C7FCB3B3B3B3B3B3B3B3B3B3A8B5FCA515C67F822C>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmmi5 5 1
/Fg 1 115 df<380F07E0383F8FF83833D81CEA63F038C3E03CEBC07C12031438380780
00A448C7FCA4121E120C16127D911C>114 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmti10 10 28
/Fh 28 118 df<EE3FFC4BB51280923907E007C092391F8001E0DB3F0013F0037E13034B
1307A24A5A18E04A48EB038094C7FCA314075DA4140F5DA3010FB7FCA25F903A001F8000
7EA217FE023F5C92C7FCA216015F5C147E16035FA214FE4A13075FA30101140F5F4AECC1
C0A2161F1783010316805CA2EF870013074A5CEE0F8EEE079EEE03FC010FEC00F04A91C7
FCA35C131FA2001C90CAFC127E5BEAFE3E133C137CEAF878EA78F0EA3FE0EA0F80344C82
BA2F>12 D<120EEA3F80127F12FFA31300127E123C0909778819>46
D<EE01C01603A21607160FA2161F83163FA2167F16FF16EF150116CFED038FA2ED070FA2
150E151E151C1538A203707FA2EDE007A2EC01C014031580EC0700A2140EA25CA25C027F
B5FCA291B6FC9139E00007F849481303A2495A130791C7FC5B130E5BA25B1378137013F0
EA03F8486C4A7EB56C48B512F0A3343C7BBB3E>65 D<0107B612FCEFFF8018C0903B000F
F0001FF04BEB07F81703021F15FC17014B14FEA2023F1400A24B1301A2147F18FC92C712
0318F84A140718F04AEC0FE0EF1FC00101ED3F80EF7F004AEB01FEEE07F849B612E05F91
39F80007F0EE01FC01076E7E177F4AEC3F80A2010F16C0171F5CA2131F173F5CA2133FEF
7F805C1800017F5D4C5A91C7485A5F49140FEE1FE0494A5A00014AB45AB748C7FC16F816
C037397BB83A>I<0207B512F0A391390007FC006F5AA215075EA3150F5EA3151F5EA315
3F5EA3157F93C7FCA35D5DA314015DA314035DA31407A25DA2140FA2003F5C5A141F485C
A24A5A12FC00E049C8FC14FE00705B495A6C485A381E0FC06CB4C9FCEA01F82C3B78B82C
>74 D<0107B512FCA25E9026000FF8C7FC5D5D141FA25DA2143FA25DA2147FA292C8FCA2
5CA25CA21301A25CA21303A25CA21307A25CA2130F170C4A141CA2011F153C17384A1478
A2013F157017F04A14E01601017F140317C091C71207160F49EC1F80163F4914FF000102
071300B8FCA25E2E397BB834>76 D<902607FFF8923807FFF0614F13E0D9000FEFF0004F
5AA2021F167FF1EFC0141DDA1CFCEC01CF023C16DF9538039F800238ED071FA20278ED0E
3F97C7FC0270151CA202F04B5AF0707E14E0037E14E0010117FE4D485A02C0EC0380A201
03ED0701610280140EA20107ED1C0305385B14006F137049160705E05B010EEC01C0A201
1E913803800F61011CEC0700A2013C020E131F4C5C1338ED1FB80178163F04F091C8FC01
705CA201F04A5B187E00015DD807F816FEB500C09039007FFFFC151E150E4C397AB84A>
I<902603FFF891B512E0A281D90007923807F8006F6E5A61020F5E81DA0E7F5DA2021E6D
1307033F92C7FC141C82DA3C1F5C70130EEC380FA202786D131E0307141C147082DAF003
143C70133814E0150101016E1378030014705C8201036E13F0604A1480163F010715C104
1F5B91C7FC17E149EC0FE360010E15F31607011E15FF95C8FC011C80A2013C805F133816
0013785F01F8157CEA03FC267FFFE0143CB51538A243397CB83E>I<0107B612F817FF18
80903B000FF0003FE04BEB0FF0EF03F8141FEF01FC5DA2023F15FEA25DA2147FEF03FC92
C7FCA24A15F817074A15F0EF0FE01301EF1FC04AEC3F80EFFE0001034A5AEE0FF091B612
C04CC7FCD907F8C9FCA25CA2130FA25CA2131FA25CA2133FA25CA2137FA291CAFCA25BA2
5B1201B512FCA337397BB838>80 D<0103B612F017FEEFFF80903B0007F8003FC04BEB0F
F01707020FEC03F8EF01FC5DA2021F15FEA25DA2143FEF03FC5DA2027FEC07F818F092C7
120F18E04AEC1FC0EF3F004A14FEEE01F80101EC0FE091B6128004FCC7FC9138FC003F01
03EC0F80834A6D7E8301071403A25C83010F14075F5CA2011F140FA25CA2133F161F4AEC
E007A2017F160F180E91C7FC49020F131C007F01FE153CB5913807F078040313F0CAEAFF
E0EF3F80383B7CB83D>82 D<92383FC00E913901FFF01C020713FC91391FC07E3C91393F
001F7C027CEB0FF84A130749481303495A4948EB01F0A2495AA2011F15E091C7FCA34915
C0A36E90C7FCA2806D7E14FCECFF806D13F015FE6D6D7E6D14E0010080023F7F14079138
007FFC150F15031501A21500A2167C120EA3001E15FC5EA3003E4A5AA24B5AA2007F4A5A
4B5A6D49C7FC6D133ED8F9F013FC39F8FC03F839F07FFFE0D8E01F138026C003FCC8FC2F
3D7ABA2F>I<0007B812E0A25AD9F800EB001F01C049EB07C0485AD900011403121E001C
5C003C17801403123800785C00701607140700F01700485CA2140FC792C7FC5DA2141FA2
5DA2143FA25DA2147FA292C9FCA25CA25CA21301A25CA21303A25CA21307A25CA2130FA2
5CEB3FF0007FB512F8B6FCA2333971B83B>I<14F8EB07FE90381F871C90383E03FE137C
EBF801120148486C5A485A120FEBC001001F5CA2EA3F801403007F5C1300A21407485C5A
A2140F5D48ECC1C0A2141F15831680143F1587007C017F1300ECFF076C485B9038038F8E
391F0F079E3907FE03FC3901F000F0222677A42A>97 D<ED01F815FFA3150316F0A21507
A216E0A2150FA216C0A2151FA21680A2153FA202F81300EB07FE90381F877F90383E03FF
017C5BEBF80112013803F00048485B120FEBC001121F5DEA3F801403127F01005BA21407
5A485CA2140FA248ECC1C0A2141F15C3ED8380143F1587007C017F1300ECFF076C485B90
38038F8E391F0F079E3907FE03FC3901F000F0253B77B92A>100
D<147F903803FFC090380FC1E090383F00F0017E13785B485A485A485A120F4913F8001F
14F0383F8001EC07E0EC1F80397F81FF00EBFFF891C7FC90C8FC5A5AA55AA21530007C14
381578007E14F0003EEB01E0EC03C06CEB0F806CEB3E00380781F83803FFE0C690C7FC1D
2677A426>I<ED07C0ED1FF0ED3E38ED7C3CEDF8FC15F9140115F1020313F8EDF0F01600
14075DA4140F5DA4141F5D010FB512C05B16809039003F800092C7FCA45C147EA414FE5C
A413015CA413035CA413075CA4130F5CA3131F5CA391C8FC5B121CEA7E3EA2EAFE3C137C
1378EAF8F01278EA3FC0EA0F80264C82BA19>I<EC07C0EC3FF09138FC38E0903901F01F
F0EB03E0903807C00FEB0F80011F1307D93F0013E05B017E130F13FE4914C01201151F12
03491480A2153F1207491400A25DA249137EA215FEA25D00031301140314076C6C485A00
00131FEB787BEB3FF390380FC3F0EB00031407A25DA2140F5D121C007E131F5D00FE49C7
FC147E5C387801F8387C07E0381FFF80D803FEC8FC24367CA426>I<EB03F0EA01FFA3EA
00075CA3130F5CA3131F5CA3133F91C8FCA35B90387E07F0EC1FFCEC783E9038FFE01F02
C01380EC800F1400485A16C05B49EB1F8012035BA2153F000715005BA25D000F147E5B15
FE5D121FD98001131C15F8163C003F01031338010013F0A216704814E0007E15F016E0ED
E1C000FE903801E38048903800FF000038143C263B7BB92A>I<EB01C0EB07E014F0130F
14E01307EB038090C7FCAB13F0EA03FCEA071EEA0E1F121CA212385B1270A25BEAF07E12
E013FEC65AA212015B1203A25B12075BA2000F13E013C013C1001F13C01381A2EB838013
03EB0700A2130E6C5AEA07F8EA01E0143879B619>I<EB0FC0EA07FFA3EA001F1480A213
3FA21400A25BA2137EA213FEA25BA21201A25BA21203A25BA21207A25BA2120FA25BA212
1FA25BA2123FA290C7FCA25AA2EA7E0EA212FE131EEAFC1CA2133C133812F81378EA7870
EA7CE0121FEA0F80123B79B915>108 D<D801E001FEEB07F03C07F803FF801FFC3C0E3C
0F07C0783E3C1E3E3C03E1E01F261C1F78D9F3C013803C383FF001F7800F02E014000078
01C013FE007018C002805B4A4848EB1F80EAF07FD8E07E5CA200000207143F01FE170049
5CA2030F5C0001177E495C18FE031F5C120349DA8001131C18F8033F153C000704031338
49020013F0A24B1570000F17E049017E15F019E003FEECE1C0001FEE01E34949903800FF
000007C70038143C3E2679A444>I<D801E013FE3A07F803FF803A0E3C0F07C03A1E3E3C
03E0261C1F787F39383FF00114E0007813C000708114804A485AEAF07FEAE07EA2000014
0701FE5C5BA2150F00015D5B151F5E12034990383F8380160316070007027F130049137E
A2160E000F147C49141E161C5E001FEC3C7849EB1FE00007C7EA0780292679A42F>I<14
7F903803FFC090380FC1F090381F00F8017E137C5B4848137E4848133E0007143F5B120F
485AA2485A157F127F90C7FCA215FF5A4814FEA2140115FC5AEC03F8A2EC07F015E0140F
007C14C0007EEB1F80003EEB3F00147E6C13F8380F83F03803FFC0C648C7FC202677A42A
>I<9039078007C090391FE03FF090393CF0787C903938F8E03E9038787FC00170497EEC
FF00D9F0FE148013E05CEA01E113C15CA2D80003143FA25CA20107147FA24A1400A2010F
5C5E5C4B5A131F5EEC80035E013F495A6E485A5E6E48C7FC017F133EEC70FC90387E3FF0
EC0F8001FEC9FCA25BA21201A25BA21203A25B1207B512C0A3293580A42A>I<3903C003
F0390FF01FFC391E783C0F381C7C703A3C3EE03F8038383FC0EB7F800078150000701300
151CD8F07E90C7FCEAE0FE5BA2120012015BA312035BA312075BA3120F5BA3121F5BA312
3F90C9FC120E212679A423>114 D<14FE903807FF8090380F83C090383E00E04913F001
78137001F813F00001130313F0A215E00003EB01C06DC7FC7FEBFFC06C13F814FE6C7F6D
13807F010F13C01300143F141F140F123E127E00FE1480A348EB1F0012E06C133E00705B
6C5B381E03E06CB45AD801FEC7FC1C267AA422>I<EB0380EB07C0130FA4131F1480A313
3F1400A35B137E007FB5FCA2B6FC3800FC00A312015BA312035BA312075BA3120F5BA312
1FEB801CA2143C003F1338EB0078147014F014E0EB01C0EA3E03381F0780380F0F00EA07
FCEA01F0183579B31C>I<13F8D803FEEB01C0D8078FEB03E0390E0F8007121E121C0038
140F131F007815C01270013F131F00F0130000E015805BD8007E133FA201FE14005B5D12
0149137EA215FE120349EBFC0EA20201131E161C15F813E0163CD9F003133814070001EC
F07091381EF8F03A00F83C78E090393FF03FC090390FC00F00272679A42D>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmmi6 6 14
/Fi 14 121 df<EB03E0EB0FF0EB1C38EB383CEB701CEBE01E1201EA03C0A2EA0780120F
13005AA2001E133E123EA2383FFFFE4813FCA2387C007C1478007813F812F814F0130114
E0A2387803C0A2EB07801400EA380E5B6C5AEA0FF0EA07C017257EA31D>18
D<0003B512FC120F5A4814F8397818180000E01338EAC03000001330A213701360EBE070
A21478EA01C0A21203EB807C0007133C143E380F003C000613181E167D9424>25
D<90381FFFFC90B5FC5A4814F83907C07C00380F003C001E131C48131E12381278A2485B
A35C1470007013F0495A6C485AD81C0FC7FCEA0FFEEA03F01E167E9424>27
D<140C141C143C1438A21478147014F014E0130114C0A21303148013071400A25B130E13
1E131CA2133C13381378137013F05BA212015B12035BA2120790C7FC5A120EA2121E121C
123C123812781270A212F05AA216317CA420>61 D<903AFFFE07FFF0A2903A07C0003E00
A249485BA449C75AA4013E495AA3013FB5FC495C90387C0003A349495AA44848495AA448
4849C7FCA300075C3AFFFE07FFF0A22C227CA132>72 D<D9FFE0EC0FFEEF1FFC01071680
1737010DED6F00EB0CF017CFEE018F0118159EEE031E02781306A201304A5A16181630A2
496C495A16C0A2ED018001C049485A141E15065DD801804A5A1518EC0F301560D803004A
5A15C01580260F80071307D8FFF8903800FFFED9F0065C37227CA13A>77
D<001FB612FCA29039003E007C003C151C00385B12300070151812605C5AA3C648481300
A4495AA4495AA4495AA449C8FCA35B381FFFFE5C26227DA124>84
D<3CFFFC01FFF007FF5C270FC0003FC712F849166018C07F00074AEB018003DF13031800
DA019F13061403031F5B0206141CEE80189026E00C0F5B0003131C02185C023014E05F02
60EB818014E002C00183C7FCD9E18013C601F11307D9F30013CCEA01F701F614D801FC14
F0A2495C5B5E495C15036C4891C8FC38237CA139>87 D<131FEBFF8C3801E0DE3803807E
3807007C48133C121E123E003C5B127CA3485BA215401560903801E0C012781303393807
E180391C1CF300380FF87F3807E03C1B177E9522>97 D<EB0FE0EB7FF83801F03C3803C0
1C3807803C380F007C121E003E133814005AA35AA400781304140C00381338003C137038
1F03E0380FFF803801FC0016177E951C>99 D<1338137CA2137813701300A7EA0780EA1F
C0EA38E01230EA60F0EAC1E0A3EA03C0A3EA0780A2EA0F0013041306EA1E0CA21318121C
EA1E70EA0FE0EA07800F237DA116>105 D<380F01F0381FC7F83831CE1CEA61F8EBF03C
00C1137C13E014383803C000A4485AA448C7FCA4121EA2120C16177D951D>114
D<EB3F80EBFFE03801E0F038038030EB00704813F0A2EB8040EBC00013FE3803FF806C13
C038003FE0EB03F0EA3000127800F813E0A24813C0EA600138780F80383FFE00EA07F814
177D951D>I<3801F01E3907FC7F80390E1CE1C038180F8100301383007013071260EC03
80D8001EC7FCA45BA21580003014C0397878018012F8EC030038F0FC0638E19C1C387F0F
F8381E03E01A177D9523>120 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmmi9 9 25
/Fj 25 121 df<EC7FE0903801FFFC903803C7FEEB0701EB0600153C010E1300130FA26D
7EA280A2806D7E801301806D7E8080903803FF80010F13C0EB3F3FEB7C1F01F813E0EA01
F03803E00F1207390FC007F01380121F123F010013E0A25A127EA315C05A140FA2007C14
80141F1500A26C133E5C6C13786C6C5A3807C1E03801FFC0D8007EC7FC1F367EB422>14
D<EC1F80EC7FC0903801F0F0EB03E0903807C078EB0F8090381F003C133EA249133E5BA2
485A1203A2485AA249137E120FA2485AA215FE003F14FC90C7FC90B5FCA25A15F8387E00
01140300FE14F05AA2EC07E0A215C048130FA2EC1F80A21500143EA25C00785BA2495A6C
485A495A6C485A49C7FCEA07FCEA03F01F367DB424>18 D<1307D90FC01338011F147C16
FC5CA2013F1301A202005BA2491303A2017E5CA201FE1307A2495CA20001140FA2495C17
800003021F13C016C149EC8180A20007EC3F836D017F130016034B5A3A0FFC03CF869039
FE070F8E9039DFFE07FC9039C3F801F0D81FC0C9FCA25BA2123FA290CAFCA25AA2127EA2
12FEA25A12382A327FA02E>22 D<013FB6128090B712C01203481680481600271F00C018
C7FC001C1438EA38010070143000601380EAE00300001470A2EB0700A25B15F0130E131E
A2013E7F133C137CA213FC497FA2000180A2485A157EA2D801C013382A217E9F2C>25
D<91B6FC01031580130F013F1500495C2701FF03FCC7FC3803F80048487F49137E485A12
1F49133E48C7127EA25A127EA215FE00FE5C5AA24A5AA24A5A007C5C14074A5A6C495A4A
C8FC6C137C380F81F83803FFE0C66CC9FC29217E9F2C>27 D<123C127E12FFA4127E123C
08087A8715>58 D<123C127EB4FCA21380A2127F123D1201A412031300A25A1206120E12
0C121C5A5A126009177A8715>I<1530157815F8A215F01401A215E01403A215C01407A2
1580140FA215005CA2143EA2143C147CA2147814F8A25C1301A25C1303A25C1307A2495A
A291C7FC5BA2131E133EA2133C137CA2137813F8A25B1201A25B1203A2485AA25B120FA2
90C8FC5AA2121E123EA2123C127CA2127812F8A25A12601D4B7CB726>61
D<127012FCB4FCEA7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF0EB07FCEB01FF9038007F
C0EC1FF0EC07FCEC01FF9138007FC0ED1FF0ED07FCED01FF9238007FC0EE1FF0EE07FCEE
01FEA2EE07FCEE1FF0EE7FC0923801FF00ED07FCED1FF0ED7FC04A48C7FCEC07FCEC1FF0
EC7FC04948C8FCEB07FCEB1FF0EB7FC04848C9FCEA07FCEA1FF0EA7FC048CAFC12FC1270
2F2E7AA93C>I<010FB612F017FEEFFF80903B003FC0003FE0EF0FF017074B14F8170302
7F15FCA292C7FCA25C18F84A140718F00101150F18E04AEC1FC0EF3F800103ED7F00EE01
FE4AEB07F891B612E04915809139F8001FF04AEB03FCEE00FE010F157FA24AEC3F80A201
1F16C0A25CA2133F18804A147FA2017FEDFF005F91C712014C5A494A5A4C5A49EC3FE000
01913801FF80B748C7FC16F816C036337DB23A>66 D<010FB5D8C03FB5FCA39026003FE0
C713804B1500A24B5CA2027F14016092C7FCA24A1403605CA201011507605CA20103150F
605C91B7FC5B6002F0C7121FA2010F153F605CA2011F157F95C7FC5CA2013F5D5F5CA201
7F14015F91C7FCA24914035F5B00011507B5D8FC03B512F0A340337DB240>72
D<010FB512F0A39026003FE0C7FC5DA25DA2147FA292C8FCA25CA25CA21301A25CA21303
A25CA21307A25CA2130FA25C170C011F151C17185C1738013F153017705C17E0137F1601
91C7EA03C0160749EC0F80161F49147F0001913803FF00B8FCA25E2E337DB234>76
D<90260FFFE092380FFFC06161D9003FEFE0004F5A19DFDA33F05EF0019F0273ED033F97
C7FC02631506180C02E35EDAE1F8EC187E14C118300101EE60FE61028115C0EF01800103
1681DA80FC90380301F81400170649ED0C0361010615181730010E017E140705605B010C
15C0A2011C913801800F610118EC030016060138013F141F4C5C01305CA201704A133F96
C8FC01605C6F5A01E05E4C137E000192C7FCD807F016FEB5D8801E90387FFFFC151C150C
4A337CB24A>I<ED07FC92387FFFC0913901F807F091390FE001F891391F80007E027EC7
7E4AEC1F80EB03F8D907E0EC0FC0494815E0011F1507494815F049C8FC13FEEF03F8485A
12035B12075B120F491507121FA2485AA34848ED0FF0A318E0171F90C9FC4817C0173F18
80177F6C17005F5F4C5A5F6C9038078003903A801FE007F0001F903978700FE09139E038
1FC03B0FC0C0183F8001C1027EC7FC3A07E1801CFCD803F1EB1DF8D801F9EB1FE02600FF
C01380013F9038FE000C90380FFFFC0101019E131C90C7001E13181738031F13785F1683
EEFFE0A25F5FA26F48C7FC6F5AED01F035447DB43D>81 D<0003B812F05A18E0903AF000
7F000FD80F8049130390C71401000E5C48EE00C01401121800384A1301A2003001031580
127000605CA20207140300E01700C74990C7FCA2140FA25DA2141FA25DA2143FA25DA214
7FA292C9FCA25CA25CA21301A25CA21303A25C497E001FB512FEA334337FB22D>84
D<B5D8F00FB590380FFFE061A2D807FCC7D87FC0903801FE00496E48EB00F80003197062
624F5AA24FC7FC167F19064C6C130E190CDB019F5C7FDB031F5C0001140661030C15E061
03184A5A153803304AC8FC1560EFE006DBC00F5BA29026FE01805C0000EB030060020615
7018604A5D141C0218ECE1805C05F3C9FC4A14F7EE07F66D4814FCA26D485C91C7FC5F01
7E5DA2017C5D13785F137070CAFC4B357CB249>87 D<133FEA1FFFA25B1200A35BA21201
A25BA21203A25BA21207A2EBE0F8EBE3FF390FEF07809038FC03C001F813E0EBF001D81F
E013F013C0138015F8123FA21300A248130315F0127EA2140700FE14E05AA2EC0FC0A2EC
1F80007C14005C147E003C137C003E5B381E01F0380F07C06CB4C7FCEA00FC1D357EB321
>98 D<ED01F815FFA216F01507A316E0A2150FA216C0A2151FA21680A2153FA2D901F813
00EB07FE90381F077F90387C03FF496C5AEA01F000031300485A495B120F381F8001A2D8
3F005BA214035A007E5CA2140712FE485C1640020F136016E0EDC0C0127CEC1FC1023F13
80003CEB7F81003EEBEF833A1E01C7C300390F0787C73907FE03FE3900F800F825357EB3
28>100 D<ED0F80ED3FE0ED7870913801F0F815E31403A2020713F0A291380FC1C0EDC0
00A4141F5DA4143F92C7FC011FB512805B1600D9007FC7FC147EA414FE5CA513015CA413
035CA413075CA4130F5CA45C131FA291C8FC121CEA7F1E133EA2EAFE3C5B1278EA70F0EA
3FC0EA0F8025457CB425>102 D<EC1F80EC7FE0903901F071C0903907C03FE090380F80
1F90381F000F5B137E017C14C013FC4848131FA248481480A2153F1207491400A25DA249
137EA215FEA25DA214013803E0034A5A3801F01F3800F83BEB3FF390380FC3F0EB000314
07A25DA2140F001C5C127F4A5A143F00FE91C7FC147E387801FC383C03F0381FFFC0D803
FEC8FC23317FA025>I<EB07E0EA03FFA25CEA001FA35CA3133F91C8FCA35B137EA313FE
9038FC0FE0EC3FF8ECF07E3901FFC03FEC001F5B49148012035B5B153F000715005BA25D
000F147E5B15FE5D121FEB8001EDF808161C003F01031318010013F01638020713304814
E0007E1570020313E0EDE1C000FE903801E38048903800FF000038143C26357DB32C>I<
011F131F90397FC07FE09039E3E1E0F09039C3E380783A01C1F7007CD981FE133CD983FC
133E00035BEB03F0163FEA0707120600025B1200010F147F167E5CA2011F14FE16FC5CA2
013FEB01F8A291380003F016E0491307ED0FC002801380ED1F009038FFC03E9038FEE0F8
9038FC7FE0EC1F80000190C8FCA25BA21203A25BA21207A25BB57EA3283083A027>112
D<EB01FCEB0FFF90383E03C090387800E04913603901E001E014030003130713C013E0EC
03806DC7FC13FF14F014FC6C7F6C7F6D1380130F9038007FC0141F140F007E130700FE14
80A3EC0F005A00C0131E6C5B00705B383C01F0380FFFC0D803FEC7FC1B227CA024>115
D<01F01507D803FC903903800F80D8071E903907C01FC0D80E1F130F121C00380180140F
0030021F1307013FEC8003007013000060160149133FD8E07E168000401500EA00FE4949
13030001170049137EA203FE5B00031606495B170E170CA24B131C4915186D15384A6C5B
17600001010314E03B00F8077E01C0903A7C0E3F078090273FFC0FFEC7FC903907F001F8
32227EA037>119 D<90391F801F8090397FE07FE09039E0F0E0703A01C0F9C0F8390380
7D833807007F000E1403000C15F0001C137E0018EC01C002FEC7FC00385B1210C7FC1301
5CA31303A25C1640010714E016C0001C5B007E1401010F148000FE1403011FEB0700011B
130E39F839F01C397070F878393FE07FE0390F801F8025227EA02C>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk cmr8 8 74
/Fk 74 124 df<14FF010713E090381F80F090383E003849137C4913FC485A1203491378
153092C7FCA7157CB612FCA23803E000157CB3A5486C13FE3A7FFF0FFFE0A2232F7FAE27
>12 D<13E0EA01F01203A2EA07E0EA0FC0EA1F00121E5A5A12E012400C0C72AD23>19
D<6C134038E001C0EAF807383E1F00EA1FFEEA07F86C5AEA00C0120878AA23>I<003C13
F0387E01F838FF03FCA2EB83FEA2EA7F81383D80F600011306A30003130EEB000CA24813
1C00061318000E13384813704813E0387001C00060138017157EAD23>34
D<EB01F0EB07FCEB1F0CEB3E0EEB3C06EB78078013F8A45C1406140E5C5CEB7C3014704A
EB3FFFEB7FC04AEB0FF86DC7EA07E0EE03807F496CEB0700017F1406D9EFC0130ED801CF
5C260387E01318260707F01338D80F035C261E01F81360003E6D13E0486C6C485A027E5B
00FCEB3F030387C7FCEC1FCEEC0FDCDA07F813066C6D5A007E6D7E6F130C6CD907FE131C
3B1F800E1F80383B0FC07C07E0F03B03FFF001FFE03B007F80007F8030307DAE37>38
D<13031307130E131C1338137013F0EA01E013C01203EA0780A2EA0F00A2121EA35AA45A
A512F8A25AAB7EA21278A57EA47EA37EA2EA0780A2EA03C0120113E0EA00F01370133813
1C130E1307130310437AB11B>40 D<12C07E12707E7E7E120FEA0780120313C0EA01E0A2
EA00F0A21378A3133CA4131EA5131FA2130FAB131FA2131EA5133CA41378A313F0A2EA01
E0A2EA03C013801207EA0F00120E5A5A5A5A5A10437CB11B>I<123C127EB4FCA21380A2
127F123D1201A312031300A25A1206120E5A5A5A126009157A8714>44
D<B512C0A412047F9018>I<123C127E12FFA4127E123C08087A8714>I<EB3FC0EBFFF038
03E07C48487E48487E497E001EEB0780A2003E14C0A248EB03E0A500FC14F0B0007C14E0
A3007E1307003E14C0A36CEB0F806C14006D5A3807C03E3803F0FC3800FFF0EB3FC01C2D
7DAB23>48 D<130C133C137CEA03FC12FFEAFC7C1200B3B113FE387FFFFEA2172C7AAB23
>I<EB7F803801FFF0380780FC380E003F48EB1F8048EB0FC05A0060EB07E012F000FC14
F07E1403A3007C1307C7FCA215E0140F15C0141F1580EC3F00147E147C5C495A495A495A
495A011EC7FC5B5B4913305B485A4848136048C7FC000E14E0001FB5FC5A4814C0B6FCA2
1C2C7DAB23>I<EB3FC03801FFF03807C0FC380E007E487FEC1F80003F14C0A2EB800F13
00A2000C131FC7FC1580A2EC3F00143E5C5CEB03F0EBFFC014F0EB00FC143FEC1F8015C0
140F15E0A2EC07F0A21238127C12FEA3EC0FE012F8006014C00070131F6C1480001EEB3F
00380780FC3801FFF038007FC01C2D7DAB23>I<140EA2141E143EA2147E14FEA2EB01BE
1303143E1306130E130C131813381330136013E013C0EA0180120313001206120E120C5A
123812305A12E0B612FCA2C7EA3E00A9147F90381FFFFCA21E2D7EAC23>I<000CEB0180
380FC01F90B512005C5C14F014C0D80C7EC7FC90C8FCA8EB1FC0EB7FF8380DE07C380F80
1F01001380000E130F000CEB07C0C713E0A2140315F0A4127812FCA448EB07E012E00060
14C00070130F6C14806CEB1F006C133E380780F83801FFE038007F801C2D7DAB23>I<EB
03F8EB0FFE90383E0780EBF8013901F007C03803E00FEA07C0EA0F80A2391F00078091C7
FC123EA2127EA2127CEB0FC038FC3FF0EBF07C38FDC01EB4487E01001380EC07C04814E0
A214034814F0A4127CA3127EA2003E14E01407121E001F14C06CEB0F803907801F003803
C03E6C6C5A38007FF0EB1FC01C2D7DAB23>I<1230123C003FB512F8A215F05A15E03970
0001C000601480140348EB0700140E140CC7121C5C143014705C495AA2495AA249C7FCA2
5B130E131EA2133EA3133C137CA413FCA913781D2E7CAC23>I<EB1FC0EBFFF03803E07C
3807801E48487E001EEB0780A248EB03C0A4123E1407003F1480381FC00F01E01300EBF8
1E6C6C5A3807FFF86C13E0C6FCEB3FF8EBFFFC3803C7FFD807831380D81F0013C0001E13
3F48EB1FE0007C13070078EB03F012F84813011400A46C14E000781301007C14C0003C13
036CEB0780390F800F003807E03C3801FFF038003FC01C2D7DAB23>I<EB3F80EBFFF038
03E0783807C03E48487E48487E003E14801407007E14C0127C00FC14E01403A315F0A500
7C1307127EA2003E130F7E6C131F3807803B3803E0F33800FFC390383F03E013001407A2
15C0A2140F001E1480003F14005C143E143C003E5B001C5B380E03E03807FF80D801FEC7
FC1C2D7DAB23>I<123C127E12FFA4127E123C1200AD123C127E12FFA4127E123C081D7A
9C14>I<EC3FF0903801FFFE903907C00F8090391E0001E00138EB007001F0143CD801C0
140E48488048C8EA0380000690380FC001000ED97FF013C03B1C01F03C00E0271803E00E
1360273807C00713703B300F800380303B701F0001F83800601618013E1300A200E0161C
4848150CA86C7E1260A26D0101131C0070161839300F8003393807C007271803E00E1338
3B1C01F03C7C703B0E007FF03FE0000690390FC00F80000790C9FC6C7E6C7ED800F0153C
0138EC01FC011EEC1FF0903A07C003FF800101B5EAF8009026003FFEC7FC2E307CAE37>
64 D<4A7E4A7EA34A7EA24A7EA3EC1BF81419A2EC30FCA2EC70FEEC607EA24A7EA34948
6C7EA2010380EC000FA201066D7EA3496D7EA2011FB57EA29038180001496D7EA349147E
A201E0147F4980A20001ED1F801203000716C0D80FF0EC3FE0D8FFFC0103B5FCA2302F7E
AE35>I<B612FCEDFF803A03F8000FC00001EC03F06F7E6F7E82167E167FA6167E16FE5E
4B5A4B5AED0FE0ED7F8090B6C7FC16E09039F80003F0ED01FC6F7E167F821780161F17C0
A61780163F17005E16FEED03FC0003EC0FF0B712C04BC7FC2A2D7DAC32>I<DA1FF013C0
9138FFFE01903903F00F8390390F8001E3013FC71277017C143F4848141F4848140F4848
1407A248481403121F491401123F90C8FC481500A300FE1600AB127F17C0A27E7F001F15
016D1580120F6C6C1403EE07006C6C14066C6C140ED8007C5C013F147890390F8001E090
3903F00FC0902600FFFEC7FCEC1FF02A2F7CAD33>I<B612F815FF3A03F8001FE00001EC
03F0ED00F8167E82EE1F80160F17C0EE07E0A2EE03F0A217F81601A317FCAA17F8A3EE03
F0A217E0160717C0160FEE1F80EE3F00167E5EED03F00003EC1FE0B7128003F8C7FC2E2D
7DAC36>I<B712FEA23903F800010001EC003E828282A282A3178016011518A293C7FCA3
1538157815F890B5FCA2EBF800157815381518A21760A392C712C0A4160117801603A216
07160F163F0003913801FF00B8FCA22B2D7EAC30>I<B712FCA23903F800030001EC007C
163E161E160EA21606A3160716031518A21600A31538157815F890B5FCA2EBF800157815
381518A592C7FCAB487EB512F8A2282D7EAC2E>I<DA1FF013C09138FFFE01903903F00F
8390390F8001E3013FC71277017C143F4848141F4848140F48481407A248481403121F49
1401123F90C8FC481500A300FE1600A992381FFFFEA2007F9138001FE0EE0FC0A27E7F12
1F7F120F6C7EA26C7E6C6C141FEA007C013F143FD90F8013F3903903F007C10100B51200
DA1FF813002F2F7CAD37>I<B539F03FFFFCA2D803FCC713006C48147EB290B612FEA201
F8C7127EB3486C14FFB5D8F03F13FCA22E2D7DAC35>I<B512F0A23803FC006C5AB3B3A3
487EB512F0A2142D7EAC19>I<90387FFFF0A201001300147EB3AD123812FEA314FE5C12
78387001F86C485A381E07E03807FF80D801FCC7FC1C2E7DAC24>I<B500F0EB7FFEA2D8
03FCC7EA1FF06C48EC0FC01700161E16385E5E4B5A4B5A4BC7FC150E5D5D15F0EC01C04A
5A4A7E4A7E141F4A7EEC73F8ECE1FCEBF9C09038FF80FE9038FE007F497F49806F7E6F7E
1507826F7E6F7EA26F7E167F821780EE1FC017E0486CEC3FF0B5D8F001B5FCA2302D7DAC
37>I<B512F8A2D803FCC8FC6C5AB3A7160CA41618A41638A2167816F81501ED07F00003
141FB7FCA2262D7EAC2C>I<D8FFF8923807FFC06D5D0003EFF00000015F01BE151BA201
9F1533A3D98F801463A2D987C014C3A2D983E0EB0183A3D981F0EB0303A2D980F81306A3
027C130CA26E1318A36E1330A291380F8060A2913807C0C0A3913803E180A2913801F300
A3EC00FEA2157C487ED80FF04B7EB5D93801B512C0A23A2D7DAC41>I<D8FFF8903803FF
FC7F00019138003FC06DEC0F006D1406EBBF80A2EB9FC0EB8FE0138780EB83F8138180EB
80FE147E147FEC3F80EC1FC0140F15E0EC07F0140315F8EC01FC140015FE157FED3F8615
1F16C6ED0FE6150716F6ED03FE1501A21500167E163EA2486C141ED80FF0140EB5FC1606
2E2D7DAC35>I<EC3FF0903801FFFE903907E01F8090391F8007E090393E0001F001FCEB
00FC4848147E4848804848EC1F8049140F000F16C04848EC07E0A248C8EA03F0A24816F8
A2007E1501A200FE16FCAA007FED03F8A36C16F06D1407001F16E0A26C6CEC0FC06D141F
000716806C6CEC3F006C6C147E6C6C5C017E495A90391F8007E0903907E01F80902601FF
FEC7FC9038003FF02E2F7CAD37>I<B612FCEDFF803A03F8000FE00001EC03F0ED00F882
167E167F821780A617005E167E5E5EED03F0ED0FE090B6128003FCC7FC01F8C9FCB2487E
B512F0A2292D7EAC30>I<B612C015FC3903F8007F0001EC0FC06F7E6F7E6F7E82150082
A55E15015E4B5A4B5A4B5A037FC7FC90B512FC15F09038F800FC153E6F7E150F826F7EA5
82A5170316F815031707486C903801FC0EB539F000FE1CEE3FF8C9EA07E0302E7DAC34>
82 D<90383F80303901FFF0703807C07C390F000EF0001E130748130348130114001270
00F01470A315307EA26C1400127E127FEA3FE013FE381FFFE06C13FC6C13FF00011480D8
003F13E013039038003FF0EC07F81401140015FC157C12C0153CA37EA215787E6C14706C
14F06CEB01E039F78003C039E3F00F0038E07FFE38C00FF01E2F7CAD27>I<007FB712F8
A29039000FC003007C150000701638A200601618A200E0161CA248160CA5C71500B3A94A
7E011FB512E0A22E2D7EAC33>I<B539F003FFFCA2D803FCC7EA3FC06C48EC0F001606B3
AB160E0000150C7F161C017C1418017E14386D5C6D146090390F8001E0903907E0038090
2601F80FC7FC9038007FFCEC0FF02E2E7DAC35>I<B53C801FFFF001FFF8A22707FC0001
90C7EA3FC0D803F06D48EC1F00047E140EA26C6C027F140CA26D171C0000DBDF801318A2
6D1738017E9026018FC01330A2017F17706D90260307E01360A2028016E0011F90260603
F05BA202C01501010F90260C01F85BA202E01503010790261800FC90C7FCA202F05D0103
49EB7E06A202F8150E010149EB3F0CA202FC151C010049EB1F98A202FE15B8DA7F80EB0F
F0A2023F5D92C71207A26E5D021E1403A2020E5D020C1401452E7FAC48>87
D<3B7FFFE003FFF8A2000390C713806C48EC7E000000157C017F14786D14706E5B6D6C5B
6D6C485A15036D6C48C7FC903803F80601015BECFC1C6D6C5AEC7F305DEC3FE06E5A140F
816E7E81140DEC1DFCEC38FEEC307F14609138E03F8049486C7EEC800FD903007F496D7E
010E6D7E130C011C6D7E496D7E49147E167F01F0EC3F80000316C0D80FF8EC7FE0D8FFFE
0103B5FCA2302D7EAC35>I<B500C090380FFFC0A2D807FEC73801FE006C48EC00F80001
16E06C6C5D1601017F4A5A6D6C91C7FC5E6D6C130E6D6C130C5E6D6C13386D6C13305E6D
6C13E06D6C5B4B5AEC7F03DA3F83C8FC1586EC1FCEEC0FEC15F814076E5AB04A7E49B512
C0A2322D7FAC35>I<003FB612C0A29038F0001F0180EB3F80003EC7EA7F00123C003814
FE4A5A5A4A5A4A5A12604A5A4A5AA2C7485A4AC7FCA214FE495AA2495A5C1307495AA249
5A495A166049C7FC13FEA2485A484814E0A2485A484814C01501485A48481303150748C7
121F00FE14FFB7FCA2232D7CAC2B>I<EAFFE0A3EAE000B3B3B3A7EAFFE0A30B4379B114>
I<0003130C48131C000E13384813704813E0003013C0EA700100601380A2EAE00300C013
00A300DE137800FF13FCEB83FEA2EA7F81A2383F00FC001E1378171577AD23>I<EAFFE0
A31200B3B3B3A712FFA30B437FB114>I<13FF000713C0380F01F0381C00F8003F137C80
A2143F001E7FC7FCA4EB07FF137F3801FE1FEA07F0EA1FC0EA3F80EA7F00127E00FE1406
5AA3143F7E007E137F007FEBEF8C391F83C7FC390FFF03F83901FC01E01F207D9E23>97
D<EA07C012FFA2120F1207AC14FE9038C7FF809038CF03E09038DC01F09038F8007C4913
7E49133E497F1680A2150F16C0A9ED1F80A216005D6D133E6D5B01B05B9038BC01F09038
0E07E0390607FF80260001FCC7FC222F7EAD27>I<EB1FE0EB7FFC3801F01E3803E00739
07C01F80EA0F80EA1F005A003EEB0F00007E90C7FCA2127C12FCA9127EA215C07E6C1301
01801380380FC0033907E007003801F03E38007FF8EB1FC01A207E9E1F>I<15F8141FA2
14011400ACEB0FE0EB7FF83801F81E3803E0073807C003380F8001EA1F00481300123E12
7EA25AA9127C127EA2003E13017EEB8003000F13073903E00EFC3A01F03CFFC038007FF0
90391FC0F800222F7EAD27>I<EB1F80EBFFF03803E0783807C03E380F801E381F001FEC
0F80123E007E130715C0127C12FCA3B6FCA200FCC8FCA5127EA2003E14C0123F6C130139
0F80038001C013003803E00F3801F03C38007FF8EB1FC01A207E9E1F>I<EB03F0EB0FFC
EB3E1EEB7C3F13F8EA01F0A23803E00C1400AAB512E0A23803E000B3A6487E387FFF80A2
182F7FAE16>I<013F13F89038FFC3FE3903E1FF1E3807807C000F140C391F003E00A200
3E7FA76C133EA26C6C5A00071378380FE1F0380CFFC0D81C3FC7FC90C8FCA3121E121F38
0FFFF814FF6C14C04814F0391E0007F848130048147C12F848143CA46C147C007C14F86C
EB01F06CEB03E03907E01F803901FFFE0038003FF01F2D7E9D23>I<EA07C012FFA2120F
1207AC14FE9038C3FF809038C703E09038DE01F013F8496C7EA25BA25BB2486C487E3AFF
FE1FFFC0A2222E7EAD27>I<EA0780EA0FC0EA1FE0A4EA0FC0EA0780C7FCA8EA07C012FF
A2120F1207B3A5EA0FE0EAFFFCA20E2E7EAD14>I<EA07C012FFA2120F1207ADEC1FFEA2
EC0FF0EC07C05D020EC7FC5C5C5C5CEBC3C013C7EBCFE0EBDFF013F9EBF0F8497EEBC07E
143E80816E7E14076E7E816E7E486C487E3AFFFE07FF80A2212E7EAD25>107
D<EA07C012FFA2120F1207B3B3A3EA0FE0EAFFFEA20F2E7EAD14>I<2607C07FEB07F03B
FFC3FFC03FFC903AC783F0783F3C0FCE01F8E01F803B07DC00F9C00F01F8D9FF8013C049
90387F000749137EA249137CB2486C01FEEB0FE03CFFFE0FFFE0FFFEA2371E7E9D3C>I<
3807C0FE39FFC3FF809038C703E0390FDE01F0EA07F8496C7EA25BA25BB2486C487E3AFF
FE1FFFC0A2221E7E9D27>I<EB1FE0EB7FF83801F03E3803C00F3907800780390F0003C0
4814E0003EEB01F0A248EB00F8A300FC14FCA9007C14F8A26CEB01F0A26CEB03E0A2390F
8007C03907C00F803901F03E0038007FF8EB1FE01E207E9E23>I<3807C0FE39FFC7FF80
9038CF03E0390FDC01F03907F800FC49137E49133E49133FED1F80A3ED0FC0A8151F1680
A2ED3F00A26D137E6D137C5D9038FC01F09038CE07E09038C7FF80D9C1FCC7FC01C0C8FC
A9487EEAFFFEA2222B7E9D27>I<380781F838FF87FEEB8E3FEA0F9CEA07B813B0EBF01E
EBE000A45BB0487EB5FCA2181E7E9D1C>114 D<3801FE183807FFB8381E01F8EA3C0048
1378481338A21418A27E7EB41300EA7FF06CB4FC6C13C06C13F0000113F838001FFC1301
38C0007E143EA26C131EA27EA26C133CA26C137838FF01F038E3FFC000C0130017207E9E
1C>I<1360A413E0A312011203A21207121FB512F0A23803E000AF1418A714383801F030
14703800F860EB3FE0EB0F80152A7FA81B>I<D807C013F800FF131FA2000F1301000713
00B21401A314033803E007EC0EFC3A01F81CFFC038007FF890391FE0F800221F7E9D27>
I<3AFFFC01FFC0A23A0FE0007E000007147C15380003143015706C6C1360A26C6C5BA390
387C0180A26D48C7FCA2EB3F07EB1F06A2EB0F8CA214DCEB07D8A2EB03F0A36D5AA26D5A
221E7F9C25>I<3BFFFC3FFE07FFA23B0FE003F001F801C09038E000F00007010114E081
2603E00314C0A2913807F8012701F006781380A29039F80E7C030000D90C3C1300A29039
7C181E06A2151F6D486C5AA2168C90391F600798A216D890390FC003F0A36D486C5AA36D
C75A301E7F9C33>I<3AFFFC07FF80A23A0FF003FC000003EB01F0000114C06D485A0000
91C7FCEB7C06EB3E0E6D5A14B8EB0FB0EB07E013036D7E497E1307EB067C497EEB1C1F01
387FEB700F496C7E6E7ED803C07F00076D7E391FE003FC3AFFF007FFC0A2221D7F9C25>
I<3AFFFC01FFC0A23A0FE0007E000007147C1538000314306D137000011460A26C6C5BA2
EBFC01017C5BEB7E03013E90C7FCA2EB1F06A2148EEB0F8CA2EB07D8A2EB03F0A36D5AA2
6D5AA2495AA2130391C8FC1278EAFC06A25B131CEA7838EA7070EA3FE0EA0F80222B7F9C
25>I<003FB51280A2EB003F003C14000038137E00305BEA700100605B495A495A130F00
005B495A49C7FC5B137E9038FC0180EA01F8120313F03807E003EA0FC0001F1400138048
485A007E5B00FE133FB6FCA2191D7E9C1F>I<B712C0A22202809223>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fl cmr6 6 5
/Fl 5 101 df<13E01201120712FF12F91201B3A7487EB512C0A212217AA01E>49
D<EA01FC3807FF80381C0FC0383003E0386001F0EB00F812F86C13FCA2147C1278003013
FCC7FC14F8A2EB01F0EB03E014C0EB0780EB0F00131E13385B5B3801C00CEA0380380600
185A5A383FFFF85AB512F0A216217CA01E>I<13FF000313C0380F03E0381C00F014F800
3E13FC147CA2001E13FC120CC712F8A2EB01F0EB03E0EB0FC03801FF00A2380003E0EB00
F01478147C143E143F1230127812FCA2143E48137E0060137C003813F8381E03F0380FFF
C00001130018227DA01E>I<14E01301A213031307A2130D131D13391331136113E113C1
EA01811203EA07011206120C121C12181230127012E0B6FCA2380001E0A6EB03F0EB3FFF
A218227DA11E>I<140F14FFA2141F80A913FF000313CF3807C0FF380F003F001E7F487F
127C127812F8A71278127C123C003E5B6CEB3F80390FC1EFF03803FF8F3900FE0F001C24
7DA222>100 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fm cmsy9 9 6
/Fm 6 113 df<007FB712FCB812FEA26C16FC2F047A943C>0 D<123C127E12FFA4127E12
3C08087A9615>I<0060153000F815F86C1401007EEC03F06CEC07E06C6CEB0FC06C6CEB
1F806C6CEB3F006C6C137E6C6C5B6C6C485A90387E03F06D485A90381F8FC090380FDF80
6DB4C7FC6D5A6D5AA2497E497E90380FDF8090381F8FC090383F07E090387E03F0496C7E
48486C7E4848137E48487F4848EB1F804848EB0FC048C7EA07E0007EEC03F048EC01F848
140000601530252475A43C>I<127012FCB4FCEA7FC0EA1FF0EA07FCEA01FF38007FC0EB
1FF0EB07FCEB01FF9038007FC0EC1FF0EC07FCEC01FF9138007FC0ED1FF0ED07FCED01FF
9238007FC0EE1FF0EE07FCEE01FEA2EE07FCEE1FF0EE7FC0923801FF00ED07FCED1FF0ED
7FC04A48C7FCEC07FCEC1FF0EC7FC04948C8FCEB07FCEB1FF0EB7FC04848C9FCEA07FCEA
1FF0EA7FC048CAFC12FC1270CBFCAC007FB712FCB812FEA26C16FC2F3E7AB03C>21
D<D97F8015402601FFE015E0000713F84813FE486D7E486E13019026807FF014C0277E00
1FFC13030078D907FF130F007001019038C03F8000F06D6CB5FC486E1400030F5B03035B
030013F00040ED3FC0CCFCA4D97F8015402601FFE015E0000713F84813FE486D7E486E13
019026807FF014C0277E001FFC13030078D907FF130F007001019038C03F8000F06D6CB5
FC486E1400030F5B03035B030013F00040ED3FC033247CA43C>25
D<1930197819F8A2F001F0A2F003E0A2F007C0A2F00F80A2F01F00A2183EA260A260A24D
5AA24D5AA24D5AA24D5AA24DC7FCA2173EA25FA25FA24C5A13C000014B5AEA07E0000F4B
5AEA3FF000734B5AEAE3F800C14BC8FCEA01FC0000153E7F017E5C137F6D5CA26E485A13
1F6E485A130F6E485A13076E485A13036E48C9FC1301153E14FC01005B14FEEC7EF8147F
6E5AA26E5AA26E5AA26E5A92CAFC3D4C7B8340>112 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fn cmcsc10 10 28
/Fn 28 123 df<B512FCA516057E941F>45 D<121C127FEAFF80A5EA7F00121C09097788
1B>I<150EA3151FA24B7EA34B7EA3EDDFE0A202017F158FA29138030FF81507A202067F
1503020E7FEC0C01A2021C7FEC1800A24A80167FA24A6D7EA202E0804A131FA249488016
0FA249B67EA249810106C71203A249811601A2498182A2496F7EA20170820160153F13E0
6D821203D80FFCED7FF8B56C010FB512E0A33B3C7CBB44>65 D<DB7FC01330912607FFF8
1370023F13FE913AFFC01F80F0903A03FE0003E1D907F8EB00F3D91FE0147B4948143F49
48141F49C8120F4848150748481503A24848150148481500A2485A1870123F5B1830127F
A349160012FFAB127F7F1830A2123FA27F001F177018606C7E18E06C6C16C06C6C150118
806C6C15036C6CED07006D6C5C6D6C141E6D6C5CD907F85CD903FEEB01E0903A00FFC00F
C0023FB5C7FC020713FC9138007FE0343D7ABA41>67 D<B612C0A3C6EBC0006D5AB3B3AD
497EB612C0A31A397CB822>73 D<B5933801FFFE6E5DA2000119002600DFC0ED06FEA2D9
CFE0150CA3D9C7F01518A2D9C3F81530A3D9C1FC1560A2D9C0FE15C0A3027FEC0180A26E
6CEB0300A36E6C1306A26E6C5BA26E6C5BA36E6C5BA26E6C5BA36E6C5BA292387F0180A3
DB3F83C7FCA2ED1FC6A3ED0FECA2ED07F8A3486C6D5A487ED80FFC6D48497EB500C092B5
12FEA26F5A47397BB852>77 D<B7FC16F016FE000190398001FF806C90C7EA3FE0EE0FF0
707E707E707EA2838284A695C7FC5E5F5F1603EE07F04C5AEE3F80DB01FEC8FC91B512F8
16E091380003FCED00FEEE7F80707E707E707EA2160783A583A61930A28316031970486D
6D6C1360B66D14E094387F81C094383FC380CA380FFF00EF01FC3C3B7CB842>82
D<003FB812FCA3D9C001EB800390C790C7FC007C173E0078171E0070170EA300601706A4
00E01707481703A4C81500B3B0020313C0010FB612F0A338397CB841>84
D<B500FE91380FFFF8A3000301C0020113806C90C9EA7E006C173C6E1538017F1630A26E
1570013F166080011F5EA26E1401010F5E8001074BC7FCA26E5C010315068001015DA26D
6C5CA281027F5CA26E6C5BA281021F5C81020F495AA215F8020749C8FC15FC02031306A2
EDFE0E0201130C15FF6E5BA216B8ED7FB016F06F5AA36F5AA26F5AA36FC9FCA23D3B7DB8
44>86 D<003FB712E0A301FCC7EA7FC013E00180ECFF8090C7481300123E003C4A5A0038
4A5A127800704A5A4B5AA24B5A0060147F5E4B5A5CC791C7FC4A5AA24A5A4A5AA24A5A4A
5AA24A5A4A5AA24990C8FC495AA2495A49481430A2495A133F5C495A01FF15705C4890C8
FCA2484815F0484815E0A2484814014848140316074848140F4848143FED01FFB8FCA32C
397AB838>90 D<1407A24A7EA34A7EA3EC37E0A2EC77F01463A2ECC1F8A201017F1480A2
903803007EA301067FA2010E80010C131FA2496D7EA2013FB57EA29038300007496D7EA3
496D7EA200018149130012036D801207D81FE0903801FF80D8FFF8010F13F8A22D2C7DAB
33>97 D<91383FC006903901FFF80E90390FE03E1E90381F0007017EEB03BE01F8EB01FE
484813004848147E0007153E485A001F151E5B003F150E90C8FC5A1606A212FE1600AA00
7F1506A37E6D140E001F150C7F000F151C6C6C1418000315386C6C14706C6C14E0017EEB
01C0011FEB078090390FE03E00903801FFF89038003FC0272D7BAB31>99
D<B612F015FE3907F8007F6C48EB0FC0ED03E06F7E6F7E167C167E82A2EE1F80A217C016
0FA317E0AA17C0A3EE1F80A217005E163E5E16FC4B5A4B5AED0FC0486CEB7F80B600FEC7
FC15F02B2B7CAA34>I<B712E0A23907F8000F6C481303ED00F01670A21630A41618A215
C01600A31401A2140790B5FCA2EBF0071401A21400A21606A21500A2160CA4161CA2163C
167C16F8486C1307B7FCA2272B7CAA2E>I<B712C0A23907F8001F6C481303ED01E01500
A21660A41630A215C01600A31401A2140790B5FCA2EBF0071401A21400A492C7FCAB487E
B512E0A2242B7CAA2C>I<91383FE003903901FFF807903907E01E0F90391F00078F017E
EB01DF496DB4FC484880484880484880485A001F815B003F8190C8FC5A82A212FE93C7FC
A892383FFFF8A2007F02001380EE3F00A27E7F121F7F120F6C7E6C7E6C6C5C6C7E017E5C
011FEB01CF903907E00F87903901FFFE039026003FF0C7FC2D2D7BAB35>I<B512C0A238
07F8006C5AB3B3487EB512C0A2122B7CAA19>105 D<B500C0EBFFF8A2D807F8C7EA7FC0
6C481500167C167816E04B5A4B5A4BC7FC150E5D5D15F0EC01C04A5A4AC8FC5C4A7E4A7E
4A7EEBF1E79038F387F09038F703F89038FE01FC13FC496C7E49137F6F7EA26F7E6F7E15
07826F7E6F7EA26F7E82EE7F80486CECFFC0B5D8C00313FCA22E2B7CAA35>107
D<B512E0A2D807F8C8FC6C5AB3A61660A416C0A31501A21503A21507ED1F80486C13FFB7
FCA2232B7CAA2B>I<D8FFF0ED3FFC6D157F0007178000031700017C15DFA26DEC019FA3
6DEC031FA26D6C1306A36D6C130CA26D6C1318A26D6C1330A36D6C1360A2027C13C0A391
383E0180A291381F0300A3EC0F86A2EC07CCA3EC03F8A2486C6C5AA2D81FE0ED3F803CFF
FC00E007FFFCA2362B7CAA3E>I<D8FFF0903807FFE07F0007020013006C6C143C7F017F
14187F806D7E130F806D7E6D7EA26D7E6D7E147E147FEC3F80141F15C0EC0FE0EC07F014
0315F8EC01FC140015FE157FED3F98151F16D8ED0FF81507A215031501A2486C13001678
D81FE01438EAFFFC16182B2B7CAA33>I<EC7FC0903803FFF890380FC07E90393F001F80
017CEB07C04848EB03F048486D7E4913004848147C000F157E484880A248C8EA1F80A248
16C0A2007E150FA200FE16E0AA007FED1FC0A36C16806D143F001F1600A26C6C147E6C6C
5CA26C6C495A6C6C495AD8007CEB07C0013FEB1F8090260FC07EC7FC903803FFF8903800
7FC02B2D7BAB35>I<B67E15F03907F800FE6C48133FED0FC06F7EA26F7E82A65E4B5AA2
4B5A033FC7FC15FE90B512F05D9038F001F8EC007E816F7EA26F7EA582A4171816F01507
1738486C903803F830B5D8C00113709238007FE0C9EA1F802D2C7CAA32>114
D<017F13603901FFE0E0380780F9380E001F48130748130312780070130100F01300A315
607EA26C14007E127F13C0EA3FFEEBFFE06C13F8000713FE6C7FC61480010F13C01300EC
0FE01407EC03F01401A212C01400A37E15E06C1301A26CEB03C06CEB0780B4EB0F0038F3
E01E38E0FFF838C01FE01C2D7BAB26>I<007FB712C0A23A7E003FC00F007890381F8003
007015011600126000E016E0A2481660A5C71500B3A8EC7FE0011FB57EA22B2B7DAA31>
I<B539C007FFE0A2D807F8C713006C48143CA21618B3A916386C6C1430A2000015706D5C
017C5C6D13016D495A90260F800FC7FC903803E03C903800FFF8EC3FC02B2C7CAA33>I<
B5903B7FFF800FFF80A2D80FF8903B07FC0003FC006C486D486D5A725A000302015DA26C
6C8061A26C6C496C495A167EA2017ED9077F49C7FCED063FA26D010EEB8006ED0C1FA26D
6C486C6C5AA36D6C486C6C5AA36D6C486C6C5AA21870903B03F0C001F860A202F815E090
3B01F98000FCC0A202FD14FD6DB4C7EA7F80A3027E6EC8FCA3023C141EA30218140C412C
7EAA45>119 D<003FB6FCA29038E0007F90C712FE003E495A123C0038495A48495AA24A
5A00605C141F4A5AA2C748C7FC14FEA2495A495AA2495A5C130F495AA2495A49C8FCED01
8013FE485AA2485A4913031207485AED0700485A48485B5D48C75A00FE49B4FCB7FCA221
2B7BAA2A>122 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fo cmbx9 9 33
/Fo 33 123 df<B512FCA816087F931D>45 D<120FEA3FC0EA7FE0EAFFF0A6EA7FE0EA3F
C0EA0F000C0C7A8B19>I<147814F81303131FEA03FFB5FCA3EAFC1F1200B3B2007FB512
FEA41F317AB02C>49 D<EB1FFC90B57E000314E0000F14F8391FE03FFC393F800FFF4848
7E6D6C1380D8FFC014C06D7E16E080A36C5A6C5A6CC7FCC8FC16C05C16805C16004A5A4A
5A5D4A5AEC3FC04A5A02FEC7FC495A495A903907E001E0EB0FC0EB1F8090383E00034914
C05B4848130748B6FC5A5A5A5A5AB71280A423317CB02C>I<B712FEEEFFC017F817FEC6
9039C0001FFF04071380040113C0A27013E0A2EF7FF0A6EFFFE0A24C13C0A24C13809338
0FFE00EE3FFC91B612F017C017F89139C00007FE933803FF80040013C018E0EF7FF018F8
173FA218FCA618F8A2177FEFFFF04C13E05E040F13C0B912005F17F0178036337DB23F>
66 D<DBFFE01338021F01FE137891B6EA80F8010315E1010F9038E00FF7903A1FFE0001
FFD97FF8EB007FD9FFE0143F4849141F4849140F4890C81207485A1703485A1701123F5B
007F1600A349160012FFAB127F7F1878A2123F7F001F17F818F06C7E6D15016CEE03E06C
7F6C6DEC07C06C6DEC0F80D97FF8EC3F00D91FFE14FE903A0FFFE007FC010390B512F001
0015C0021F49C7FC020013F035357BB340>I<D90FFC137090397FFF80F048B512E10007
14FB390FF803FF391FE0007F4848133F49130F007F140790C7FC1503481401A36D1300A2
7F6D140013F8387FFFC014FCECFFE06C14F86C14FE816C1580000315C06C15E06C6C14F0
131F010014F8140F9138007FFC153F151F150F00F01407A21503A27EA216F86C14076C15
F07E6DEB0FE001E0131F01FEEB7FC000FDB61200D8F87F5BD8F01F13F8D8E00113C02635
7BB331>83 D<003FB812F8A4D9F003EB801FD87F80ED03FC01001501007E1600007C177C
A20078173CA400F8173E48171EA4C71600B3A9011FB612F0A437327DB13E>I<B66CB639
800FFFFCA400019026C0000101C0C7EA1F001B1E6E6F143E6C6F163CA26E6E6C147C017F
19786E4A6C14F8013F61A26E496D1301011F616E497F010F03CF4A5AA26E01076D13076D
03875DA29226800F03EB800F6D96C7FCDBC01F6E5A6DDA1E01141EA2DBE03EECE03E6DDA
3C00143CDBF07C14F0027F0178017F5BA2DBF8F8ECF8F8023F49013F5BA2DBFDE0EB1FFD
021F5F03FF15FF6E496D5BA36E496D5BA26E90C76C90C8FCA36E486E5AA24B140002005E
A20378157856347EB25B>87 D<EB7FFE0003B512E04814F8390FF00FFC391FF803FF806E
138016C0157F6C5A6C5AEA0180C8FCEC7FFF010FB5FC90B6FC0003EBF07F000F1300EA1F
F8485A485A485A5BA315FF7F007F5B6D4813E03A3FF80FBFFF000FB5121F0003EBFC0F39
007FE00728217EA02B>97 D<EA01FC12FFA4120F1207ADEC07FC91387FFF8001FDB512E0
9039FFF00FF89138C007FC91380003FE496D7E496D1380A217C0167FA217E0A917C0A216
FF1780A26D4913006D495A9138C007FC9039F3F01FF801E1B512E0D9C07F13809026800F
F8C7FC2B347EB331>I<903807FF80013F13F090B512FC3903FE01FE4848487EEA0FF8EA
1FF0EA3FE0A2007F6D5A496C5A153000FF91C7FCA9127F7FA2003FEC07807F6C6C130F00
0FEC1F00D807FE133E3903FF80FCC6EBFFF8013F13E0010790C7FC21217DA027>I<ED01
FC15FFA4150F1507ADEB07FE90383FFFC790B512F70003EB01FF3907FC003F4848131F48
48130F48481307A2127F5BA212FFA9127FA27F123F150F6C6C131F6C6C133F6C6C497E26
03FE03B512E0C6B512E7013F1387903807FC072B347DB331>I<903803FF80013F13F090
B512FC48EB03FE3907FC007F4848EB3F804848EB1FC05B003FEC0FE0127F5B16F012FF15
0790B6FCA301C0C8FCA4127F7F123F16F06C7E000F14016C6CEB03E0D803FEEB0FC03A01
FF807F806C6CB51200011F13FC010313E024217EA029>I<EC3FE0903803FFF8010F13FC
90383FF1FE90387FC3FFEBFF83481303A2EA03FEEC01FEA2EC00781500A7B512FEA4D803
FEC7FCB3A7387FFFF8A420347EB31B>I<16F890390FFC07FE90387FFF9F48B6127F3907
FC0FFC380FF003001F14FED9E001133E003FECFF1C1600A6001F5CEBF003000F5C3907FC
0FF890B512E0486C1380D90FFCC7FC48C9FCA37F7F90B512F015FE6CECFF8016E06C15F0
6C15F84815FC121F393F80001F48C7EA03FE481401481400A46C14016C6CEB03FC6C6CEB
07F86C6CEB0FF0D80FFCEB7FE00003B61280C6ECFE00010F13E028327EA12C>I<EA01FC
12FFA4120F1207ADEC03FF020F13C0023F13F09138FC0FF89039FDE007FCEBFFC04A6C7E
1400A25BA25BB2B539E07FFFF0A42C347DB331>I<EA03F0487E487E487EA66C5A6C5A6C
5AC8FCA8EA01FC12FFA4120F1207B3A5B512C0A412357DB418>I<EA01FC12FFA4120F12
07ADED7FFFA4ED1FC04B5A037EC7FC5DEC03F8EC07E04A5AEC3F804AC8FC4A7E90B5FC81
81ECBFF0EC3FF89038FC1FFCEBF80F6E7E6E7E6E7F82806F7E6F7E6F7EB539C07FFFC0A4
2A347DB32F>107 D<EA01FC12FFA4120F1207B3B3A6B512E0A413347DB318>I<2703F803
FEEB03FE00FF903B1FFFC01FFFC0027FD9E07F7F913BF81FF0F81FF0903CF9E00FF9E00F
F8260FFBC0EBFBC06CB4486CB4486C7E02001400495CA3495CB2B500E0B500E0B512E0A4
43217CA04A>I<3901F803FF00FF010F13C0023F13F09138FC0FF89039F9E007FC380FFB
C06CB4486C7E1400A25BA25BB2B539E07FFFF0A42C217DA031>I<903803FF80011F13F0
90B512FE48EB01FF3A07FC007FC0D80FF0EB1FE0001F15F049130F003F15F8491307007F
15FCA300FF15FEA8007F15FCA26D130F003F15F8001F15F06D131F6C6CEB3FE06C6CEB7F
C03A01FF01FF006CEBFFFE013F13F80103138027217EA02C>I<3901FC07FC00FF90387F
FF8001FDB512E09039FFF01FF89138C007FC000F90380003FE6C4880496D1380A26F13C0
A3EE7FE0A9EEFFC0A34B1380A26D4913006D495A9138C00FFC9138F03FF801FDB512E0D9
FC7F1380DA0FF8C7FC91C9FCABB512E0A42B307EA031>I<D903FC133C90393FFF807C90
B5EAE0FC0003EB81F83907FE007D4848133F4848131F4848130FA248481307A3485AA96C
7EA36C7E150F6C6C131F000F143F6C6C13FF3903FF03F7C6EBFFE7013F1387903807FC07
90C7FCAB92B512E0A42B307DA02F>I<3901F81F8000FFEB7FF0ECFFF89038F9E3FC9038
FBC7FE380FFF876C1307A213FEEC03FCEC01F8EC0060491300B1B512F0A41F217EA024>
I<9038FFE1C0000713FF5A383F803F387E000F14075A14037EA26C6CC7FC13FCEBFFE06C
13FC806CEBFF80000F14C06C14E0C6FC010F13F0EB007F140F00F0130714037EA26C14E0
6C13076CEB0FC09038C01F8090B5120000F913FC38E03FE01C217DA023>I<133CA5137C
A313FCA21201A212031207001FB51280B6FCA3D807FCC7FCB0EC03C0A79038FE07801203
3901FF0F006C13FEEB3FFCEB0FF01A2F7EAE22>I<D801FC14FE00FF147FA4000F140700
071403B21507A2150F151F6C6C497E6C6C01FB13F06CEBFFF3013F13C3903807FE032C21
7DA031>I<B539C007FFC0A4D807FEC7EAF80000035D6D13016C5D14806C4A5AA2ECC007
017F5CECE00F013F91C7FC6E5A011F131EECF83E010F133CECFC7C01071378ECFEF80103
5B14FF6D5BA26D5BA26E5AA26EC8FCA2141E2A217EA02F>I<B53B83FFFC03FFE0A43D07
FC001FE0003E00183C6D167C00036F1378033F14F86C6C6E5B157F9139807BFC016C5FDA
C0FB1303017FD9F1FE5B14C19139E1E0FF07013F5E9139F3C07F0F011F038FC7FC14F790
3A0FFF803FDEA29238001FFE6D5DA26D486D5AA24A130701015DA26D486D5A4A13013B21
7EA040>I<B539C007FFC0A4D807FEC7EAF80000035D6D13016C5D14806C4A5AA2ECC007
017F5CECE00F013F91C7FC6E5A011F131EECF83E010F133CECFC7C01071378ECFEF80103
5B14FF6D5BA26D5BA26E5AA26EC8FCA2141EA25CA2147C003E1378007F13F8486C5A1381
EB83E0EB87C0495AD87F3FC9FCEA3FFEEA1FF8EA07E02A307EA02F>121
D<001FB6FCA39038E007FE9038800FFCEB001F001EEB3FF8003E14F0EC7FE0003C13FF49
13C01580491300C65A495A495A5C133F90387FF00FEBFFE014C04813805A48EB001F5B48
48131E001F143E4848137E4913FE387FE003B6FCA320217EA027>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fp cmmib9 9 7
/Fp 7 117 df<17F816011603160783160F161FA2163F167F8316FF5DA2ED03EF150716
CF030F7FED1F8F1607153F153E157C03FC8015F8EC01F002037F15E0EC07C0140F038080
EC1F004A7F143E5C91B7FC845B5B02E0C7FC495A130F5C011F8249C8FC013E157F137E5B
1203B500E0013FB512E0804A5B823B357CB443>65 D<EC3FC0903801FFF00107EBFCF090
391FE07FFC90387FC01F9038FF800F481300485A48485C120F5B001F141F5E485AA2153F
007F5D5BA2157F5E485AEEC1E015FF007F158317C0A24A1387003F168014076C6C48EB8F
003A0FF03F7F9F3A07FFFE3FFE00019038F80FFC3A003FC003F02B237EA131>97
D<EB1FC03807FFE05A5CA2C6FCA25CA25AA291C8FCA25AA25BA21207EC3FC09038FDFFF0
90B512FC48EBC0FFEC007F49148049EB3FC0485AA24914E0A2003F147FA25BA2007F14FF
16C05BA25C1680EAFF80A24A13005D127F4A5A4A5A5D003F495A6C6C485A6C6CB45A6CB4
48C7FC000113F838007FC023357DB328>I<EC3FE0903801FFFC010F7F90383FF01F9039
7FC00F803901FF003F4848EB7FC0485A000FECFF805B121F48481400153C484890C7FCA3
12FF5BA45BA4ED018016C0007FEC03E0ED0FC06C6CEB1F806C6CEB7F00390FF007FC6CB5
12F0000114C026003FFCC7FC23237DA128>I<D801F8137F3A03FF01FFC0000F018713E0
90393FCF81F0391E1FFE019138FC07F8003CEBF80FEB3FF0007CEC1FF0007813E0A200F8
EC0FE0017FEB0780000049C7FCA313FF5CA35A91C8FCA35A5BA312075BA35B5BEA01E025
237EA129>114 D<EC7F80903803FFF0010F13FC90381F807E90383F003E017E137F4913
FFA20001EB01FEA39038FE00F89038FFF00014FF15C015F06C14F86D13FC7F010F13FE13
00000E1307383F8001127F00FFEB00FCA3EC01F8130000FCEB03F0007CEB07E0397F803F
C0001FB51200000713FCC613E020237CA129>I<EB01E0EB07F8A2130FA2131FA25CA213
3FA25CA2137FA2B6128015C0A21580C6EB8000A25AA291C7FCA25AA25BA21207A25BA212
0FA25BEC01E0001F130315C0EBF0071580140FEC1F00EBE03E6D5A000F5B6CB45A000113
C06C6CC7FC1B317EAF20>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fq cmr9 9 76
/Fq 76 125 df<1538A2157CA215FEA24A7EA24A6C7E153F02067F151F020C7F150F0218
7F150702307F150302607F150102C07F150049487F8249C77F163F010681161F4981160F
498101386E7E133001706E7E136001E06E7E5B00016F7E5B0003EE7F8090C9FC48EE3FC0
1206000EEE1FE0120C001CEE0FF012180038EE07F8003FB8FC4817FCA2B912FEA337367C
B540>1 D<91393FE00FE0903A01FFF83FF8903A07E01EF83C903A1F800FF07E903A3F00
1FE0FE017E133F4914C0485A1738484890381F8000ACB812C0A33B03F0001F8000B3A748
6C497EB50083B5FCA32F357FB42D>11 D<EC1FE0ECFFFC903803F01E90390FC00780EB1F
8090393F000FC0017E131F5BA2485AED0F8092C7FCA9ED0FC0B7FCA33901F8001F150FB3
A6486CEB1FE0267FFFC1B5FCA328357FB42B>I<EC1FF891B512C0903803F00F90380FC0
1FEB1F80EB3F00137E5B150F485AACB7FCA33901F8000FB3A7486CEB1FE0267FFFE3B5FC
A328357FB42B>I<DA1FE013FF9126FFFC0713E0903B03F01E1F80F0903B0FC0077E003C
D91F805B90273F001FF8137E017E4A13FE495CA248485C030F147C95C7FCA9187EB912FE
A33B01F8000FC000187EB3A6486C496C13FF297FFFC1FFFE0F13F8A33D357FB440>I<EA
07C0EA1FF0EA3018EA600CEAC006A5EA600CEA3018EA1FF0EA07C00F0D6BB53A>23
D<017C1503D803FEED078026078780140F260F01C0141F261E00E0EC3F00003E01F8147E
003C017CEB01FE007C90397F8007FC913933FFFEF800789038307FF900F89039380001F0
0218495A16075F4C5A161F4CC7FC163E5E023813FC007801305B007C4A5AEC7003003C01
605B003E9038E007C0001EEBC00FD80F015C270787801FC8FC3903FE003FD8007C133E90
C748131F03FCEBFF809239F801E1E0913A01F003C07002039038078030DBE00F1338DA07
C0EB0018020F49131C0380140C91381F001E4A013E130E023E15065C14FC495A5C495A13
075C4948150E011F021E130C91C7121F013E161C017E6E1318017CED8038490207133000
01923803C07049913801E1E049913800FF806C48ED1F00373C7CB740>37
D<14C01301EB0380EB0F00130E5B133C5B5BA2485A485AA212075B120F90C7FC5AA2121E
123EA3123C127CA55AB0127CA5123C123EA3121E121FA27E7F12077F1203A26C7E6C7EA2
13787F131C7F130FEB0380EB01C01300124A79B71E>40 D<12C07E1270123C121C7E120F
6C7E6C7EA26C7E6C7EA27F1378137C133C133EA2131E131FA37F1480A5EB07C0B0EB0F80
A514005BA3131E133EA2133C137C137813F85BA2485A485AA2485A48C7FC120E5A123C12
705A5A124A7CB71E>I<156015F0B3A4007FB812C0B912E0A26C17C0C800F0C8FCB3A415
6033327CAB3C>43 D<123C127EB4FCA21380A2127F123D1201A412031300A25A1206120E
120C121C5A5A126009177A8715>I<B512F0A514057F921A>I<123C127E12FFA4127E123C
08087A8715>I<1530157815F8A215F01401A215E01403A215C01407A21580140FA21500
5CA2143EA2143C147CA2147814F8A25C1301A25C1303A25C1307A2495AA291C7FC5BA213
1E133EA2133C137CA2137813F8A25B1201A25B1203A2485AA25B120FA290C8FC5AA2121E
123EA2123C127CA2127812F8A25A12601D4B7CB726>I<EB0FE0EB7FFCEBF83E3903E00F
803907C007C0EB8003000F14E0391F0001F0A24814F8A2003E1300007E14FCA500FE14FE
B2007E14FCA56CEB01F8A36C14F0A2390F8003E03907C007C0A23903E00F803900F83E00
EB7FFCEB0FE01F347DB126>I<13075B5B137FEA07FFB5FC13BFEAF83F1200B3B3A2497E
007FB51280A319327AB126>I<EB3FC0EBFFF0000313FC380F80FF391E007F80001CEB3F
C048EB1FE048130F15F00060130712FC6C14F87E1403A3007E1307123CC7FC15F0A2140F
15E0EC1FC0A2EC3F801500147E5C495A5C495A495A495A49C7FC133E133C4913185B485A
48481330485A48C7FC001C1470001FB512F05A5AB612E0A31D327CB126>I<EB1FE0EBFF
FC4813FF3907E03F80390F001FC0001EEB0FE0001CEB07F0123F018013F8140313C01380
A2381F0007C7FC15F0A2EC0FE015C0141FEC3F80EC7E00EB01F8EB7FE014FCEB003FEC1F
C0EC0FE0EC07F015F8140315FC140115FEA3127EB4FCA415FC48130312780070EB07F86C
14F0003C130F001FEB1FE0390FE03F800003B51200C613FCEB1FE01F347DB126>I<EC01
C0A214031407A2140F141FA2143F147F146F14CF1301EB038F140F1307130E130C131C13
381330137013E013C0EA0180120313001206120E120C5A123812305A12E0B71280A3C738
0FC000A94A7E0107B51280A321337EB226>I<000C14C0380FC00F90B5128015005C5C14
F014C0D80C18C7FC90C8FCA9EB0FC0EB7FF8EBF07C380FC03F9038001F80EC0FC0120E00
0CEB07E0A2C713F01403A215F8A41218127E12FEA315F0140712F8006014E01270EC0FC0
6C131F003C14806CEB7F00380F80FE3807FFF8000113E038003F801D347CB126>I<14FE
903807FF80011F13E090383F00F0017C13703901F801F8EBF003EA03E01207EA0FC0EC01
F04848C7FCA248C8FCA35A127EEB07F0EB1FFC38FE381F9038700F809038E007C039FFC0
03E0018013F0EC01F8130015FC1400A24814FEA5127EA4127F6C14FCA26C1301018013F8
000F14F0EBC0030007EB07E03903E00FC03901F81F806CB51200EB3FFCEB0FE01F347DB1
26>I<1230123C003FB6FCA34814FEA215FC0070C7123800601430157015E04814C01401
EC0380C7EA07001406140E5C141814385CA25CA2495A1303A3495AA2130FA3131F91C7FC
A25BA55BA9131C20347CB126>I<EB0FE0EB7FFC90B5FC3903F01F803907C007C0390F00
03E0000EEB01F0001E1300001C14F8003C1478A3123EA2003F14F86D13F0EBC001D81FF0
13E09038F803C0390FFE07803907FF0F006C13DE6C13F87EEB3FFE8001F713C0D803E313
E0D8078013F0390F007FF8001E131F003EEB07FC003C1303481301EC007E12F848143EA2
151EA37E153C1278007C14787E6C14F0390F8003E03907F01FC00001B5120038007FFCEB
1FE01F347DB126>I<EB0FE0EB7FF8EBFFFE3803F83F3907E00F80390FC007C0D81F8013
E0EC03F0EA3F0048EB01F8127EA200FE14FC1400A415FEA5007E1301A2127F7E1403EA1F
80000F13073807C00E3803E01C3801F03838007FF090381FC0FC90C7FC1401A215F8A215
F01403001F14E0383F800715C0140FEC1F809038003F00001C137E381F01FC380FFFF000
0313C0C690C7FC1F347DB126>I<123C127E12FFA4127E123C1200B0123C127E12FFA412
7E123C08207A9F15>I<007FB812C0B912E0A26C17C0CCFCAC007FB812C0B912E0A26C17
C033147C9C3C>61 D<15E0A34A7EA24A7EA34A7EA3EC0DFE140CA2EC187FA34A6C7EA202
707FEC601FA202E07FECC00FA2D901807F1507A249486C7EA301066D7EA2010E80010FB5
FCA249800118C77EA24981163FA2496E7EA3496E7EA20001821607487ED81FF04A7ED8FF
FE49B512E0A333367DB53A>65 D<B7FC16E016F83A03FC0003FE0001EC00FFEE7F80EE3F
C0161F17E0160F17F0A617E0161F17C0EE3F80EE7F0016FEED03FC90B612F05E9039FC00
07FCED00FEEE3F80EE1FC0EE0FE017F0160717F8160317FCA617F81607A2EE0FF0EE1FE0
163FEE7FC00003913803FF00B75A16F816C02E337DB236>I<DA03FE130C91393FFF801C
91B512E0903A03FE01F83C903A0FF0003C7CD91FC0EB0EFCD97F80130701FEC712034848
1401000315005B4848157C485A173C485A171C123F5B007F160CA390C9FC481600AB7E6D
150CA3123F7F001F161C17186C7E17386C6C15306C6C15706D15E012016C6CEC01C0D97F
80EB0380D91FC0EB0F00D90FF0131ED903FE13FC0100B512F0023F13C0DA03FEC7FC2E37
7CB437>I<B77E16F016FE3A01FE0001FF00009138003FC0EE0FE0707E707E707E707E17
7E177FEF3F80A2EF1FC0A3EF0FE0A418F0AA18E0A3171F18C0A21880173F18005F17FE5F
4C5AEE07F04C5AEE3FC000014AB45AB748C7FC16F8168034337EB23B>I<B812C0A3D803
FCC7127F0001150FEE03E01601A21600A21760A403061330A41700150EA2151E157E90B5
12FEA39038FC007E151E150EA21506170CA3171892C7FCA41738A21770A217F016011603
16070003157FB812E0A32E337DB234>I<B81280A3D803FCC7FC0001151FEE07C01603A2
1601A21600A41760150CA31700A2151CA2153C15FC90B5FCA3EBFC00153C151CA2150CA5
92C8FCAB487EB512FEA32B337DB232>I<DA03FE130C91393FFF801C91B512E0903A03FE
01F83C903A0FF0003C7CD91FC0EB0EFCD97F80130701FEC7120348481401000315005B48
48157C485A173C485A171C123F5B007F160CA390C9FC4893C7FCAA0303B512E07E7F9239
0003FE00705A123F7F121FA26C7E7F12076C7E7F6C6C14036C7E6D6C1307D91FC0EB0E7C
D90FF0EB1C3CD903FEEBF81C0100B5EAF00C023F01C0C7FCDA03FEC8FC33377CB43C>I<
B512FEA3000113006C5AB3B3A7487EB512FEA317337EB21C>73 D<B500FE903807FFF8A3
000190C7000113006C48EC00FC17F04C5A4C5A4CC7FC160E5E5E5E5E4B5A4B5A4BC8FC15
0E5D5D15F84A7E14034A7EEC0EFF5C4A6C7E4A6C7EECE01FD9FFC07F4A6C7E4A6C7E5B6F
7E6F7EA26F7E707EA2707E707E160F83707E707EA283486C913807FF80B500FE013F13FC
A336337EB23C>75 D<B512FEA3D803FEC9FC6C5AB3A9EE0180A416031700A45EA25E5E5E
5E16FE00031407B7FCA329337DB230>I<D8FFFC923801FFF86D5DA20003EFFE00D801BF
ED06FCA3D99F80140CA2D98FC01418A3D987E01430A2D983F01460A3D981F814C0A3D980
FCEB0180A2027EEB0300A36E1306A26E6C5AA36E6C5AA36E6C5AA26E6C5AA36E6C5AA391
3800FD80A2037FC7FCA3486C133ED80FF04B7EB5011C90387FFFF8A33D337CB246>I<EC
07FC91387FFFC0903901FC07F0903907E000FCD90F80133E013FC76C7E017E6E7E496E7E
48486E7E48486E7EA248486E7E000F8249157E001F167FA24848ED3F80A2007F17C0A290
C9121FA24817E0AB6C17C06D153FA3003F17806D157FA2001F17006D5D000F5E6C6C4A5A
A26C6C4A5A00015E6C6C4A5A017E4A5A6D4A5AD91FC0017FC7FCD907E013FC903901FC07
F09039007FFFC0DA07FCC8FC33377CB43C>79 D<B612FEEDFFC016F03A03FC0007FC0001
EC00FE167FEE3F80EE1FC017E0160FA217F0A617E0A2EE1FC0A2EE3F80EE7F0016FEED07
F890B65A168001FCC9FCB3A2487EB512F8A32C337DB234>I<B612FCEDFF8016F03A01FE
0007FC0000EC01FEED007F707E707E83160F83A65FA24C5AA24C5A047EC7FC4B5AED0FF0
90B612C093C8FC9039FE001FC0ED07F06F7E6F7E150082167E167FA583A5180C17C0A204
3F131C486C1618B500FEEB1FE0040F1338933807F070C93801FFE09338003F8036357EB2
39>82 D<90381FE00390387FFC0748B5FC3907F01FCF390F8003FF48C7FC003E80814880
A200788000F880A46C80A27E92C7FC127F13C0EA3FF013FF6C13F06C13FF6C14C06C14F0
C680013F7F01037F9038003FFF140302001380157F153FED1FC0150F12C0A21507A37EA2
6CEC0F80A26C15006C5C6C143E6C147E01C05B39F1FC03F800E0B512E0011F138026C003
FEC7FC22377CB42B>I<007FB712FEA390398007F001D87C00EC003E0078161E0070160E
A20060160600E01607A3481603A6C71500B3AB4A7E011FB512FCA330337DB237>I<B500
FE90381FFFF8A3000190C813006C48153C1718B3AF1738017F1530A217706D6C1460011F
15E06E495A010F14036D6C495A6D6C49C7FCD901FC131E6DB413FC91383FFFF0020F13C0
020190C8FC35357EB23A>I<B500F0903803FFF8A3D807FEC8EA7FC06C48ED1F00000116
1E6D151C00001618A26D15386D1530A26D6C5CA26E14E0011F5DA26D6C495AA28001074A
C7FCA26D6C1306A28001015CA26E131C01001418806E5BA2ED8070023F1360A26E6C5AA2
15E1020F5BA2DA07F3C8FCA215FBEC03FEA36E5AA26E5AA31570A235357EB23A>I<B5D8
F007B539800FFFF0A3000390C7273FF000011300D801FC6E48EB007C1A386D140F000019
30836D020715706D1860A26E496C14E0013F60A26ED919FC1301011F60A26ED930FE1303
010F95C7FCA26ED9607F5B01071706A26E9039C03F800E0103170CA2913BFC01801FC01C
01011718A2913BFE03000FE03801001730A2DAFF06EB07F0027F5EA2038CEB03F8023F5E
A203D8EB01FC021FEDFD80A203F0EB00FF020F93C8FCA24B800207157EA24B143E020315
3CA24B141C020115184C357FB24F>I<003FB612FCA39039F80007F813C090C7EA0FF000
3EEC1FE0123C0038EC3FC00078EC7F801270EDFF004A5AA20060495AA24A5A4A5AC7FC4A
5A4A5AA24A5A4AC7FCA2495A495AA2495A495AA24948130C495AA2495A49C7FCA2484814
1CA2485A485A1638485A4848147816F84848130148481307153FB7FCA326337CB22F>90
D<EAFFF0A4EAF000B3B3B3ADEAFFF0A40C4B79B715>I<EAFFF0A41200B3B3B3AD12FFA4
0C4B7FB715>93 D<1320137013F8487EEA03DEEA078F380F0780381E03C0383C01E03878
00F000E0133800401310150C78B326>I<EB7F803803FFF0380F80FC381C003E003F133F
6D6C7E6E7EA26E7EEA1F00C7FCA4EB01FF131FEBFF873803FC07EA0FF0EA1FC0EA3F8012
7F13004815C05AA3140FA26C131F6C133B3A3F8071F180391FC1E1FF2607FFC013003900
FE003C22237DA126>97 D<EA03F012FFA312071203AEEC3F80ECFFE09038F3C0F89038F7
007E01FE7F49EB1F8049EB0FC05BED07E016F0A2150316F8AA16F0150716E0A2ED0FC07F
6DEB1F8001ECEB3F0001CF137C90388381F8903801FFE0C76CC7FC25357EB32B>I<EB07
F8EB3FFF9038FC07C03901F000E03903E003F03807C007120FEA1F80123F90380003E048
90C7FCA2127E12FEAA127FA26C14187F001F14386D1330000F14706C6C13E03903F001C0
3900FC0F8090383FFE00EB07F01D237EA122>I<153FEC0FFFA3EC007F81AEEB07F0EB3F
FCEBFC0F3901F003BF3907E001FF48487E48487F8148C7FCA25A127E12FEAA127E127FA2
7E6C6C5BA26C6C5B6C6C4813803A03F007BFFC3900F81E3FEB3FFCD90FE0130026357DB3
2B>I<EB0FE0EB7FFCEBF83F3903F00F80D807E013C0390FC007E0381F800315F0EA3F00
14014814F8127EA212FEA2B6FCA248C8FCA5127E127FA26C1418A26C6C1338000F14306D
13706C6C13E03901F003C03900FC0F00EB3FFEEB07F01D237EA122>I<EB01FCEB07FF90
381F078090383E0FC0EB7C1F13FCEA01F8A20003EB070049C7FCACB512F0A3D803F0C7FC
B3A7487E387FFFE0A31A357FB417>I<151F90391FC07F809039FFF8E3C03901F07FC739
07E03F033A0FC01F83809039800F8000001F80EB00074880A66C5CEB800F000F5CEBC01F
6C6C48C7FCEBF07C380EFFF8380C1FC0001CC9FCA3121EA2121F380FFFFEECFFC06C14F0
6C14FC4880381F0001003EEB007F4880ED1F8048140FA56C141F007C15006C143E6C5C39
0FC001F83903F007E0C6B51280D91FFCC7FC22337EA126>I<EA03F012FFA312071203AE
EC1FC0EC7FF09038F1E0FC9038F3807C9038F7007E13FE497FA25BA25BB3486CEB7F80B5
38C7FFFCA326347EB32B>I<EA0780EA0FC0EA1FE0A4EA0FC0EA0780C7FCAAEA07E012FF
A3120F1207B3A6EA0FF0B5FCA310337EB215>I<EB03C0EB07E0EB0FF0A4EB07E0EB03C0
90C7FCAAEB03F013FFA313071303B3B01238127C00FE13E0130714C0130F007C13803838
1F00EA1FFCEA07F0144384B217>I<EA03F012FFA312071203AF913803FFE0A36E1300EC
00F8EC01E05D4A5A020FC7FC141C5C5C14F0EBF3F8EBF7FC13FEEBFC7EEBF87F496C7E14
1F6E7E8114076E7E8114016E7E81486CEBFF80B500C313F0A324347EB329>I<EA07E012
FFA3120F1207B3B3A7EA0FF0B5FCA310347EB315>I<2703F01FE013FF00FF90267FF803
13C0903BF1E07C0F03E0903BF3803E1C01F02807F7003F387FD803FE1470496D486C7EA2
495CA2495CB3486C496C487EB53BC7FFFE3FFFF0A33C217EA041>I<3903F01FC000FFEB
7FF09038F1E0FC9038F3807C3907F7007EEA03FE497FA25BA25BB3486CEB7F80B538C7FF
FCA326217EA02B>I<EB07F0EB3FFE9038FC1F803901F007C03903C001E000078048486C
7E48C7127CA248147E003E143E007E143FA300FE1580A8007E1500A36C147EA26C147C6D
13FC6C6C485A00075C3903F007E03900FC1F80D93FFEC7FCEB07F021237EA126>I<3903
F03F8000FFEBFFE09038F3C0F89038F7007ED807FE7F6C48EB1F804914C049130F16E0ED
07F0A3ED03F8A9150716F0A216E0150F16C06D131F6DEB3F80160001FF13FC9038F381F8
9038F1FFE0D9F07FC7FC91C8FCAA487EB512C0A325307EA02B>I<903807F00390383FFC
07EBFC0F3901F8038F3807E001000F14DF48486CB4FC497F123F90C77E5AA25A5AA9127F
A36C6C5B121F6D5B000F5B3907E003BF3903F0073F3800F81EEB3FF8EB0FE090C7FCAAED
7F8091380FFFFCA326307DA029>I<3803E07C38FFE1FF9038E38F809038E71FC0EA07EE
EA03ECA29038FC0F8049C7FCA35BB2487EB512E0A31A217FA01E>I<EBFF06000713CE38
1F00FE003C133E48131E140E5A1406A27EA200FE90C7FC6C7EEA7FFC383FFFC014F0000F
7F6C7FC67FEB0FFF1300EC3F8000C0131F140F6C1307A37E15006C5B6C130E6C5B38F780
7838E1FFE038C07F8019237EA11E>I<1330A51370A313F0A21201A212031207381FFFFE
B5FCA23803F000AF1403A814073801F806A23800FC0EEB7E1CEB1FF8EB07E0182F7FAD1E
>I<D803F0133F00FFEB0FFFA30007EB007F000380B35DA35D12016D4813800000903803
BFFC90387E073FEB1FFED907F8130026227EA02B>I<B5EBFFF0A3D80FF0EB3F800007EC
1F000003140E150C6D131C00011418A26C6C5BA26D1370017E1360137F6D5BA290381F81
80A214C3010F90C7FCA2EB07E6A214FE6D5AA26D5AA36D5AA2146024217E9F29>I<B53A
1FFF81FFF0A33C07F801FC003F8001F049EB1E0000030100141C816C6C017C1318A26D01
7E1338000002FE1330A290267E01FF5B159F168090263F030F5BA216C0903A1F8607C180
A202C613E390260FCC0390C7FCA2D907FC13F6ECF80116FE6D486C5AA36D481378A36D48
133034217F9F37>I<B53801FFF8A32603FE0013806C48EB7C0000001478017E1370017F
5B90383F81C090381F8380D90FC3C7FCEB07E614FE6D5A6D5A6D7E80805B9038039F8090
38071FC09038060FE0EB0C0790381C03F0496C7E01707FEBF000000180000FECFF8026FF
FC0313FCA326207F9F29>I<3A7FFF807FF8A33A07F8001FC00003EC0F800001EC070015
066C6C5BA26D131C017E1318A26D5BA2EC8070011F1360ECC0E0010F5BA2903807E180A2
14F3010390C7FC14FBEB01FEA26D5AA31478A21430A25CA214E05CA2495A1278D8FC03C8
FCA21306130EEA701CEA7838EA1FF0EA0FC025307F9F29>I<003FB512F0A2EB000F003C
14E00038EB1FC00030EB3F800070137F1500006013FE495A13035CC6485A495AA2495A49
5A49C7FC153013FE485A12035B48481370485A001F14604913E0485A387F000348130F90
B5FCA21C207E9F22>I<BC12F0A24C0280944D>124 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fr cmbx12 14.4 20
/Fr 20 121 df<EA07F0487E487E487E487EB51280A76C13006C5A6C5A6C5A6C5AC8FCB3
EA07F0487E487E487E487EB51280A76C13006C5A6C5A6C5A6C5A113576B425>58
D<BC1280A5D8000701F8C7000114C0F0001F19071901851A7F1A3F1A1FA2F20FE0A21A07
A31A03A318F81BF01A01A497C7FC1701A317031707170F177F92B6FCA59238F8007F170F
170717031701A317001B3EA31B7CA395C8FCA21BFCA21BF8A21A01A31A031BF01A071A0F
A21A1F1A3FF27FE0F101FF1907191F0603B5FCBCFCA21BC0A34F517CD058>69
D<B812C0A5D8000701F8C7FCB3B3B3B2B812C0A52A527CD132>73
D<B600FC073FB512FE6F61A26F96B6FCA2D80007F5C00070EF01EFA202EF6DEF03CFA202
E76DEF078FA202E36DEF0F0FA202E16D171EA302E06D173CA26F6C1778A26F6C17F0A26F
6DED01E0A26F6DED03C0A36F6DED0780A26F6DED0F00A26F6D151EA26F6D5DA3706C5DA2
706C5DA2706D495AA2706D495AA2706D495AA3706D49C7FCA2706D131EA2706D5BA2716C
5BA3716C5BA271EB81E0A271EBC3C0A271EBE780A27101FFC8FCA3715BA2715BA2725AA2
725AA2D93FFC6F5AB74DB712FEA2725AA2725A77527CD180>77 D<B600FC93B7FC8181A2
82D800076E9239003FFC0070EE07E08282A28202EF7F02E77F02E380A202E18002E0806F
7F6F7F6F7FA26F7F6F7F6F806F80A26F80707F707F707F707FA2707F7080708070808583
717F717F717F717FA27114807114C07114E07213F07213F8A27213FC7213FE7213FF7214
87A27214C77214E77313F77313FF85A285858585A28586868686A286868686A2D93FFC18
7FB7173F1B1F1B0F1B07755A60527CD169>I<003FBC1280A59126C0003F9038C0007F49
C71607D87FF8060113C001E08449197F49193F90C8171FA2007E1A0FA3007C1A07A500FC
1BE0481A03A6C994C7FCB3B3AC91B912F0A553517BD05E>84 D<EC7FFF0107B512F0013F
14FE90B77E48D9E00F7F2703FE000113F0486C6D7F6EEB3FFC48826E131F83707FA36C49
6D7FA26C90C7FC6C5AC9FCA6037FB5FC020FB6FC91B7FC01071487013FEBF00749138039
01FFFC004813F0485B485B485B4890C7FC5A5BA2485AA45EA26D5C007F151D163D6C6C02
797F6C6D01F113F86C9026C003E1EBFFE06C9026F81FC014F06C90B5487EC6ED001F011F
01FC010713E0010101E090C8FC3C387CB641>97 D<913801FFF8021FEBFF8091B612F001
0315FC010F9038C00FFE903A1FFE0001FFD97FFC491380D9FFF05B4817C048495B5C5A48
5BA2486F138091C7FC486F1300705A4892C8FC5BA312FFAD127F7FA27EA2EF03E06C7F17
076C6D15C07E6E140F6CEE1F806C6DEC3F006C6D147ED97FFE5C6D6CEB03F8010F9038E0
1FF0010390B55A01001580023F49C7FC020113E033387CB63C>99
D<4DB47E0407B5FCA5EE001F1707B3A4913801FFE0021F13FC91B6FC010315C7010F9038
E03FE74990380007F7D97FFC0101B5FC49487F4849143F484980485B83485B5A91C8FC5A
A3485AA412FFAC127FA36C7EA37EA26C7F5F6C6D5C7E6C6D5C6C6D49B5FC6D6C4914E0D9
3FFED90FEFEBFF80903A0FFFC07FCF6D90B5128F0101ECFE0FD9003F13F8020301C049C7
FC41547CD24B>I<913803FFC0023F13FC49B6FC010715C04901817F903A3FFC007FF849
486D7E49486D7E4849130F48496D7E48178048497F18C0488191C7FC4817E0A248815B18
F0A212FFA490B8FCA318E049CAFCA6127FA27F7EA218E06CEE01F06E14037E6C6DEC07E0
A26C6DEC0FC06C6D141F6C6DEC3F806D6CECFF00D91FFEEB03FE903A0FFFC03FF8010390
B55A010015C0021F49C7FC020113F034387CB63D>I<DA3FFF14FF0103B5D8F00713C001
0FDAFC1F13E0013FECFF7F90267FFC0F9038FF9FF09026FFE001EBF83F48496C13E04849
90387FF01F4890C7D83FF813E0489338FC0FC0F0078048486E6CC7FCA2003F82A9001F5E
A26C6C4A5AA26C5E6C6D495A6C6D495A6C6D485BDAFC0F5B4890B6C8FCD803EF14FC01C3
14F02607C03F90C9FC91CBFCA2120FA37FA213F813FE90B7FC6C16F817FF18C06C836C83
6C836D828448B9FC12074848C700031480D81FF8EC003F4848150748486F13C083485A83
A56D5D007F18806D5D003F18006C6C4B5AD80FFEED1FFC6C6C6CEC7FF86C01E049485A6C
01FE011F5B6C6CB71280010F03FCC7FC010115E0D9000F01FCC8FC3C4F7CB543>103
D<137F497E000313E0487FA2487FA76C5BA26C5BC613806DC7FC90C8FCADEB3FF0B5FCA5
12017EB3B3A6B612E0A51B547BD325>105 D<EB3FF0B5FCA512017EB3B3B3B1B612F0A5
1C537BD225>108 D<D93FF0EB1FFCB591B512C0030314F0030F8092391FE07FFC92393F
001FFE0003027C80C602F07FDAF1E081ECF3C0DAF7807F8502FFC7FC5CA25CA45CB3ACB6
D8F807B612C0A542367BB54B>110 D<913801FFE0021F13FE91B612C0010315F0010F90
38807FFC903A1FFC000FFED97FF86D6C7E49486D7F48496D7F48496D7F4A147F48834890
C86C7EA24883A248486F7EA3007F1880A400FF18C0AC007F1880A3003F18006D5DA26C5F
A26C5F6E147F6C5F6C6D4A5A6C6D495B6C6D495B6D6C495BD93FFE011F90C7FC903A0FFF
807FFC6D90B55A010015C0023F91C8FC020113E03A387CB643>I<903A3FF001FFE0B501
0F13FE033FEBFFC092B612F002F301017F913AF7F8007FFE0003D9FFE0EB1FFFC602806D
7F92C76C7F4A824A6E7F4A6E7FA2717FA285187F85A4721380AC1A0060A36118FFA2615F
616E4A5BA26E4A5B6E4A5B6F495B6F4990C7FC03F0EBFFFC9126FBFE075B02F8B612E06F
1480031F01FCC8FC030313C092CBFCB1B612F8A5414D7BB54B>I<90397FE003FEB59038
0FFF80033F13E04B13F09238FE1FF89139E1F83FFC0003D9E3E013FEC6ECC07FECE78014
EF150014EE02FEEB3FFC5CEE1FF8EE0FF04A90C7FCA55CB3AAB612FCA52F367CB537>
114 D<903903FFF00F013FEBFE1F90B7FC120348EB003FD80FF81307D81FE0130148487F
4980127F90C87EA24881A27FA27F01F091C7FC13FCEBFFC06C13FF15F86C14FF16C06C15
F06C816C816C81C681013F1580010F15C01300020714E0EC003F030713F015010078EC00
7F00F8153F161F7E160FA27E17E07E6D141F17C07F6DEC3F8001F8EC7F0001FEEB01FE90
39FFC00FFC6DB55AD8FC1F14E0D8F807148048C601F8C7FC2C387CB635>I<143EA6147E
A414FEA21301A313031307A2130F131F133F13FF5A000F90B6FCB8FCA426003FFEC8FCB3
A9EE07C0AB011FEC0F8080A26DEC1F0015806DEBC03E6DEBF0FC6DEBFFF86D6C5B021F5B
020313802A4D7ECB34>I<007FB500F090387FFFFEA5C66C48C7000F90C7FC6D6CEC07F8
6D6D5C6D6D495A6D4B5A6F495A6D6D91C8FC6D6D137E6D6D5B91387FFE014C5A6E6C485A
6EEB8FE06EEBCFC06EEBFF806E91C9FCA26E5B6E5B6F7E6F7EA26F7F834B7F4B7F92B5FC
DA01FD7F03F87F4A486C7E4A486C7E020F7FDA1FC0804A486C7F4A486C7F02FE6D7F4A6D
7F495A49486D7F01076F7E49486E7E49486E7FEBFFF0B500FE49B612C0A542357EB447>
120 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fs cmr10 10 21
/Fs 21 119 df<133C137EA213FE1201EA03FC13F0EA07E0EA0FC0EA1F80EA1E005A5A5A
12C00F0F6FB92A>19 D<6C130800E0133800F813F8383E03E0381F07C0380FDF803803FE
006C5A6C5A1320150A76B42A>I<121C127FEAFF80A5EA7F00121C0909798817>46
D<1538A3157CA315FEA34A7EA34A6C7EA202077FEC063FA2020E7FEC0C1FA2021C7FEC18
0FA202387FEC3007A202707FEC6003A202C07F1501A2D901807F81A249C77F167FA20106
810107B6FCA24981010CC7121FA2496E7EA3496E7EA3496E7EA213E0707E1201486C81D8
0FFC02071380B56C90B512FEA3373C7DBB3E>65 D<B812F8A30001903880001F6C90C712
01EE00FC177C173C171CA2170CA4170E1706A2ED0180A21700A41503A21507151F91B5FC
A3EC001F15071503A21501A692C8FCAD4813C0B612C0A32F397DB836>70
D<013FB512E0A39039001FFC00EC07F8B3B3A3123FEA7F80EAFFC0A44A5A1380D87F005B
0070131F6C5C6C495A6C49C7FC380781FC3801FFF038007F80233B7DB82B>74
D<B649B5FCA3000101809038007FF06C90C8EA3F80053EC7FC173C17385F5F4C5A4C5A4C
C8FC160E5E5E5E5E4B5AED0780030EC9FC5D153E157E15FF5C4A7F4A6C7E140E4A6C7E4A
6C7E14704A6C7E4A6C7E14804A6C7E6F7EA26F7F707EA2707E707EA2707EA2707E707EA2
707E707F8484486D497FB6011FEBFF80A339397DB841>I<B5933807FFF86E5DA20001F0
FC002600DFC0ED1BF8A2D9CFE01533A3D9C7F01563A3D9C3F815C3A2D9C1FCEC0183A3D9
C0FEEC0303A2027F1406A36E6C130CA36E6C1318A26E6C1330A36E6C1360A26E6C13C0A3
913901FC0180A3913900FE0300A2ED7F06A3ED3F8CA2ED1FD8A3ED0FF0A3486C6D5A487E
D80FFC6D48497EB500C00203B512F8A2ED018045397DB84C>77 D<EB1FE0EBFFFC3803E0
3F3907000F80390F8007E0486C6C7E13E06E7EA26E7E6C5A6C5AC8FCA4147FEB07FFEB3F
E0EBFE00EA03F8EA0FF0EA1FC0123F485A90C7FC160C12FEA31401A26C13036CEB077C90
3980063E18383FC01E3A0FE0781FF03A03FFF00FE03A007F8007C026277DA52A>97
D<EB03FC90381FFF8090387E03E03901F80070484813F83907E001FC380FC003A2EA1F80
123F90380001F848EB00F01500A2127E12FEAA127E127FA26C14067F001F140E6D130C00
0F141C6C6C13386C6C13706C6C13E039007C07C090381FFF00EB07F81F277DA525>99
D<ED0FC0EC03FFA3EC003F150FB0EB03F8EB1FFF90387E078F9038F801EF3903F0007F48
48133F4848131FA24848130F123F90C7FC5AA2127E12FEAA127E127FA27EA26C6C131FA2
6C6C133F6C6C137F6C6CEBEFF03A01F801CFFF39007C078F90381FFE0FD907F813C0283B
7DB92E>I<EB07F8EB1FFF90387C0FC03901F803E03903F001F0D807E013F8380FC00048
48137CA248C7127E153E5A153F127E12FEA3B7FCA248C8FCA5127EA2127FA26C14037F00
1F14076C6C13060007140E6D131CD801F013386C6C137090387E03E090381FFF80903803
FC0020277EA525>I<EA0380EA0FE0487EA56C5AEA0380C8FCAAEA03F012FFA312071203
B3AA487EB512C0A312387EB717>105 D<EA03F012FFA3120F1203B1913801FFFCA39138
007FC01600157C15705D4A5A4A5A4AC7FC141E1438147814FC13F1EBF3FEEBF73F01FE7F
EBF81F496C7E8114076E7E6E7E811400157E157F811680ED1FC0486CEB3FF0B500C0B5FC
A3283A7EB92C>107 D<EA03F012FFA3120F1203B3B3AD487EB512C0A3123A7EB917>I<39
03F00FF000FFEB3FFCECF03F9039F1C01F803A0FF3800FC03803F70013FE496D7EA25BA3
5BB3A3486C497EB500C1B51280A329257EA42E>110 D<EB03FE90380FFF8090383E03E0
9038F800F84848137C48487F48487F4848EB0F80001F15C090C712074815E0A2007EEC03
F0A400FE15F8A9007E15F0A2007F14076C15E0A26C6CEB0FC0000F15806D131F6C6CEB3F
006C6C137EC66C13F890387E03F090381FFFC0D903FEC7FC25277EA52A>I<3807E01F00
FFEB7FC09038E1E3E09038E387F0380FE707EA03E613EE9038EC03E09038FC0080491300
A45BB3A2487EB512F0A31C257EA421>114 D<EBFF03000313E7380F80FF381E003F487F
487F00707F12F0A2807EA27EB490C7FCEA7FE013FF6C13E06C13F86C7F00037FC67F0107
1380EB007F141F00C0EB0FC01407A26C1303A37E15806C13077EEC0F00B4131E38F3C07C
38E1FFF038C03F801A277DA521>I<D803F0EB07E000FFEB01FFA3000FEB001F00031407
B3A4150FA3151F12016D133F0000EC77F86D9038E7FF8090383F03C790381FFF87903A03
FC07E00029267EA42E>117 D<B538803FFEA33A0FF8000FF06C48EB07E00003EC03C06D
148000011500A26C6C1306A26D130E017E130CA26D5BA2EC8038011F1330A26D6C5AA214
E001075BA2903803F180A3D901FBC7FCA214FF6D5AA2147CA31438A227257EA32C>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ft cmsl10 10 35
/Ft 35 119 df<130F5BEB3F80EB7F005BEA01FC485A485AEA0FC0485A003EC7FC123C5A
12E05A110F67B92A>19 D<124000F0131C00781378383E01F0381F87C0380FDF803807FE
00EA01FCEA00F01360160A6EB42A>I<EA0780EA1FC0EA3FE0A6EA0F601200A213E013C0
12011380A21203EA07001206120E5A5A5A5A5A0B197A8817>44 D<B512FCA516057C941C
>I<121E127FEAFF80A413005A123C0909788817>I<15C014031407141F14FF90B5FC1580
3801FE3FC7FCA3147F1500A55C5CA513015CA513035CA513075CA5130F5CA5131F5CA313
3F497EB612F0A215E01C3878B72A>49 D<EC07F8EC3FFF91B512C0903903F01FE0903907
800FF090390E0003F84914FC49EB01FE5B0160130001E014FF13FC487E7FA449EB01FE5B
EA007890C7FCED03FCA2ED07F8ED0FF0A2ED1FE0ED3FC01680ED7F0015FE4A5A4A5AEC07
E04A5A4A5A4AC7FC147C5C495A495AD90780136049C7FC131E4914C013705B4848130148
48EB038048B6FC5A003F15005AB7FC5DA228387CB72A>I<EC0FF0EC7FFE49B512809039
03F01FC090390F800FE090391E0007F0011C14F8133C017F13031480A201FF1307A3EB7F
00013E130F90C713F0A2ED1FE016C0ED3F80A2ED7E005D4A5AEC0FE0D903FFC7FC15E090
380001F8EC00FE157FED3F8016C0A2ED1FE0A416F0A2001F143FD87F8014E07F12FFA2ED
7FC0A249148090C712FF00FC150000E0495A0070495A6C495A001E495A390FC03FC06CB5
5A000101FCC7FC38003FE0253A7BB72A>I<010C1418010F147890391FE007F091B512E0
16C01680160015FC4913F0013113800130C8FCA413701360A513E0EBC07F9038C3FFE090
38CF81F09038FC00FC01F0137E4848133E49133F491480C8FC151F16C0A3153FA4121FEA
7F80157F00FF1580A390C7EAFF005A00C05C6C13015D0060495A0070495A7E003CEB1FC0
6C495A6C6CB4C7FC3807FFFC000113F038007F80253A7AB72A>53
D<EC01FE91380FFF80023F13E09138FF01F0903901F80070903907F001F890380FC00390
381F8007EB3F005B13FE4914F00001EC01C0484890C7FCA2485A120F5BA2121FEBC07F39
3FC1FFC09038C781F09038CE00F84848137C01B87F01F0133F5BED1F80485A4914C0A390
C7FC153FA25AA4157F1680A316005D5DA2007E495A5D003E1303003F495A6C6C485AEC1F
80260FE07FC7FC3803FFFC6C13F038003FC0253A79B72A>I<1206120EEA0F8090B612F8
A25A16F016E04815C016800038C7EA07004814060060140E5D5D485C5D4A5AC7485A4AC7
FC1406140E5C5C5C14F05C495A1303495AA249C8FC5BA2133EA25B13FCA212015B1203A3
485AA2120FA3485AA5123F5BA26C5A6CC9FC253B74B82A>I<EC07F0EC3FFE91B5128090
3901F80FC0903907C003E090390F0001F0011E1300011C14F8013C14785BA35B7FA216F8
6D14F06D13016DEB03E002C013C09138E0078090397FF00F00ECFC3E90383FFE786E5A6D
13C001077F6D7F15FC90380F7FFE90383C3FFFD9F80F13802601E00713C048487E4848C6
13E048C7127F001E143F003E140F003CEC07F0127C0078140300F815E0481401A316C015
03A26CEC078000781500007C140E6C141E003F14786C6C485A390FF00FE00003B51280C6
49C7FCEB1FF0253A7BB72A>I<EC0FF0EC7FFC49B5FC903907F01F8090390FC00FC09038
1F8007D93F0013E0017EEB03F013FE485A484814F8150112075B000F1403A3001F15FC5B
A216F8A21507A25B150FA3000F141F153F6C6C14F0157F000314EF3901F001CF3A00F803
9FE090387C0F1FEB1FFCD907F013C090C7123FA21680157F1600A215FE001C5C007F1301
48495A5D4A5A4A5A48495A4849C7FC007013FE387C03F8383FFFF0000F13C0D803FEC8FC
263A7AB72A>I<017FB712FEA301009038C000076E481300183E02FF151E92C8FC180EA4
5B4A1506A3933801800CA20103EC03004A1500A25EA25E0107141E4A137E91B512FEA3EC
F800010F143C4A131CA3160C041C1306011F0218130C5CA293C71218A3013F16305C1870
186018E0A2017F15014AEC03C01707171FEF7F80D801FFEC03FFB9FC1800A237397DB839
>69 D<013FB512E0A25B9039007FE0006E5AA2147F5DA514FF92C7FCA55B5CA513035CA5
13075CA5130F5CA5131F5CA5133F5CA4EBFFE0007FEBFFC0A2B6FC23397EB81E>73
D<017FB500C090B512C01A80A2010001C0C7383FF8006E48EC1FC096C7FC02FF151C92C8
5A6060EF03C04DC8FC49150E4A5C5F5FEE01C04C5A01034AC9FC4A130E5E167016F04B7E
010713034A487E151FED3BFE1573EDE1FF90380FF9C1DAF7007F14FE4A6D7E5C4A6D7E13
1F4A6D7EA2160F83A2013F6E7E5C707EA2707EA2017F6E7F5C717EA24D7E48486C4913F8
B6D8800FEBFFC04C5CA242397DB841>75 D<90267FFF80923803FFFE81610100F0FE0002
7FEE0DFCDA6FE0151B14EF02CFEE33F8A2DAC7F01563A219C71301028792380187F0DA83
F8EC0307A21806190F90260381FC140C02015F1818A218306E6C151F491660010604C05B
A2037FEB0180A2943803003F130E010C03065CED3F805F5F197F011C6D6C5A011895C7FC
5FA25FDB0FE05C0138ECE180013002E3C75AA216E6ED07F604FC1301137001604A5C1503
01F05C00015DD807FCEE07FEB500E0D9C003B512FC150116804F397DB84C>77
D<DA03FC133091391FFF8070027FEBE0F0903A01FC03F1E0903903F0007B4948133F4948
131F4948130F49C71207013E15C0017E14035BA3000115014915807FA46D91C7FC7F8014
E06C13FEECFFC06D13FC6D13FF16C06D14F00107801301D9003F7F14039138007FFE1507
15036F7E81A2821218A30038157EA45EA2007C5D1501007E4A5A007F5D6D495A6D495AD8
F9F0013FC7FCD8F0FE13FE90383FFFF8D8E00F13E0D8C00190C8FC2C3D7CBA2E>83
D<0007B812FCA3903AF8007FE003D80FC090383FC00049163C000EC7127F001E4B131C12
1CA212180038170C003014FF93C7FCA25A1818A2485BC7491400A514035DA514075DA514
0F5DA5141F5DA5143F5DA3147F4A7E0003B612F85AA2363977B83C>I<14FF010713E090
381F01F8903878007C01F8137E01FE7F0001801680A35BEA007090C7FCA4EC0FFF49B5FC
90390FFC3F00EB7FC03801FE00EA03F848485B485A4848137E485A007F150690C7FC15FE
48ECFC0C481301A21403007F9038077C18140E3A3F801C7E303A1FC0F83FF03A07FFE01F
C0C69038000F8027277CA52A>97 D<137FEA1FFF5BA212011200A35BA512015BA512035B
EC1FC0EC7FF89038F1E03E9038F7801F3A07FE000F8049EB07C04914E04913034914F0A2
000F15F8491301A41503121F5BA41507003F15F090C7FC16E0150F16C0151F481580ED3F
005D6D137E007D5C3979C001F039F0E007E039E0781F8026C01FFEC7FC380007F0253B78
B92E>I<EC7F80903803FFF090380FC07C90383F000E017C131F49137F000114FF485A48
5A120F484813FE153848481300A248C8FCA35A5AA75A7EA2151C127E15386C143015706C
6C13E0000FEB01C03907C007803903F03E003800FFF8EB1FC020277AA525>I<147F9038
03FFE090380F81F090383E00FC49137C48487F4848133F0007805B48481480121F5B123F
A248C7FCA3B71200A248C9FCA65A7EA2007E140EA25D6C14186C14386D5B6C6C485A3907
E003802601F01FC7FC38007FFCEB1FE021277BA525>101 D<EE07E091391FE01FF09139
7FF87878903A01F03FE0F8903907E01F80D90FC014F090261F800F1360D93F00EBC000A2
017E1307150F13FE5BA44B5AA2017C49C7FC153E6D5B013F5B90387F83F09038E7FFC0D9
E0FEC8FC4848C9FCA57F7F90B512E015FE6C6E7E6D8048B67E3A07C0003FF0D81F801307
48C76C7E003E140148140012FC5AA315015E4B5A007C1407007E4A5A6C023FC7FCD80F80
137E3903F007F8C6B512C0D91FFCC8FC2D387FA52A>103 D<EB01C0EB07F0130F14F8A2
14F0A214E0EB038090C7FCAAEB0FC0EA03FFA3EA003FEB1F80A5133F1400A55B137EA513
FE5BA512015BA41203B512C0A315387EB717>105 D<14FC137F14F8A213071303A314F0
A5130714E0A5130F14C0A5131F1480A5133F1400A55B137EA513FE5BA512015BA41203B5
12E014C0A2163A7EB917>108 D<90270FC03FC0EB7F80D803FF903AFFF001FFE048903B
C3C0F80781F0913BCF007C1E00F826003FDCD97E387F6D485C02F0D93EE0137C4AD93FC0
137E4A5C047F14FE494891C75AA291C7127EA44902FE1301017E4A5CA501FE0101140349
4A5CA5000102031407494A5CA4486C496C497EB500E1B500C3B51280A202C10283140041
257EA445>I<90390FC03FC0D803FFEBFFF0489038C3C0F89138CF007C26003FDC137E6D
5A02F0133E4A133F5C5E4948137EA291C7FCA316FE5B017E5CA4150113FE495CA4150312
01495CA400031407B500E1B512C0A202C114802A257EA42E>I<EC3FC0903801FFF89038
07C07C90381F001F017CEB0F8049EB07C0485A4848EB03E0120749EB01F0485A001F15F8
A248C7FCA25AA2007E140312FEA416F015075A16E0150F16C07E007EEC1F801600003E14
3E003F5C6C5C6C6C485A3907C007E03901F81F802600FFFEC7FCEB1FF025277BA52A>I<
903901F80FE0017FEB3FFC01FFEBF03F9139FBC00F80902607FF0013C06D48EB07E04AEB
03F05C4A14F81601010715FC5CA5130F5CA41603011F15F85CEE07F0A2EE0FE0A2013FEC
1FC01780163F6EEB7F0016FE9138E001F890397F7003F090397E3C0FC0DA0FFFC7FCEC03
F891C9FC13FEA25BA41201A25BA2487EB512E0A32E3581A42E>I<90381F807C3903FF81
FF489038878F80EC8E1F39003F9C3FEB1F3814709138601F00ECE0044AC7FC133F5CA291
C8FCA35B137EA513FE5BA512015BA4487EB512F0A321257EA421>114
D<903803FE0C90380FFF9C90383E01FCEBF0004848137C4848133C1538485AA215181538
487E1530D807F0130013FCEBFFE06C13FC14FFC614806D13C0011F13E01300EC0FF01407
003013031401A31238007814E0A3007CEB03C0EC0780127EB4EB1F0038F3C07C38E1FFF0
38C03F801E277DA521>I<1306A4130EA2130C131CA2133C137C13FC5B12031207001FB5
FCB6FCA23803F8005BA512075BA5120F5BA5001F130C1380A4141C003F131813007E1438
EB80301470380FC0E03807C1C03803FF8038007E00183479B220>I<D801F8EB03F0007F
14FF00FF5BA20007EB000F6C48EB07E0A4150F12074914C0A4151F120F491480A4153F12
1F491400A35DA2003F5C90C75A14017E14036D487E000F011E13F83807E0782601FFF013
F03A007F80FC00252679A42E>I<3A7FFFC01FFFB51280A23A07FC0007F86C48EB03E049
14C06D1480000115001506A25D7F00005C153815306D5B137E5DA24A5AEB3F0392C7FC5C
1406148C131F1498A214F0130F5C5CA25C130791C8FCA2282579A32C>I
E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 1 1
1 0 bop -152 129 a Ft(Ka)n(v)n(\024)-39 b(ci)n(\023)g(c,)24
b(Moura,)i(IEEE)h(T)-7 b(ransactions)25 b(on)j(Magnetics,)e(v)n(ol.)h
(32,)g(pp.)h(3875-3877,)c(Septem)n(b)r(er)j(1996.)932
b Fs(i)-140 583 y Fr(Exp)t(edien)l(t)46 b(Media)f(Noise)h(Mo)t(deling:)
61 b(Isolated)46 b(and)f(In)l(teracting)h(T)-11 b(ransitions)1191
761 y Fs(Aleksandar)26 b(Ka)n(v)n(\024)-39 b(ci)n(\023)g(c)24
b(and)j(Jos)n(\023)-39 b(e)26 b(M.)i(F.)g(Moura)499 861
y Fq(Data)e(Storage)g(Systems)e(Cen)n(ter,)j(Carnegie)g(Mellon)g(Univ)n
(ersit)n(y)-6 b(,)24 b(Pittsburgh,)i(P)-6 b(A)25 b(15213-3890)-97
1048 y Fp(Abstr)r(act)p Fq(|)f Fo(W)-7 b(e)25 b(prop)r(ose)h(a)g(sto)r
(c)n(hastic)h(media)e(mo)r(del)h(as)-180 1140 y(a)e(faster)g
(alternativ)n(e)g(to)h(micromagnetic)g(media)f(mo)r(deling.)-180
1231 y(The)i(basic)h(building)i(blo)r(c)n(k)f(of)f(the)f(mo)r(del)i
(are)e(zig-zag)j(pat-)-180 1322 y(terns)h(formed)g(b)n(y)f(triangles.)
42 b(W)-7 b(e)29 b(presen)n(t)h(equations)g(that)-180
1414 y(relate)f(the)f(statistics)i(of)f(the)f(sto)r(c)n(hastic)i(mo)r
(del)f(to)f(record-)-180 1505 y(ing)f(pro)r(cess)g(parameters.)38
b(Both)27 b(isolated)g(and)g(in)n(teracting)-180 1596
y(transitions)40 b(are)d(mo)r(deled.)62 b(Sim)n(ulation)38
b(results)g(are)f(pre-)-180 1687 y(sen)n(ted)29 b(to)h(sho)n(w)f(p)r
(erformance)h(of)g(the)f(mo)r(del.)520 1868 y Fn(I.)45
b(Intr)n(oduction)-97 1991 y Fq(There)30 b(is)f(renew)n(ed)h(in)n
(terest)f(in)g(\014nding)g(exp)r(edien)n(t)f(media)h(noise)-180
2082 y(mo)r(dels.)37 b(Micromagnetic)28 b(mo)r(deling)f([1],)17
b([2])28 b(is)f(probably)f(the)g(most)-180 2174 y(accurate)31
b(mo)r(del)f(for)i(media)e(\(transition\))h(noise.)50
b(Although)30 b(accu-)-180 2265 y(rate,)e(micromagnetic)e(mo)r(deling)h
(is)g(not)g(an)f(ideal)i(to)r(ol)g(for)f(statisti-)-180
2356 y(cal)k(studies)g(of)h(readbac)n(k)e(systems)g(\(e.g.,)i(error)f
(rate)g(predictions\),)-180 2448 y(where)22 b(generation)h(of)g
(thousands)e(of)i(bits)f(\(transitions\))h(is)f(required.)-180
2539 y(Generating)h(a)g(single)g(micromagnetic)f(transition)h(on)f(a)h
(media)f(sam-)-180 2630 y(ple)28 b(of)g(50)p Fm(\002)p
Fq(50)h(grains)g(tak)n(es)f(ab)r(out)f(10-20)i(min)n(utes)e(on)g(an)h
(a)n(v)n(erage)-180 2722 y(w)n(orkstation,)d(whic)n(h)f(is)g
(prohibitiv)n(e)f(for)h(signal)h(pro)r(cessing)g(purp)r(os-)-180
2813 y(es.)-97 2907 y(Statistical)f(zig-zag)g(mo)r(dels,)f(on)g(the)f
(other)h(hand,)g(are)g(an)g(attrac-)-180 2999 y(tiv)n(e)32
b(alternativ)n(e.)57 b(These)33 b(mo)r(dels)g(try)f(to)h(capture)g(the)
f(statistical)-180 3090 y(essence)j(of)g(the)e(random)g(zig-zag)j(line)
e(\(w)n(all\))h(that)f(separates)h(op-)-180 3181 y(p)r(ositely)g
(magnetized)f(regions)i(of)f(the)g(media.)60 b(Arnoldussen)34
b(and)-180 3273 y(T)-6 b(ong)25 b([3],)h(and)f(Middleton)g(and)f(Miles)
i([4],)16 b([5])26 b(suggest)f(zig-zag)h(pat-)-180 3364
y(terns)35 b(where)g(the)f(p)r(eak-to-p)r(eak)g(distances)h(are)g(the)f
(indep)r(enden)n(t)-180 3455 y(random)g(v)l(ariables)h(of)h(the)e(mo)r
(del.)61 b(This)35 b(leads)h(to)f(instabilit)n(y)g(\(a)-180
3547 y(do)n(wn-trac)n(k)24 b(w)n(all)i(drift\))f(since)g(the)f(mo)r
(del)h(is)g(then)f(an)g(indep)r(enden)n(t)-180 3638 y(incremen)n(t)31
b(random)f(pro)r(cess)j([6].)54 b(One)31 b(w)n(a)n(y)h(to)g(\014x)f
(this)h(is)g(to)g(use)-180 3729 y(decon)n(v)n(olution)20
b(of)h(the)f(p)r(eak-to-p)r(eak)g(probabilit)n(y)g(densit)n(y)g
(function)-180 3821 y(\(p)r(df)6 b(\))25 b(to)i(obtain)f(a)g(zero-to-p)
r(eak)g(p)r(df)g(as)g(in)g([7].)37 b(In)25 b(this)h(pap)r(er,)h(w)n(e)
-180 3912 y(circum)n(v)n(en)n(t)h(this)h(problem)g(b)n(y)f(presen)n
(ting)i(a)g(mo)r(del)f(that)g(in)n(v)n(olv)n(es)-180
4003 y(only)38 b(zero-to-p)r(eak)g(distances)i(in)e(the)g(form)g(of)h
(triangle)g(heigh)n(ts,)-180 4095 y(rather)26 b(than)f(p)r(eak-to-p)r
(eak)g(distances.)36 b(Th)n(us,)27 b(w)n(e)f(solv)n(e)g(the)g(insta-)
-180 4186 y(bilit)n(y)31 b(issue)h(b)n(y)e(a)n(v)n(oiding)h(altogether)
h(an)f(indep)r(enden)n(t)f(incremen)n(t)-180 4277 y(random)d(pro)r
(cess.)41 b(F)-6 b(urthermore,)27 b(the)g(geometry)g(of)h(our)g(mo)r
(del)f(al-)-180 4369 y(lo)n(ws)h(us)f(to)g(\014nd)f(unique)g
(relationships)i(b)r(et)n(w)n(een)f(the)g(mo)r(del)f(de\014n-)-180
4460 y(ing)19 b(quan)n(tities)f(and)g(the)g(recording)h(pro)r(cess)g
(parameters)f(\(transition)-180 4551 y(pro\014le)29 b(and)e(cross-trac)
n(k)i(correlation)h(width\).)43 b(W)-6 b(e)28 b(call)h(our)f(mo)r(del)
-180 4643 y(the)c(triangle)h(zig-zag)h(transition)f(\(TZ-ZT\))f(mo)r
(del.)34 b(TZ-ZT)25 b(mo)r(del-)-180 4734 y(ing)c(is)g(10)91
4702 y Fl(4)147 4734 y Fq(times)f(faster)i(than)e(micromagnetic)g(mo)r
(deling.)33 b(W)-6 b(e)20 b(sho)n(w)-180 4825 y(results)k(comparing)f
(the)g(TZ-ZT)g(to)h(micromagnetic)f(mo)r(deling.)33 b(W)-6
b(e)-180 4917 y(also)20 b(prop)r(ose)g(a)f(mo)r(di\014cation)g(to)g
(the)g(TZ-ZT)g(mo)r(del)g(to)g(incorp)r(orate)-180 5008
y(high)26 b(densit)n(y)f(nonlinearities.)-41 5141 y Fn(I)r(I.)45
b(Triangle)31 b(Zig-za)n(g)h(Transition)g(Modeling)-97
5264 y Fq(The)24 b(triangle)h(zig-zag)g(transition)g(\(TZ-ZT\))f(mo)r
(del)g(is)g(a)g(sto)r(c)n(has-)-180 5356 y(tic)19 b(mo)r(del)f(of)i
(the)e(zig-zag)i(line)g(that)e(separates)i(t)n(w)n(o)f(opp)r(ositely)h
(mag-)-180 5447 y(netized)31 b(regions)i(of)f(the)e(magnetic)h(medium.)
49 b(The)32 b(TZ-ZT)f(mo)r(del)-109 5660 y Fk(Man)n(uscript)23
b(receiv)n(ed)i(Marc)n(h)f(4,)f(1996.)-109 5739 y(A.)g(Ka)n(v)n(\024)
-33 b(ci)n(\023)g(c,)23 b(e-mail)f(k)l(a)n(v)n(cic@ece.cm)n(u.edu,)j
(fax)e(\(412\))j(268-3890.)-109 5817 y(This)18 b(w)n(ork)i(w)n(as)f
(supp)r(orted)h(in)f(part)h(b)n(y)g(the)g(National)f(Science)i(F)-6
b(ounda-)-180 5896 y(tion)19 b(under)h(Gran)n(t)f(No.)g(ECD-8907068.)31
b(The)19 b(United)h(States)g(go)n(v)n(ernmen)n(t)-180
5975 y(has)k(certain)g(righ)n(ts)g(in)f(this)h(material.)2201
1993 y @beginspecial 26 @llx 640 @lly 253 @urx 767 @ury
2026 @rwi @setspecial
%%BeginDocument: Fig1.epsi
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 26 640 253 767
%%BeginPreview: 228 128 1 128
% fffffffffffffffffffffffffffffffffffffffffffffffffffffffff0
% 8101010101010101010101010101010101010101010101010101010110
% 8000000000000000000000000000000000000000000000000000000010
% c44444444444444444444444444764c444444444444444444444444450
% 8000000000000000000000000002250000000000000000000000000010
% 91111111111111111111111111133d1111111111111111111111111110
% 8000000000000000000000000002360000000000000000000000000010
% c47444444444444444444444444676444444444444444444444445c450
% 83e000000000000000000000000624000000000000000000000000f810
% bfe101010101010101010101010101010101010101010101010101ff90
% bfffffffffffffffffffffffffffffffffffffffffffffffffffffff90
% cfe444444444444444444444444444444444444444444444444444fe50
% 81e000000000000000000000000000000000000000000000000000f010
% 9131111111111111111111111111111111111111111111111111119110
% 8000000000000000000000000000000000000000000000000000000010
% c444444444444444444444444444444444444444444444444444444450
% 8000000000000000000000000000000000000000000000000000000010
% 8101010101010101010101010101010101010101010101010101010110
% 8000000000000000000000000000000000000000000c00000000000010
% c444444444444444444444444444444444444444444c44444444444450
% 8000000000000000000000000000000000000000000c00000000000010
% 9111111111fd1111131111111111111111111111111d11111111111110
% 8000000040100000078000000000000000000000001e00000000000010
% c44444444454444444c444444444444444444444445e44444444444450
% 8000000070100000084000000000000000000000001e00000000000010
% 8101010157110101186101010101010101010101013f01010101010110
% 800000009110000013a000000000000000000000003f00000000000010
% c4444444f5544444649444444444444444444444447744444444444450
% 8000000002100000649800000000000000000000000400000000000010
% 91111111171111114789111111111111111111119d1511111111111110
% 8000000000100000848400000000000000000001980400000000000010
% c444444444544445848644444444444444444445fc4444444444444450
% 8000000000100001038200000081f000030000f1b00400000000000010
% 8101010101110102000101010181210107810141d10501010101010110
% 80000000001000060001800000e0200004800042b18400000000000010
% c4444444445444440000c44444e4644448444444474444444444444450
% 800000000010000800004000012220001be00000020400000000000010
% 9111111111111118000071111177311114b11111111111111111111110
% 800000000010001000002000000a200024900000000000000000000010
% c44444444454446000001444444e6444679c4444444444444444444450
% 80000000001000600000180000042000c4880000000000000000000010
% 8101010101110140000009010101210184850101010101010101010110
% 8000000000100080000004000000200103860000000000000fc00c0010
% c4444444445445800000064444446447000244444444444445445e4450
% c000000000100100000002000000200200010000000000040100120010
% b111111111111200000003111111311400019111111111171111211110
% b000000000100600000001800000200c000080000000000501006f8010
% 9444444444544400000000c444446448000044444444444d554452c450
% 8800000000100800000000c000002010000060000000000b210092c010
% 8d010101011118000000006101012130000021010101010171019e4110
% 8400000000103000000000200000202000001000000000005101122010
% 8244444444546000000000344444644000001c44444444447546123450
% 830000000010600000000010000020c0000008000000000001060e1010
% 811111111111c00000000009111131800000051111111111111c000910
% 81800008001080000000000c0200210000000600000080000108000c10
% 80c4444c445580000000000446446600000002444444c4444558000450
% 8040000e001300000000000203802600000001000000e0000130000210
% 8061010b611200000000000303992400000001810101a7010120000310
% 802000126014000000000001048828000000008000012c000140000110
% 8014445c445c000000000000c75c7800000000444445c64445c00001d0
% 801800004018000000000000c008300000000060000002000180000090
% 800911115110000000000000513120000000003111111f111100000050
% 8004000000300000000000002000600000000010000000000300000070
% 8006444444fc0000000000003445f0000000001c444444444fc0000030
% fffffffffffffffffffffffffffffffffffffffffffffffffffffffff0
% 8003010101c0000002000000190180000200000d010101010c00080010
% 8003800000800000038000001c0300000380000e0000000008000e0010
% 8002c4444500000002800000144600000280000a4444444450000a2010
% 800240000300000004b800001204000004880009000000003000124010
% 800271111200000007080000131c0000071800099111111120001ce010
% 800220000400000000080000110800000028000880000000400000a010
% 800214444c0000000010000010d000000038000844444444c00000e010
% 8002181c080000000038000010f0000000100008600000008000000010
% 8002092510000000000000001060000000000008210101010000000010
% 80020c243000000000000000fc00000000000008100000030000000010
% 8002047c600000000000001000000000000000081c4444460000000010
% 8002022440000000000000100000000000000008080000040000000010
% 80020335c00000000000001c00000000000000080511111c0000000010
% 8002011c8000000000000014c000000000000008060000080000000010
% 800200c500000000000000244000000000000008024444500000000010
% 800200c3000000000000002cc000000000000008010000300000000010
% 8002004200000000000000004000000000000008018101600000000010
% 8002002400000000000000018000000000000008008000400000000010
% 8002003c000000000000000000000000000000080044e4c00000000010
% 8002001800000000000000000000000000000008006121800000000010
% 821f800000000000000000000000000000000008003131000000000010
% 82000000000000000000000000000000000000080011e2000000000010
% 8380000000000000000000000000000000000008001d66000000000010
% 8280000000000000000000000000000000000008000924000000000010
% 84980000000000000000000000000000000000080005e8000000000010
% 8598000000000000000000000000000000000008000618000000000010
% 8010000000000000000000000000000000000008000250000000000010
% 8010000000000000000000000000000000000008000120000000000010
% 80100000000000000000000000000000000000080001e0000000000010
% 80000000000000000000000000000000000000080000c0000000000010
% 800000000000000000000c00000000000000007e000000000000000010
% 800000000002000000000c000000000000002000000000000000000010
% 800000008c02000000001e3c0000000000002000000000000000000010
% 800000019802000000001e180000000000003800000000000000000010
% 80000001b802000000001e180000000000002800000000000000000010
% 80000001b002000000003f6c0000000000004980000000000000000010
% 80000030d0020000000004000000000000005b00000000000000000010
% 80000002b0020000000004000000000000000180000000000000000010
% 8000000001820000000004000000000000000080000000000000000010
% 8000000003020000000004000000000000000380000000000000000010
% 80000000021b8000000004000000000000000000000000000000000010
% 80000000001f8000000004000000000000000000000000000000000010
% 80000000001f8000000004000000000000000000000000000000000010
% 80000000000f0000000004000000000000000000000000000000000010
% 80000000000f0000000004000000000000000000000000000000000010
% 80000000000f0000000004000000000000000000000000000000000010
% 8000000000060000000004000000000000000000000000000000000010
% 80000000000600000000040003c0000000000000000000000000000010
% 8000000000060000000004000100000000000000000000000000000010
% 8000000000060000000004000300000000000000000000000000000010
% 8000000000000000000004000780000000000000000000000000000010
% 8000000000000000000004000000000000000000000000000000000010
% 8000000000000000000004000040000000000000000000000000000010
% 8000000000000000000004000070000000000000000000000000000010
% 8000000000000000000004000078000000000000000000000000000010
% 800000000000000000007ffffff8000000000000000000000000000010
% 8000000000000000000004000070000000000000000000000000000010
% 8000000000000000000004000040000000000000000000000000000010
% 8000000000000000000004000000000000000000000000000000000010
% 8000000000000000000004000000000000000000000000000000000010
% 8000000000000000000000000000000000000000000000000000000010
% 8000000000000000000000000000000000000000000000000000000010
% fffffffffffffffffffffffffffffffffffffffffffffffffffffffff0
%%EndImage
%%EndPreview
/InitDictCount countdictstack def
gsave
save
mark
newpath
/showpage {} def
%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 { } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	
	
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 612 792 0 1 3 FMDOCUMENT
0 0 /Times-Italic FMFONTDEFINE
1 1 /Symbol FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "1" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 0 0 0 1 1 1]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 1 0 1 1 0 K
26.11 724.76 54.46 682.24 96.98 746.02 132.41 692.87 160.76 735.39 203.28 671.61 238.71 724.76
 252.89 703.5 252.89 767.28 26.11 767.28 10 Y
0 X
0 0 1 0 1 1 0 K
V
0.5 H
0 Z
N
0 0 0 1 0 0 0 K
26.11 639.72 252.88 767.28 R
2 Z
0 0 0 1 0 0 0 K
N
26.11 703.5 252.89 703.5 2 L
N
26.11 724.76 54.46 682.24 96.98 746.02 132.41 692.87 160.76 735.39 203.28 671.61 238.71 724.76
 252.89 703.5 8 L
N
37.3 703.24 40.29 703.5 43.28 703.24 3 L
0 Z
N
43.28 682.5 40.29 682.24 37.3 682.5 3 L
N
40.29 703.25 40.29 682.49 2 L
N
71.62 703.76 68.63 703.5 65.65 703.76 3 L
N
65.65 745.76 68.63 746.02 71.62 745.76 3 L
N
68.63 703.75 68.63 745.77 2 L
N
122.34 703.24 125.33 703.5 128.32 703.24 3 L
N
128.32 693.13 125.33 692.87 122.34 693.13 3 L
N
125.33 703.25 125.33 693.12 2 L
N
142.49 703.76 139.5 703.5 136.51 703.76 3 L
N
136.51 735.13 139.5 735.39 142.49 735.13 3 L
N
139.5 703.75 139.5 735.14 2 L
N
179.03 703.24 182.02 703.5 185.01 703.24 3 L
N
185.01 671.87 182.02 671.61 179.03 671.87 3 L
N
182.02 703.25 182.02 671.86 2 L
N
227.53 703.76 224.54 703.5 221.55 703.76 3 L
N
221.55 724.5 224.54 724.76 227.53 724.5 3 L
N
224.54 703.75 224.54 724.51 2 L
N
0 10 Q
(h) 31.29 675.76 T
0 8 Q
(1) 36.29 673.26 T
0 10 Q
(h) 58 739.18 T
0 8 Q
(2) 63 736.68 T
0 10 Q
(h) 116.33 686.03 T
0 8 Q
(3) 121.33 683.53 T
0 10 Q
(h) 128.87 728.55 T
0 8 Q
(4) 133.87 726.05 T
0 10 Q
(h) 171.39 664.77 T
0 8 Q
(5) 176.39 662.27 T
0 10 Q
(h) 213.91 717.92 T
0 8 Q
(6) 218.91 715.42 T
0 10 Q
(b) 52.55 707.29 T
0 8 Q
(1) 57.55 704.79 T
0 10 Q
(b) 95.07 696.66 T
0 8 Q
(2) 100.07 694.16 T
0 10 Q
(b) 126.96 707.29 T
0 8 Q
(3) 131.96 704.79 T
0 10 Q
(b) 158.85 696.66 T
0 8 Q
(4) 163.85 694.16 T
0 10 Q
(b) 201.37 707.29 T
0 8 Q
(5) 206.37 704.79 T
0 10 Q
(b) 236.8 697.02 T
0 8 Q
(6) 241.8 694.52 T
1 10 Q
(q) 94.56 734.24 T
(q) 158.56 723.74 T
(q) 201.06 676.74 T
(q) 236.56 713.74 T
(q) 52.06 687.87 T
37.65 753.34 26.11 756.65 37.65 759.96 36.44 756.65 4 Y
V
241.35 759.96 252.89 756.65 241.35 753.34 242.55 756.65 4 Y
V
36.44 756.65 242.55 756.65 2 L
N
0 F
(TW) 133.56 757.94 T
75.37 662.1 72.06 650.56 68.75 662.1 72.06 660.89 4 Y
V
72.06 670.06 72.06 660.89 2 L
1 Z
N
195.83 738.82 199.13 750.35 202.44 738.82 199.13 740.02 4 Y
V
199.13 730.85 199.13 740.02 2 L
N
108.14 666.46 111.14 671.65 114.14 666.46 111.14 666.46 4 Y
V
111.14 643.31 111.14 666.46 2 L
N
130.76 649.81 135.96 646.81 130.76 643.81 130.76 646.81 4 Y
V
130.76 646.81 107.61 646.81 2 L
N
(x) 115.6 665.76 T
(z) 127.86 651.23 T
(-M) 52.23 663.61 T
0 8 Q
(r) 63.89 661.11 T
0 10 Q
(+M) 176.8 732.16 T
0 8 Q
(r) 191.88 729.66 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1" 1
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Descend
%%Pages: 1
%%DocumentFonts: Times-Italic
%%+ Symbol
%%EOF
countdictstack InitDictCount sub { end } repeat
cleartomark
restore
grestore

%%EndDocument
 @endspecial 2346 2108 a(Fig.)f(1.)32 b(The)24 b(triangle)g(zig-zag)g
(transition)g(mo)r(del.)2010 2296 y Fq(\(illustrated)i(in)f(Figure)g
(1\))h(is)f(constructed)g(b)n(y)f(placing)i(side-b)n(y-side)2010
2388 y(isosceles)33 b(triangles)f(of)g(alternating)f(orien)n(tations)h
(on)f(the)f(line)i(rep-)2010 2479 y(resen)n(ting)d(the)g(nominal)g
(transition)h(cen)n(ter.)44 b(The)30 b(triangle)g(heigh)n(ts)2010
2570 y(\()p Fj(h)2084 2578 y Fl(1)2119 2570 y Fj(;)13
b(h)2197 2578 y Fl(2)2232 2570 y Fj(;)g(:)g(:)g(:)p Fq(\))33
b(are)h(indep)r(enden)n(t)e(random)g(v)l(ariables)i(dra)n(wn)g(from)f
(a)2010 2662 y(probabilit)n(y)j(densit)n(y)f(function)g(\(p)r(df)6
b(\))35 b Fj(f)3247 2670 y Fi(H)3305 2662 y Fq(\()p Fj(h)p
Fq(\).)65 b(The)35 b(v)n(ertex)g(angle)2010 2753 y Fj(\022)f
Fq(is)e(c)n(hosen)g(to)h(b)r(e)e(constan)n(t.)54 b(This)32
b(mak)n(es)f(it)i(p)r(ossible)g(to)f(\014nd)f(a)2010
2844 y(relationship)g(b)r(et)n(w)n(een)e Fj(\022)i Fq(and)e(the)h
(cross-trac)n(k)g(correlation)h(width,)2010 2936 y(whic)n(h)26
b(w)n(e)g(actually)g(use)g(to)g(determine)e Fj(\022)k
Fq(for)e(a)g(giv)n(en)g(medium.)2512 3123 y Fn(I)r(I)r(I.)46
b(Isola)-6 b(ted)31 b(Transitions)2010 3258 y Fh(A.)43
b(T)-6 b(r)l(ansition)30 b(Pr)l(o\014le)g(and)g(Jitter)f(Noise)i(Mo)l
(deling)2093 3406 y Fq(Denote)41 b(b)n(y)g Fj(M)2569
3414 y Fi(x)2608 3406 y Fq(\()p Fj(x)p Fq(\))f(the)h(a)n(v)n(erage)i
(do)n(wn-trac)n(k)d(magnetization)2010 3497 y(pro\014le,)27
b(where)g Fj(x)f Fq(denotes)g(the)h(do)n(wn-trac)n(k)e(direction.)38
b(W)-6 b(e)26 b(are)h(as-)2010 3588 y(suming)21 b(that)h(for)g
Fj(x)f(>)g Fq(0,)i Fj(M)2849 3596 y Fi(x)2889 3588 y
Fq(\()p Fj(x)p Fq(\))d Fj(>)h Fq(0)h(and)g(that)f Fj(M)3536
3596 y Fi(x)3575 3588 y Fq(\()p Fj(x)p Fq(\))g(is)i(o)r(dd,)f(e.g.,)
2010 3709 y Fj(M)2084 3717 y Fi(x)2123 3709 y Fq(\()p
Fj(x)p Fq(\))30 b(=)2358 3677 y Fl(2)p Fi(M)2446 3685
y Fg(r)p 2358 3692 122 4 v 2400 3734 a Fi(\031)2510 3709
y Fm(\001)22 b Fq(atan)2715 3644 y Ff(\000)2763 3678
y Fi(x)p 2763 3692 35 4 v 2764 3734 a(a)2807 3644 y Ff(\001)2877
3709 y Fq(or)32 b Fj(M)3051 3717 y Fi(x)3090 3709 y Fq(\()p
Fj(x)p Fq(\))e(=)g Fj(M)3388 3717 y Fi(r)3444 3709 y
Fm(\001)21 b Fq(erf)3593 3619 y Ff(\020)3694 3678 y Fi(x)p
3652 3692 118 4 v 3652 3700 a Fe(p)p 3702 3700 31 3 v
42 x Fl(2)p Fi(\033)3780 3619 y Ff(\021)3829 3709 y Fq(,)34
b(where)2010 3825 y Fj(M)2084 3833 y Fi(r)2144 3825 y
Fq(is)27 b(the)e(remanen)n(t)f(magnetization.)2010 4001
y Fo(Theorem)29 b(1)41 b Fd(The)36 b(aver)l(age)i(tr)l(ansition)f(pr)l
(o\014le)g Fj(M)3593 4009 y Fi(x)3632 4001 y Fq(\()p
Fj(x)p Fq(\))e Fd(is)g(r)l(elate)l(d)2010 4093 y(to)f(the)h(p)l(df)f
(of)f(TZ-ZT)h(heights)h Fj(f)3035 4101 y Fi(H)3093 4093
y Fq(\()p Fj(h)p Fq(\))e Fd(for)h(an)g(isolate)l(d)h(tr)l(ansition)2010
4184 y(thr)l(ough)2528 4325 y Fj(f)2565 4333 y Fi(H)2623
4325 y Fq(\()p Fj(h)p Fq(\))22 b(=)f Fm(\000)2900 4276
y Fj(M)2982 4244 y Fe(00)2974 4289 y Fi(x)3022 4276 y
Fq(\()p Fj(x)p Fq(\))p 2900 4308 227 4 v 2907 4375 a
Fj(M)2989 4349 y Fe(0)2981 4384 y Fi(x)3020 4375 y Fq(\(0\))3199
4325 y(for)65 b Fj(h)22 b Fm(\025)f Fq(0)p Fj(;)421 b
Fq(\(1\))2010 4523 y Fd(wher)l(e)29 b Fj(M)2309 4491
y Fe(00)2301 4536 y Fi(x)2349 4523 y Fq(\()p Fj(x)p Fq(\))21
b(=)2582 4492 y Fl(d)p 2565 4506 69 4 v 2565 4548 a(d)p
Fi(x)2656 4523 y Fq([)q Fj(M)2760 4491 y Fe(0)2752 4536
y Fi(x)2791 4523 y Fq(\()p Fj(x)p Fq(\)])g(=)3045 4492
y Fl(d)3079 4471 y Fc(2)p 3028 4506 101 4 v 3028 4550
a Fl(d)p Fi(x)3097 4536 y Fc(2)3151 4523 y Fq([)q Fj(M)3247
4531 y Fi(x)3286 4523 y Fq(\()p Fj(x)p Fq(\)])o Fd(.)2010
4695 y Fq(The)k(pro)r(of)h(of)g(Theorem)f(1)g(escap)r(es)i(the)d
(length)h(constrain)n(ts)h(of)g(this)2010 4786 y(pap)r(er,)f(but)f(can)
h(b)r(e)f(found)g(in)h([6].)35 b(The)25 b(tric)n(ky)f(part)g(in)h(the)f
(pro)r(of)h(is)2010 4877 y(to)18 b(relate)g(the)f(zig-zag)i(patterns)e
(to)h(renew)n(al)h(theory)-6 b(.)31 b(T)-6 b(o)18 b(a)n(v)n(oid)f
(errors)2010 4969 y(made)27 b(in)g(previous)g(attempts)g(to)h(deriv)n
(e)f(similar)h(relationships,)i(w)n(e)2010 5060 y(need)25
b(to)h(recognize)g(the)f(parado)n(x)h(of)g(residual)g(life)h(in)e
(renew)n(al)h(theo-)2010 5151 y(ry)20 b([8].)33 b(Due)20
b(to)g(this)h(parado)n(x,)g(the)f(p)r(df)g Fj(p)p Fq(\()p
Fj(w)r Fq(\))f(in)h(equation)g(\(18\))h(of)g([4])2010
5243 y(should)f(b)r(e)g(replaced)g(b)n(y)f Fj(w)8 b Fm(\001)e
Fj(p)p Fq(\()p Fj(w)r Fq(\))p Fj(=)p Fq(E)13 b([)p Fj(w)r
Fq(].)33 b(This)20 b(will)i(c)n(hange)e(the)f(rela-)2010
5334 y(tionship)30 b(b)r(et)n(w)n(een)f(the)g(magnetization)h
(pro\014le)g(and)f(the)h(sa)n(wto)r(oth)2010 5425 y(p)r(df)j
Fj(p)p Fq(\()p Fj(w)r Fq(\))f(in)h(Equations)g(\(23\))g(in)g([4])h(and)
e(\(5\))h(in)g([5].)57 b(See)33 b([6])h(for)2010 5517
y(details.)2093 5613 y(The)25 b(cross-trac)n(k)g(correlation)h(width)f
Fj(s)f Fq(\(de\014ned)f(in)i([9]\))g(is)h(corre-)2010
5704 y(lated)f(with)f(the)g(jitter)h(presen)n(t)e(in)i(the)e(readbac)n
(k)h(signal.)36 b(W)-6 b(e)24 b(there-)2010 5795 y(fore)36
b(\014nd)e(an)i(expression)f(for)h(the)f(cross-trac)n(k)h(correlation)h
(width)2010 5887 y Fj(s)2046 5895 y Fb(tzzt)2166 5887
y Fq(of)27 b(the)e(TZ-ZT)h(mo)r(del.)p eop
%%Page: 2 2
2 1 bop -152 129 a Ft(Ka)n(v)n(\024)-39 b(ci)n(\023)g(c,)24
b(Moura,)i(IEEE)h(T)-7 b(ransactions)25 b(on)j(Magnetics,)e(v)n(ol.)h
(32,)g(pp.)h(3875-3877,)c(Septem)n(b)r(er)j(1996.)909
b Fs(ii)255 1453 y @beginspecial 78 @llx 387 @lly 530
@urx 513 @ury 4067 @rwi @setspecial
%%BeginDocument: Fig2.epsi
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 78 387 530 513
%%BeginPreview: 453 127 1 127
% 000000000000000000000000000000000000000000080088000032000848000208000000000000000000000000000000000000000000000000
% 000000000008c000002000400000053000000000000820c0000010000800000200000000000000000000015000010800030000208000000000
% 00000000100cc000000000000000041000000000000f2061dff396ae38db7ce3dd673bf3f28000000000814000000000010000200000000000
% 000000039004ce77bb6ae6dde1eeed1700000000000920324a51926e484a5c424e4941325300000000188047e7abd9de293bdc3dab39dfbf28
% 0000000190054684ba2664652125251700000000000920124a529248484a50424b493152518000000000804264b18a52314a5c24b24a09a530
% 0000000290074a64a224a4652125251400000000000f20919b53f6de785b7cc35d66737b5280000000008042a4998a52194a50249a498aa518
% 00000003d01acfe6bb6df6d9a1eccd3700000000000020000000000000400000000048000000000000188046f6abd99a2b33dc35ab339bf528
% 0000000010000090000000000100000000000000000000000000000001c0000000007000000000000000800000000000000200000002400000
% 00000000000000e000000000018000000000000000000000000000000000000000000000000000000000000000000000000300000003800000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000001fc0000000000000000000000000000000000
% 3c00000000000000000000000000000000000000060c0000000000000000000000000000000001000000000000000000000000000000000000
% 200000000000000000000000000000000000000009040000000000000000000000000000000000000000000000000000000000000000000000
% 24001ffffffffffffffffffffffffffffff000000904000000000000000000000000000000000008000ffffffffffffffffffffffffffffff0
% 3c000002001001001001001001001001001000000904ffffffffffffffffffffffffffffff80000e0010002002400040008011000200040008
% 000300000000000000000000000000000010000009048001004200040008021000200040008000000010002000400040008001000200040008
% 3801000200100100100100100100100100100000066c80010002000400080010002000400080000000100027e6ee77ee3bbdb7000200040008
% 24011fffffbeffdf7feffff7fffbfffffff0000000008001fcdfddfdc77bb6f000200040008001f800100024a2c494e643a515000200040008
% 2401000200100100100100100101ffe100100000000080019452a52cc84ba29000200040008001c800100024a2c494ea32a515000200040008
% 380100020012010010010010010f9001001000000000ffff9452a52d464a229000200040008000300197ffe6a6ec66ef73b5b7000200040008
% bc0300020010010010010010017010010010000000008001d4df99adee6bb6f000200040008000180310002000400040488001000200040008
% 2400000207f6efefde3bddb7018010010010000000008001000200040908001000200040008000f00190002000400040708001000200040008
% 0000000204b2852956435d14030010010010000000008001000200040e0800100020004000800188009ffffbfffdfffeffff7fffbff7dffbf8
% 24000ffff4b285295a3351140d00100100100007f000fbff7fffbfffdfffeffff7fffbfffd8000080090002000400040008001000200040008
% 7c00000206b6edcd5f735db7190010010010000400008001000200040048001000200040008000000390002000400040008001000200040008
% 0000000200100100104900102100100100100000000080010002000400c8001000200040008000f00010000000000000018000000000000008
% 04001ffdffbeffdf7ffffff7fffbfffdfff00000000080010002000400a800100020004000800108001000200040004004a001000200040008
% 3c00000200100100100100108100100100100001e0008001000200040118001000200040008001080010002000400040048001000200040008
% 340000020010010010010010810010010010000100008001000200040118001000200040008000f00010002000400040009001000200040008
% 2c00000200100100100100110100100100100001e0008001000200040208001000200040008000000010002000400040088801000200040008
% 04000002001001001001001201001001001000010000800100020004020800100020004000800000001ffffbfffdfffeffff7fffbff7dffbf8
% 30000002001001001001001601001001001000012000800100020004020c001000200040008001f80010002000400040008401000200040008
% 1c00000000000000000000040000000000100001e000800100020004040c001000200040008001080010002000400040208401000200040008
% 24000002001001001001001801001001001000000000fbff7fffbfffdfffeffff7fffbfffd8000000010002551489540208001000200040008
% 0000000200100100100100180100100100100001e000800000000000085e000000000000008001000010002512491440008201000200040008
% bc001fffffbeffdf7feffff7fffbfffdfff000010000800155128aa40809001000200040008000e000179cf106430440408101000200040008
% 2400000200100100100100300100100100100001200080015122928410890010002000400080001c0090002104620440408001000200040008
% 000000020ab209aa100100700100100100100005e000f9cf106230841109801000200040008000000190002108440440008101000200040008
% 240000020a34092810010050010010010010000380008001104620841008c010002000400080007801900021194c8440808101000200040008
% 7c000002021c0308100100d0010010010010000070008001108240842208a010002000400080004003dffffbfffdfffeffff7fffbff7dffbf8
% 00000e3ef218c308100100900100100100100000000080001190c88020005000000000000080007803d0002000400040008081000200040008
% 340000020210050810010190010010010010000000008001000200042808401000200040008000400090002000400040808081000200040008
% 3400000202320d88100101100100100100100007e000fbff7fffbfffdfffeffff7fffbfffd8000480010000000000001000080000000000008
% 3c001ffdffbeffdf7feffff7fffbfffdfff0000420008001000200044808281000200040008000780010002000400040008041000200040008
% 000000020010010010010210010010010010000000008001000200045008281000200040008000000010002000400041008041000200040008
% 3c0000020010010010010210010010010010000000008001000200049008101000200040008000080010002000400041008041000200040008
% 200000020010010010010410010010010010000000008001000200049008141000200040008000f80010002000400040008001000200040008
% 240000020010010010010c1001001001001000063000800100020004a0080810002000400080000800100020004000420ff021000200040008
% 3c00000200100100100108100100100100100001c000800100020004a00804100020004000800018001ffffbfffdfffeffff7fffbff7dffbf8
% 000000020010010010010810010010010010000000008001000200052008031000200040008000fe0010002000400042208601000200040008
% 2200000200100100100110100100100100100000000080010002000540080110002000400080000000100020004000444081e1000200040008
% 2d0000020010010010011010010010010010000000008000000000014000008000000000008000000010002000400044408021000200040008
% 2d001fffffbeffdf7feffff7fffbfffdfff000018000fbff7fffbfffdfffeffff7fffbfffd80018c0010002000400044808021000200040008
% 370000020010010010012010010010010010000060008001000200060008005000200040008000700390002000400041008031000200040008
% 0400000200100100100160100100100100100001c8008001000200068008005000200040008000000090002000400046008011000200040008
% 3c000002001001001001401001001001001000010800800100020006800800500020004000800000019000200040004c008011000200040008
% 3400000200100100100140100100100100100000000080010002000400080050002000400080000000dffffbfffdfffeffff7fffbff7dffbf8
% 2c0000020010010010018010010010010010000120008000000000050000002000000000008000600050002000400048008019000200040008
% 0003000200100100100180100100100100100003e0008001000200060008007000200040008000180390002000400058008009000200040008
% 000480020010010010010010010010010010000000008001000200040008003000200040008000720010000000000010000008000000000008
% 3c049ffdffbeffdf7feffff7fffbfffdfff00005e000800100020006000800300020004000800042001000200040007000800d000200040008
% 20048002001001001003001001001001001000012000fbff7fffbfffdfffeffff7fffbfffd8000000010002000400070008005000200040008
% 3c04800200100100100300100100100100100000000080010002000c0008001000200040008000480010002000400040008005000200040008
% 2003000200100100100300100100100100100001600080010002000c0008001000200040008000f80010002000400050008007000200040008
% 2400000200100100100500100100100100100000c00080010002000c00080010002000400080000000100020004000e0008003000200040008
% 3c00000200100100100500100100100100100001a000800100020014000800180020004000800178001ffffbfffdfffeffff7fffbff7dffbf8
% 0000000200100100100900100100100100100000000080010002001c0008001800200040008000480010002000400140008003000200040008
% 0000000200100100100900100100100100100001e0008001000200140008001800200040008000000010002000400160008003000200040008
% 000000020010010010110010010010010010000100008000000000100000000c00000000008000580010002000400240008001000200040008
% 00001fffffbeffdf7ffffff7fffbfffdfff0000120008001000200140008001800200040008000300010002000400240008001000200040008
% fc00000200100100101100100100100100100001e0008001000200240008001400200040008000680010002000400440008001000200040008
% 24000002001001001021001001001001001000000000fbff7fffbfffdfffeffff7fffbfffd80000003d0002000400440008001800200040008
% 2400000200100100102100100100100100100001a00080010002002400080014002000400080007802500020004008c0008001800200040008
% 3c00000200100100104100100100100100100001a00080010002006400080016002000400080004000d00020004008c0008001800200040008
% 0000000200100100104100100100100100100001e000800100020024000800150020004000800048009ffffbfffdfffeffff7fffbff7dffbf8
% 340000020010010010810010010010010010000000008001000200440008001200200040008000780110002000401140008001400200040008
% 3400000200100100108100100100100100100007e0008001000200c400080011002000400080000003d0000000001100000000600000000008
% 3c0000000000000001800000000000000010000120008001000200440008001080200040008000680010002000402140008001200200040008
% 00001fffffbeffdf7feffff7fffbfffdfff0000120008001000200840008001080200040008000680010002000402040008001300200040008
% 0400000200100100120100100100100100100001e00080010002018400080010c0200040008000780010002000404240008001300200040008
% 30000002001001001601001001001001001000000000fbff7fffbfffdfffeffff7fffbfffd8000000010002000404240008001100200040008
% 1c0000020010010014010010010010010010000000008001000201040008001010200040008001f80010002000408040008001180200040008
% 24000002001001001c01001001001001001000000000800100020304000800103020004000800048001ffffbfffdfffeffff7fffbff7dffbf8
% bc0000020010010018010010010010010010000100008001000201040008001028200040008000480010002000410440008001040200040008
% 2400000200100100100100100100100100100001e00080010002060400080010082000400080007800100020004100400080010c0200040008
% 0000000200100100300100100100100100100001200080000000060000000000180000000080000000100020004204400080010e0200040008
% fc001fffffbeffdf7feffff7fffbfffdfff0000000008001000206040008001018200040008000000010002000420840008001020200040008
% 8400000200100100500100100100100100100001a0008001000204040008001004200040008000000010002000440040008001050200040008
% 0000000200100100500100100100100100100001a000800100020c04000800100c200040008000000010002000440840008001030200040008
% 0400000200100100d00100100100100100100001e000800100020404000800100c200040008000680190002000481040008001008200040008
% 3c000002001001011001001001001001001000000000fbff7fffbfffdfffeffff7fffbfffd8000680090002000480040008001018200040008
% 34000002001001031001001001001001001000012000800100022804000800100620004000800078009ffffbfffdfffeffff7ffffff7dffbf8
% 2c00000200100107100100100100100100100003e0008001000210040008001002200040008000000090002000502040008001002200040008
% 000000020010010c1001001001001001001000000000800100025004000800100220004000800070009000000020000000000000a000000008
% 3c0000000000001400000000000000000010000120008001000260040008001001200040008000480190002000604040008001009200040008
% 20001fffffbeffff7feffff7fffbfffdfff00003e0008001000240040008001001a000400080004a0010002000404040008001000a00040008
% 3c00000200100170100100100100100100100000000080010003400400080010016000400080007e0010002000400040008001004a00040008
% 20000002001001a0100100100100100100100005e0008001000380040008001000e00040008000000010002000c10040008001002600040008
% 240000020010038010010010010010010010000120008001000300040008001000e00040008000700010002001410040008001000600040008
% 3c00000200100d801001001001001001001000000000fbff7fffbfffdfffeffff7fffbfffd8000480010002001400040008001001200040008
% 0001800200103700100100100100100100100005f800800100060004000800100070004000800048001ffffbfffffffeffff7fffbff7dffbf8
% 200080020013f10010010010010010010010000108008001000600040008001000200040008000700010002004400040008001000280040008
% 3c008002007da10010010010010010010010000008008000001400000000000000240000008000000010002008480040008001000660040008
% 241881fffffc010010010010010010010010000000008001004a00040008001000300040008001f80010002008480040008001000310040008
% 00009fffffbeffdf7feffff7fffbfffdfff000000030800100d200040008001000298040008001080010002010480040008001000288040008
% 380180020010010010010010010010010010000000488001021200040008001000242040008000000010002020400040008001000226040008
% 240000020010010010010010010010010010000000488001002200040008001000233040008000580190002044600040008001000201840008
% 24000002001001001001001001001001001000000048800190c20004000800100020c640008000300250003fa0c00040008001000204640008
% 38001ffffffffffffffffffffffffffffff000000048806de70200040008001000203fd900800068025ffffffffffffffffffffffffffffff8
% 00000060f0000000000c000000000030f00000000030ffffffffffffffffffffffffffffff8000000240000000000000000000000000000000
% 3c0000909000000000120000000000489000000000000018c00000000018000000000318000000000240000000000000187000000000000000
% 200000903000000000120000000000483000000000000009800000000024000000000130000000000180030300000000081000000000c0c000
% 240006902000000000120000000000482000000000000008c00000000024000000000118000000000000010480000000083000000000418000
% 3c000090400000000012000000000048400000000000018840000000002400000000010800000000000001048000000008180000000041e000
% 00000066f0000000000c000000000033f000000000000008400000000024000000000108000000000000010480000000080800000000412000
% 000000000000000000000000000000000000000000000019c0000000001800000000033800000000000001048000000019f000000000412000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000033300000000000000000000cce000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000018000000020090000000200000000000000000000000000400002000000000000000000000000000000820000c00004c62301000000
% 000000008000000020080000000001200000000000000000000000000002000200000000000000000000000000000000400004493303200200
% 00000038bbce1bf7283b56ef7387e127e000000000000000000000dbdce47bf2000000000000000000000dfbd5b6778a4ef70849130327e200
% 00000018ca5011343049646943832124a0000000000000000000004a9c444a5200000000000000000000089a58a2948c52970849150324a200
% 00000028ca4c1154284934a9420321a4a0000000000000000000004a90444a520000000000000000000008aa4ca29486529408491d05a4a200
% 0000003db35c1b7f3c7b56fd7387a1f6a0000000000000000000005bdcc26b52000000000000000000000dbf55b6668accf704c66b35f6a200
% 000000000012000000000000000001000000000000000000000000400002000200000000000000000000000000000000008004000025000200
% 00000000001c000000000000000001000000000000000000000001c0000000000000000000000000000000000000000000c000000021000000
%%EndImage
%%EndPreview
/InitDictCount countdictstack def
gsave
save
mark
newpath
/showpage {} def
%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 { } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	
	
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 612 792 0 1 3 FMDOCUMENT
0 0 /Times-Roman FMFONTDEFINE
1 1 /Symbol FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "1" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 0 0 0 1 1 1]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 66 214 548 580 130.13 98.81 89.68 400.86 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 66 214 548 580
%!PS-Adobe-2.0 
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: /home/kavcic/tex/papers/spie95mag/paper/Fig8matlab.ps
%%CreationDate: 09/22/95  04:47:09
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Pages: (atend)
%%BoundingBox: (atend)
%%EndComments

%%BeginProlog

% MathWorks dictionary
/MathWorks 150 dict begin

% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef

% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
/rm /rmoveto ldef
/rl /rlineto ldef
/s /show ldef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef

% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef

% orientation switch
/portraitMode 	0 def
/landscapeMode 	1 def

% coordinate system mappings
/dpi2point 0 def

% font control
/FontSize 0 def
/FMS {
	/FontSize xstore		%save size off stack
	findfont
	[FontSize 0 0 FontSize neg 0 0]
	makefont
	setfont
	}bdef

/reencode {
exch dup where
{pop load} {pop StandardEncoding} ifelse
exch
dup 3 1 roll
findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def
  currentdict
end
definefont pop
} bdef

/isroman {
findfont /CharStrings get
/Agrave known
} bdef

/FMSR {
3 1 roll 1 index
dup isroman
{reencode} {pop pop} ifelse
exch FMS
} bdef

/csm {
	1 dpi2point div -1 dpi2point div scale
	neg translate
	landscapeMode eq {90 rotate} if
	} bdef

% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4 dpi2point mul] 0 setdash } bdef

% macros for lines and objects
/L {
	lineto
	stroke
	} bdef
/MP {
	3 1 roll moveto
	1 sub {rlineto} repeat
	} bdef
/AP {
	{rlineto} repeat
	} bdef
/PP {
	closepath fill
	} bdef
/DP {
	closepath stroke
	} bdef
/MR {
	4 -2 roll moveto
	dup  0 exch rlineto
	exch 0 rlineto
	neg  0 exch rlineto
	closepath
	} bdef
/FR {
	MR stroke
	} bdef
/PR {
	MR fill
	} bdef
/L1i {
	{ currentfile picstr readhexstring pop } image
	} bdef

/tMatrix matrix def
/MakeOval {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 0 360 arc
	tMatrix setmatrix
	} bdef
/FO {
	MakeOval
	stroke
	} bdef
/PO {
	MakeOval
	fill
	} bdef

/PD {
	2 copy moveto lineto stroke
	} bdef


currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    66   210   555   583
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: graph1 1
bplot

/dpi2point 12 def
portraitMode 0216 7344 csm

  577   341  5868  4476 MR c np
76 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

1 j
c1
   0    0 6914 5187 PR
6 w
DO
4 w
c0
 898 4615 mt  898  389 L
 898  389 mt  898  389 L
1434 4615 mt 1434  389 L
1434  389 mt 1434  389 L
1970 4615 mt 1970  389 L
1970  389 mt 1970  389 L
2505 4615 mt 2505  389 L
2505  389 mt 2505  389 L
3041 4615 mt 3041  389 L
3041  389 mt 3041  389 L
3577 4615 mt 3577  389 L
3577  389 mt 3577  389 L
4113 4615 mt 4113  389 L
4113  389 mt 4113  389 L
4649 4615 mt 4649  389 L
4649  389 mt 4649  389 L
5184 4615 mt 5184  389 L
5184  389 mt 5184  389 L
5720 4615 mt 5720  389 L
5720  389 mt 5720  389 L
6256 4615 mt 6256  389 L
6256  389 mt 6256  389 L
 898 4423 mt 6256 4423 L
6256 4423 mt 6256 4423 L
 898 4039 mt 6256 4039 L
6256 4039 mt 6256 4039 L
 898 3655 mt 6256 3655 L
6256 3655 mt 6256 3655 L
 898 3270 mt 6256 3270 L
6256 3270 mt 6256 3270 L
 898 2886 mt 6256 2886 L
6256 2886 mt 6256 2886 L
 898 2502 mt 6256 2502 L
6256 2502 mt 6256 2502 L
 898 2118 mt 6256 2118 L
6256 2118 mt 6256 2118 L
 898 1734 mt 6256 1734 L
6256 1734 mt 6256 1734 L
 898 1349 mt 6256 1349 L
6256 1349 mt 6256 1349 L
 898  965 mt 6256  965 L
6256  965 mt 6256  965 L
 898  581 mt 6256  581 L
6256  581 mt 6256  581 L
 898 4615 mt  898  389 L
 898  389 mt 6256  389 L
 898 4615 mt  898  389 L
 898  389 mt 6256  389 L
 898 4615 mt  898  389 L
 898  389 mt 6256  389 L
SO
6 w
 898 4615 mt 6256 4615 L
 898  389 mt 6256  389 L
6256 4615 mt 6256  389 L
 898 4615 mt  898  389 L
6256 4615 mt 6256 4615 L
 898 4615 mt  898 4615 L
 898 4615 mt 6256 4615 L
 898 4615 mt  898  389 L
 898 4615 mt  898 4615 L
 898 4615 mt  898 4561 L
 898  389 mt  898  443 L
 674 4784 mt 
(-0.25) s
1434 4615 mt 1434 4561 L
1434  389 mt 1434  443 L
1250 4784 mt 
(-0.2) s
1970 4615 mt 1970 4561 L
1970  389 mt 1970  443 L
1746 4784 mt 
(-0.15) s
2505 4615 mt 2505 4561 L
2505  389 mt 2505  443 L
2321 4784 mt 
(-0.1) s
3041 4615 mt 3041 4561 L
3041  389 mt 3041  443 L
2817 4784 mt 
(-0.05) s
3577 4615 mt 3577 4561 L
3577  389 mt 3577  443 L
3537 4784 mt 
(0) s
4113 4615 mt 4113 4561 L
4113  389 mt 4113  443 L
3973 4784 mt 
(0.05) s
4649 4615 mt 4649 4561 L
4649  389 mt 4649  443 L
4549 4784 mt 
(0.1) s
5184 4615 mt 5184 4561 L
5184  389 mt 5184  443 L
5044 4784 mt 
(0.15) s
5720 4615 mt 5720 4561 L
5720  389 mt 5720  443 L
5620 4784 mt 
(0.2) s
6256 4615 mt 6256 4561 L
6256  389 mt 6256  443 L
6116 4784 mt 
(0.25) s
 898 4423 mt  952 4423 L
6256 4423 mt 6202 4423 L
 699 4476 mt 
(-1) s
 898 4039 mt  952 4039 L
6256 4039 mt 6202 4039 L
 579 4092 mt 
(-0.8) s
 898 3655 mt  952 3655 L
6256 3655 mt 6202 3655 L
 579 3708 mt 
(-0.6) s
 898 3270 mt  952 3270 L
6256 3270 mt 6202 3270 L
 579 3323 mt 
(-0.4) s
 898 2886 mt  952 2886 L
6256 2886 mt 6202 2886 L
 579 2939 mt 
(-0.2) s
 898 2502 mt  952 2502 L
6256 2502 mt 6202 2502 L
 783 2555 mt 
(0) s
 898 2118 mt  952 2118 L
6256 2118 mt 6202 2118 L
 663 2171 mt 
(0.2) s
 898 1734 mt  952 1734 L
6256 1734 mt 6202 1734 L
 663 1787 mt 
(0.4) s
 898 1349 mt  952 1349 L
6256 1349 mt 6202 1349 L
 663 1402 mt 
(0.6) s
 898  965 mt  952  965 L
6256  965 mt 6202  965 L
 663 1018 mt 
(0.8) s
 898  581 mt  952  581 L
6256  581 mt 6202  581 L
 783  634 mt 
(1) s
 898  389 mt 6256  389 L
 898 4615 mt 6256 4615 L
 898 4615 mt  898  389 L
6256 4615 mt 6256  389 L
 898  389 mt  898  389 L
6256  389 mt 6256  389 L
gs 898 389 5359 4227 MR c np
DA
64 0 65 0 64 0 64 0 65 0 64 0 64 0 65 0 
64 0 64 0 64 0 65 0 64 -1 64 0 65 0 64 -1 
64 0 65 -1 64 -2 64 -1 64 -2 65 -3 64 -4 64 -5 
65 -7 64 -8 64 -11 64 -13 65 -16 64 -20 64 -24 65 -29 
64 -34 64 -40 65 -48 64 -54 64 -63 64 -71 65 -79 64 -89 
64 -97 65 -107 64 -114 64 -123 65 -130 64 -137 64 -142 64 -146 
65 -149 64 -151 64 -150 65 -149 64 -146 64 -142 64 -137 65 -130 
64 -123 64 -115 65 -106 64 -97 64 -89 65 -79 64 -71 64 -62 
64 -55 65 -47 64 -41 64 -34 65 -29 64 -24 64 -19 65 -16 
64 -13 64 -11 64 -8 65 -7 64 -5 64 -4 65 -2 64 -3 
64 -1 64 -2 65 -1 64 0 64 -1 65 0 64 0 64 -1 
65 0 64 0 64 0 64 0 65 0 64 0 64 0 65 0 
64 0 64 0 65 0 426 4423 100 MP stroke
64 0 362 4423 2 MP stroke
SO
370 -8 371 -27 372 -72 371 -223 372 -530 370 -802 371 -844 372 -654 
371 -386 372 -180 370 -69 371 -23 372 -1 1092 4400 14 MP stroke

gr 

end

eplot
%%EndObject graph 1

epage
end

showpage

%%Trailer
%%BoundingBox:    66   210   555   583
%%Pages: 001
%%EOF

%%EndDocument
FMENDEPSF
98.83 490.31 113.41 490.31 2 L
0.5 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
J
98.65 473.12 112.96 473.12 2 L
J
98.65 473.12 100.4 473.12 2 L
N
[3.026 3.891] 3.026 I
100.4 473.12 111.21 473.12 2 L
N
J
111.21 473.12 112.96 473.12 2 L
N
0 10 Q
(along track distance in) 104.16 388.44 T
1 F
(m) 196.92 388.44 T
0 F
(m) 202.68 388.44 T
(normalized magnetization) 0 -270 84.13 399.27 TF
(a\051  Magnetization pro\336le) 107.88 506.03 T
(micromagnetic) 115.1 487.82 T
(TZ-ZT) 114.1 469.91 T
J
87.86 395.89 96.11 500.64 R
7 X
V
1 Z
N
95.86 394.64 223.11 403.64 R
V
N
0 X
(1) 91.11 491.64 T
(0) 90.86 449.39 T
(-1) 88.86 406.89 T
(0.2) 198.61 397.64 T
(0) 153.11 397.64 T
(-0.2) 99.11 397.89 T
0 67 214 543 583 128.51 99.62 247.03 400.15 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 67 214 543 583
%!PS-Adobe-2.0 
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: /home/kavcic/tex/papers/spie95mag/paper/Fig9matlab.ps
%%CreationDate: 09/22/95  05:32:18
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Pages: (atend)
%%BoundingBox: (atend)
%%EndComments

%%BeginProlog

% MathWorks dictionary
/MathWorks 150 dict begin

% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef

% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
/rm /rmoveto ldef
/rl /rlineto ldef
/s /show ldef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef

% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef

% orientation switch
/portraitMode 	0 def
/landscapeMode 	1 def

% coordinate system mappings
/dpi2point 0 def

% font control
/FontSize 0 def
/FMS {
	/FontSize xstore		%save size off stack
	findfont
	[FontSize 0 0 FontSize neg 0 0]
	makefont
	setfont
	}bdef

/reencode {
exch dup where
{pop load} {pop StandardEncoding} ifelse
exch
dup 3 1 roll
findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def
  currentdict
end
definefont pop
} bdef

/isroman {
findfont /CharStrings get
/Agrave known
} bdef

/FMSR {
3 1 roll 1 index
dup isroman
{reencode} {pop pop} ifelse
exch FMS
} bdef

/csm {
	1 dpi2point div -1 dpi2point div scale
	neg translate
	landscapeMode eq {90 rotate} if
	} bdef

% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4 dpi2point mul] 0 setdash } bdef

% macros for lines and objects
/L {
	lineto
	stroke
	} bdef
/MP {
	3 1 roll moveto
	1 sub {rlineto} repeat
	} bdef
/AP {
	{rlineto} repeat
	} bdef
/PP {
	closepath fill
	} bdef
/DP {
	closepath stroke
	} bdef
/MR {
	4 -2 roll moveto
	dup  0 exch rlineto
	exch 0 rlineto
	neg  0 exch rlineto
	closepath
	} bdef
/FR {
	MR stroke
	} bdef
/PR {
	MR fill
	} bdef
/L1i {
	{ currentfile picstr readhexstring pop } image
	} bdef

/tMatrix matrix def
/MakeOval {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 0 360 arc
	tMatrix setmatrix
	} bdef
/FO {
	MakeOval
	stroke
	} bdef
/PO {
	MakeOval
	fill
	} bdef

/PD {
	2 copy moveto lineto stroke
	} bdef


currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    66   210   550   590
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: graph1 1
bplot

/dpi2point 12 def
portraitMode 0216 7344 csm

  581   260  5804  4557 MR c np
76 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

1 j
c1
   0    0 6914 5187 PR
6 w
DO
4 w
c0
 898 4615 mt  898  389 L
 898  389 mt  898  389 L
1568 4615 mt 1568  389 L
1568  389 mt 1568  389 L
2238 4615 mt 2238  389 L
2238  389 mt 2238  389 L
2907 4615 mt 2907  389 L
2907  389 mt 2907  389 L
3577 4615 mt 3577  389 L
3577  389 mt 3577  389 L
4247 4615 mt 4247  389 L
4247  389 mt 4247  389 L
4917 4615 mt 4917  389 L
4917  389 mt 4917  389 L
5586 4615 mt 5586  389 L
5586  389 mt 5586  389 L
6256 4615 mt 6256  389 L
6256  389 mt 6256  389 L
 898 4615 mt 6256 4615 L
6256 4615 mt 6256 4615 L
 898 4192 mt 6256 4192 L
6256 4192 mt 6256 4192 L
 898 3770 mt 6256 3770 L
6256 3770 mt 6256 3770 L
 898 3347 mt 6256 3347 L
6256 3347 mt 6256 3347 L
 898 2925 mt 6256 2925 L
6256 2925 mt 6256 2925 L
 898 2502 mt 6256 2502 L
6256 2502 mt 6256 2502 L
 898 2079 mt 6256 2079 L
6256 2079 mt 6256 2079 L
 898 1657 mt 6256 1657 L
6256 1657 mt 6256 1657 L
 898 1234 mt 6256 1234 L
6256 1234 mt 6256 1234 L
 898  812 mt 6256  812 L
6256  812 mt 6256  812 L
 898  389 mt 6256  389 L
6256  389 mt 6256  389 L
 898 4615 mt  898  389 L
 898  389 mt 6256  389 L
 898 4615 mt  898  389 L
 898  389 mt 6256  389 L
 898 4615 mt  898  389 L
 898  389 mt 6256  389 L
SO
6 w
 898 4615 mt 6256 4615 L
 898  389 mt 6256  389 L
6256 4615 mt 6256  389 L
 898 4615 mt  898  389 L
6256 4615 mt 6256 4615 L
 898 4615 mt  898 4615 L
 898 4615 mt 6256 4615 L
 898 4615 mt  898  389 L
 898 4615 mt  898 4615 L
 898 4615 mt  898 4561 L
 898  389 mt  898  443 L
 734 4784 mt 
(-20) s
1568 4615 mt 1568 4561 L
1568  389 mt 1568  443 L
1404 4784 mt 
(-15) s
2238 4615 mt 2238 4561 L
2238  389 mt 2238  443 L
2074 4784 mt 
(-10) s
2907 4615 mt 2907 4561 L
2907  389 mt 2907  443 L
2783 4784 mt 
(-5) s
3577 4615 mt 3577 4561 L
3577  389 mt 3577  443 L
3537 4784 mt 
(0) s
4247 4615 mt 4247 4561 L
4247  389 mt 4247  443 L
4207 4784 mt 
(5) s
4917 4615 mt 4917 4561 L
4917  389 mt 4917  443 L
4837 4784 mt 
(10) s
5586 4615 mt 5586 4561 L
5586  389 mt 5586  443 L
5506 4784 mt 
(15) s
6256 4615 mt 6256 4561 L
6256  389 mt 6256  443 L
6176 4784 mt 
(20) s
 898 4615 mt  952 4615 L
6256 4615 mt 6202 4615 L
 783 4668 mt 
(0) s
 898 4192 mt  952 4192 L
6256 4192 mt 6202 4192 L
 583 4245 mt 
(0.01) s
 898 3770 mt  952 3770 L
6256 3770 mt 6202 3770 L
 583 3823 mt 
(0.02) s
 898 3347 mt  952 3347 L
6256 3347 mt 6202 3347 L
 583 3400 mt 
(0.03) s
 898 2925 mt  952 2925 L
6256 2925 mt 6202 2925 L
 583 2978 mt 
(0.04) s
 898 2502 mt  952 2502 L
6256 2502 mt 6202 2502 L
 583 2555 mt 
(0.05) s
 898 2079 mt  952 2079 L
6256 2079 mt 6202 2079 L
 583 2132 mt 
(0.06) s
 898 1657 mt  952 1657 L
6256 1657 mt 6202 1657 L
 583 1710 mt 
(0.07) s
 898 1234 mt  952 1234 L
6256 1234 mt 6202 1234 L
 583 1287 mt 
(0.08) s
 898  812 mt  952  812 L
6256  812 mt 6202  812 L
 583  865 mt 
(0.09) s
 898  389 mt  952  389 L
6256  389 mt 6202  389 L
 663  442 mt 
(0.1) s
 898  389 mt 6256  389 L
 898 4615 mt 6256 4615 L
 898 4615 mt  898  389 L
6256 4615 mt 6256  389 L
 898  389 mt  898  389 L
6256  389 mt 6256  389 L
gs 898 389 5359 4227 MR c np
DA
204 1 205 1 205 6 204 19 205 23 205 81 204 121 205 231 
205 358 204 510 205 600 205 701 205 432 204 252 205 11 205 -351 
204 -566 205 -565 205 -639 204 -459 205 -344 205 -204 204 -113 205 -55 
205 -29 205 -17 204 -2 205 -3 205 0 590 4614 30 MP stroke
SO
233 0 232 86 232 300 233 815 232 257 233 1029 232 257 232 558 
233 429 232 -515 233 -729 232 -1072 233 -686 232 -343 232 -343 233 -86 
232 43 1585 4572 18 MP stroke

gr 

end

eplot
%%EndObject graph 1

epage
end

showpage

%%Trailer
%%BoundingBox:    66   210   550   590
%%Pages: 001
%%EOF

%%EndDocument
FMENDEPSF
255.94 493.97 268.89 493.97 2 L
2 Z
N
J
255.98 475.52 268.39 475.52 2 L
J
255.98 475.52 257.73 475.52 2 L
N
[2.497 3.211] 2.497 I
257.73 475.52 266.64 475.52 2 L
N
J
266.64 475.52 268.39 475.52 2 L
N
(jitter density \0501/nm\051) 0 -270 241.03 411.42 TF
(jitter \050nm\051) 293.98 387.94 T
(micromagnetic) 269.99 491.62 T
(b\051 Normalized jitter histograms) 249.7 506.51 T
(TZ-ZT) 270.79 472.38 T
0 0 0 0 1 1 1 K
J
245.78 501.89 252.53 501.89 252.53 399.64 245.78 399.64 4 Y
7 X
0 0 0 0 1 1 1 K
V
J
245.78 501.89 252.53 501.89 252.53 399.64 245.78 399.64 4 Y
J
245.78 500.14 245.78 501.89 247.53 501.89 3 L
1 Z
N
[2.528 3.25] 2.528 I
247.53 501.89 250.78 501.89 2 L
N
J
250.78 501.89 252.53 501.89 252.53 500.14 3 L
N
[3.439 4.422] 3.439 I
252.53 500.14 252.53 401.39 2 L
N
J
252.53 401.39 252.53 399.64 250.78 399.64 3 L
N
[2.528 3.25] 2.528 I
250.78 399.64 247.53 399.64 2 L
N
J
247.53 399.64 245.78 399.64 245.78 401.39 3 L
N
[3.439 4.422] 3.439 I
245.78 401.39 245.78 500.14 2 L
N
J
251.53 402.89 377.53 402.89 377.53 394.39 251.53 394.39 4 Y
V
J
251.53 402.89 377.53 402.89 377.53 394.39 251.53 394.39 4 Y
J
251.53 401.14 251.53 402.89 253.28 402.89 3 L
N
[3.444 4.428] 3.444 I
253.28 402.89 375.77 402.89 2 L
N
J
375.77 402.89 377.53 402.89 377.53 401.14 3 L
N
[3.889 5] 3.889 I
377.53 401.14 377.53 396.14 2 L
N
J
377.53 396.14 377.53 394.39 375.78 394.39 3 L
N
[3.444 4.428] 3.444 I
375.78 394.39 253.28 394.39 2 L
N
J
253.28 394.39 251.53 394.39 251.53 396.14 3 L
N
[3.889 5] 3.889 I
251.53 396.14 251.53 401.14 2 L
N
0 0 0 1 0 0 0 K
0 X
0 0 0 1 0 0 0 K
(-15) 261.03 397.14 T
(0) 311.78 397.14 T
(15) 354.53 397.14 T
(0) 247.28 402.64 T
(0.1) 241.78 495.89 T
J
0 73 214 539 580 125.82 98.81 404.48 400.61 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 73 214 539 580
%!PS-Adobe-2.0 
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: slopematlab.ps
%%CreationDate: 11/21/95  16:51:36
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Pages: (atend)
%%BoundingBox: (atend)
%%EndComments

%%BeginProlog

% MathWorks dictionary
/MathWorks 150 dict begin

% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef

% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
/rm /rmoveto ldef
/rl /rlineto ldef
/s /show ldef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef

% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef

% orientation switch
/portraitMode 	0 def
/landscapeMode 	1 def

% coordinate system mappings
/dpi2point 0 def

% font control
/FontSize 0 def
/FMS {
	/FontSize xstore		%save size off stack
	findfont
	[FontSize 0 0 FontSize neg 0 0]
	makefont
	setfont
	}bdef

/reencode {
exch dup where
{pop load} {pop StandardEncoding} ifelse
exch
dup 3 1 roll
findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def
  currentdict
end
definefont pop
} bdef

/isroman {
findfont /CharStrings get
/Agrave known
} bdef

/FMSR {
3 1 roll 1 index
dup isroman
{reencode} {pop pop} ifelse
exch FMS
} bdef

/csm {
	1 dpi2point div -1 dpi2point div scale
	neg translate
	landscapeMode eq {90 rotate} if
	} bdef

% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4 dpi2point mul] 0 setdash } bdef

% macros for lines and objects
/L {
	lineto
	stroke
	} bdef
/MP {
	3 1 roll moveto
	1 sub {rlineto} repeat
	} bdef
/AP {
	{rlineto} repeat
	} bdef
/PP {
	closepath fill
	} bdef
/DP {
	closepath stroke
	} bdef
/MR {
	4 -2 roll moveto
	dup  0 exch rlineto
	exch 0 rlineto
	neg  0 exch rlineto
	closepath
	} bdef
/FR {
	MR stroke
	} bdef
/PR {
	MR fill
	} bdef
/L1i {
	{ currentfile picstr readhexstring pop } image
	} bdef

/tMatrix matrix def
/MakeOval {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 0 360 arc
	tMatrix setmatrix
	} bdef
/FO {
	MakeOval
	stroke
	} bdef
/PO {
	MakeOval
	fill
	} bdef

/PD {
	2 copy moveto lineto stroke
	} bdef


currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    73   210   543   583
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: graph1 1
bplot

/dpi2point 12 def
portraitMode 0216 7344 csm

  661   341  5644  4476 MR c np
76 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

1 j
c1
   0    0 6914 5187 PR
6 w
DO
4 w
c0
 898 4615 mt  898  389 L
 898  389 mt  898  389 L
1568 4615 mt 1568  389 L
1568  389 mt 1568  389 L
2238 4615 mt 2238  389 L
2238  389 mt 2238  389 L
2907 4615 mt 2907  389 L
2907  389 mt 2907  389 L
3577 4615 mt 3577  389 L
3577  389 mt 3577  389 L
4247 4615 mt 4247  389 L
4247  389 mt 4247  389 L
4917 4615 mt 4917  389 L
4917  389 mt 4917  389 L
5586 4615 mt 5586  389 L
5586  389 mt 5586  389 L
 898 4615 mt 6256 4615 L
6256 4615 mt 6256 4615 L
 898 4231 mt 6256 4231 L
6256 4231 mt 6256 4231 L
 898 3847 mt 6256 3847 L
6256 3847 mt 6256 3847 L
 898 3462 mt 6256 3462 L
6256 3462 mt 6256 3462 L
 898 3078 mt 6256 3078 L
6256 3078 mt 6256 3078 L
 898 2694 mt 6256 2694 L
6256 2694 mt 6256 2694 L
 898 2310 mt 6256 2310 L
6256 2310 mt 6256 2310 L
 898 1926 mt 6256 1926 L
6256 1926 mt 6256 1926 L
 898 1542 mt 6256 1542 L
6256 1542 mt 6256 1542 L
 898 1157 mt 6256 1157 L
6256 1157 mt 6256 1157 L
 898  773 mt 6256  773 L
6256  773 mt 6256  773 L
 898 4615 mt  898  389 L
 898  389 mt 6256  389 L
 898 4615 mt  898  389 L
 898  389 mt 6256  389 L
 898 4615 mt  898  389 L
 898  389 mt 6256  389 L
SO
6 w
 898 4615 mt 6256 4615 L
 898  389 mt 6256  389 L
6256 4615 mt 6256  389 L
 898 4615 mt  898  389 L
6256 4615 mt 6256 4615 L
 898 4615 mt  898 4615 L
 898 4615 mt 6256 4615 L
 898 4615 mt  898  389 L
 898 4615 mt  898 4615 L
 898 4615 mt  898 4561 L
 898  389 mt  898  443 L
 798 4784 mt 
(0.9) s
1568 4615 mt 1568 4561 L
1568  389 mt 1568  443 L
1528 4784 mt 
(1) s
2238 4615 mt 2238 4561 L
2238  389 mt 2238  443 L
2138 4784 mt 
(1.1) s
2907 4615 mt 2907 4561 L
2907  389 mt 2907  443 L
2807 4784 mt 
(1.2) s
3577 4615 mt 3577 4561 L
3577  389 mt 3577  443 L
3477 4784 mt 
(1.3) s
4247 4615 mt 4247 4561 L
4247  389 mt 4247  443 L
4147 4784 mt 
(1.4) s
4917 4615 mt 4917 4561 L
4917  389 mt 4917  443 L
4817 4784 mt 
(1.5) s
5586 4615 mt 5586 4561 L
5586  389 mt 5586  443 L
5486 4784 mt 
(1.6) s
 898 4615 mt  952 4615 L
6256 4615 mt 6202 4615 L
 783 4668 mt 
(0) s
 898 4231 mt  952 4231 L
6256 4231 mt 6202 4231 L
 663 4284 mt 
(0.5) s
 898 3847 mt  952 3847 L
6256 3847 mt 6202 3847 L
 783 3900 mt 
(1) s
 898 3462 mt  952 3462 L
6256 3462 mt 6202 3462 L
 663 3515 mt 
(1.5) s
 898 3078 mt  952 3078 L
6256 3078 mt 6202 3078 L
 783 3131 mt 
(2) s
 898 2694 mt  952 2694 L
6256 2694 mt 6202 2694 L
 663 2747 mt 
(2.5) s
 898 2310 mt  952 2310 L
6256 2310 mt 6202 2310 L
 783 2363 mt 
(3) s
 898 1926 mt  952 1926 L
6256 1926 mt 6202 1926 L
 663 1979 mt 
(3.5) s
 898 1542 mt  952 1542 L
6256 1542 mt 6202 1542 L
 783 1595 mt 
(4) s
 898 1157 mt  952 1157 L
6256 1157 mt 6202 1157 L
 663 1210 mt 
(4.5) s
 898  773 mt  952  773 L
6256  773 mt 6202  773 L
 783  826 mt 
(5) s
 898  389 mt 6256  389 L
 898 4615 mt 6256 4615 L
 898 4615 mt  898  389 L
6256 4615 mt 6256  389 L
 898  389 mt  898  389 L
6256  389 mt 6256  389 L
gs 898 389 5359 4227 MR c np
DA
128 2 128 0 128 2 127 6 128 15 128 36 127 47 128 74 
128 87 128 183 127 271 128 304 128 356 127 474 128 376 128 607 
128 491 127 245 128 149 128 -36 127 -264 128 -401 128 -531 128 -612 
127 -415 128 -468 128 -359 127 -206 128 -223 128 -179 128 69 127 -54 
128 -16 128 -18 127 -6 128 -6 1441 4615 37 MP stroke
SO
312 145 310 233 311 494 312 669 310 1018 311 145 312 0 310 -378 
311 -610 311 -669 311 -582 311 -407 311 -29 311 -29 1219 4615 15 MP stroke

gr 

end

eplot
%%EndObject graph 1

epage
end

showpage

%%Trailer
%%BoundingBox:    73   210   543   583
%%Pages: 001
%%EOF

%%EndDocument
FMENDEPSF
(c\051  T) 408.46 506.24 T
(ransition slope histograms) 426.99 506.24 T
(transition slope \05010M) 417.76 388.49 T
0 8 Q
(r) 503.87 385.99 T
0 10 Q
(/) 506.53 388.49 T
1 F
(m) 509.31 388.49 T
0 F
(m\051) 515.07 388.49 T
(slope density \050) 0 -270 394.6 404.43 TF
1 F
(m) 0 -270 394.6 462.76 TF
0 F
(m/10M) 0 -270 394.6 468.52 TF
0 8 Q
(r) 0 -270 397.1 497.97 TF
0 10 Q
(\051) 0 -270 394.6 500.63 TF
(micromagentic) 427.18 492.71 T
(TZ-ZT) 426.89 474.28 T
J
412 477.73 424.69 477.73 2 L
J
412 477.73 413.75 477.73 2 L
N
[2.573 3.308] 2.573 I
413.75 477.73 422.94 477.73 2 L
N
J
422.94 477.73 424.69 477.73 2 L
N
J
411.75 494.33 424.44 494.33 2 L
N
0 0 0 0 1 1 1 K
402.94 399.14 408.19 513 R
7 X
0 0 0 0 1 1 1 K
V
N
405.03 397.89 531.78 402.89 R
V
N
0 0 0 1 0 0 0 K
530.28 499.39 530.28 404.64 2 L
0.2 H
0 X
0 0 0 1 0 0 0 K
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(0) 403.53 401.39 T
(5) 403.53 487.64 T
(1.0) 419.03 396.39 T
(1.3) 463.78 396.89 T
(1.6) 509.03 396.39 T
(4) 403.78 470.89 T
(3) 404.28 453.64 T
(2) 404.03 436.14 T
(1) 404.03 418.39 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1" 1
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Descend
%%Pages: 1
%%DocumentFonts: Times-Roman
%%+ Symbol
%%EOF
countdictstack InitDictCount sub { end } repeat
cleartomark
restore
grestore

%%EndDocument
 @endspecial 1014 1568 a Fk(Fig.)23 b(2.)31 b(Comparison)22
b(of)i(TZ-ZT)f(and)h(micromagnetic)f(statistics.)-180
1830 y Fo(Theorem)29 b(2)41 b Fd(Denote)25 b(by)f Fj(B)j
Fd(the)e(r)l(andom)f(variable)g(that)h(r)l(epr)l(esents)-180
1921 y(the)d(b)l(ases)h(of)e(the)h(zig-zag)g(triangles)g(use)l(d)h(in)d
(the)i(TZ-ZT)g(mo)l(del.)33 b(The)-180 2013 y(TZ-ZT)28
b(cr)l(oss-tr)l(ack)j(c)l(orr)l(elation)e(width)f(is)f(then)591
2202 y Fj(s)627 2210 y Fb(tzzt)743 2202 y Fq(=)834 2153
y(V)-6 b(ar)12 b(\()p Fj(B)t Fq(\))p 834 2185 254 4 v
876 2252 a(E)h([)p Fj(B)t Fq(])1098 2202 y Fj(;)673 b
Fq(\(2\))-180 2411 y Fd(wher)l(e)29 b Fq(E)13 b([)p Fj(B)t
Fq(])28 b Fd(is)f(the)h(me)l(an)g(and)g Fq(V)-6 b(ar)13
b(\()o Fj(B)t Fq(\))28 b Fd(is)f(the)h(varianc)l(e)h(of)e
Fj(B)t Fd(.)-180 2574 y Fq(Due)32 b(to)i(space)f(constrain)n(ts,)j(w)n
(e)d(relegate)i(the)d(pro)r(of)i(to)f([10].)58 b(W)-6
b(e)-180 2665 y(should)32 b(note)g(that)f(Equation)h(\(2\))g(in)g
(Theorem)g(2)g(holds)g(for)h(other)-180 2757 y(t)n(yp)r(es)19
b(of)i(mo)r(dels)f(to)r(o.)33 b(In)19 b(particular,)j(in)e([10],)i(w)n
(e)f(apply)e(Theorem)h(2)-180 2848 y(to)31 b(the)g(microtrac)n(k)g(mo)r
(del)g(of)h([11])h(to)f(sho)n(w)f(that)h(the)e(cross-trac)n(k)-180
2939 y(correlation)g(width,)f(as)g(computed)e(b)n(y)g(\(2\),)j(equals)e
(the)g(microtrac)n(k)-180 3031 y(width.)34 b(W)-6 b(e)24
b(in)n(terpret)h(Equation)f(\(2\).)35 b(Let)24 b Fj(B)29
b Fq(b)r(e)24 b(the)h(random)e(v)l(ari-)-180 3122 y(able)d(represen)n
(ting)g(the)g(cross-trac)n(k)g(size)h(of)f(a)g(cluster.)33
b(Let)20 b(the)g(mag-)-180 3213 y(netization)h(of)f(adjacen)n(t)h
(clusters)g(p)r(oin)n(t)e(in)h(opp)r(osite)h(do)n(wn-trac)n(k)e(di-)
-180 3305 y(rections,)25 b(b)r(oth)d(with)h(in)n(tensit)n(y)f
Fj(M)861 3313 y Fi(r)896 3305 y Fq(.)34 b(Then)22 b(Equation)h(\(2\))g
(giv)n(es)g(the)-180 3396 y(cross-trac)n(k)f(correlation)h(width.)33
b(Since)21 b(the)g(cross-trac)n(k)g(correlation)-180
3487 y(width)27 b(is)h(correlated)g(with)f(the)g(jitter)h(noise)g(lev)n
(el,)g(to)f(ha)n(v)n(e)g(lo)n(w)h(jit-)-180 3579 y(ter)f(noise)g(w)n(e)
g(either)f(reduce)h(the)f(cluster)h(size)g(v)l(ariance)g(V)-6
b(ar)13 b(\()o Fj(B)t Fq(\))27 b(or)-180 3670 y(increase)34
b(the)f(a)n(v)n(erage)g(cluster)g(size)h(E)13 b([)q Fj(B)t
Fq(].)56 b(The)33 b(latter,)j(ho)n(w)n(ev)n(er,)-180
3761 y(is)29 b(not)f(an)g(option)g(in)g(high)g(densit)n(y)f(recording)i
(b)r(ecause)g(it)f(requires)-180 3853 y(increasing)f(the)e(trac)n(k)h
(width.)-180 4017 y Fo(Corollary)31 b(2.1)42 b Fd(The)23
b(TZ-ZT)g(mo)l(dele)l(d)h(me)l(dium)e(and)i(the)f(thin)h(\014lm)-180
4109 y(me)l(dium)35 b(b)l(eing)h(mo)l(dele)l(d)g(have)g(the)g(same)g
(cr)l(oss-tr)l(ack)j(c)l(orr)l(elation)-180 4200 y(width)28
b Fj(s)f Fd(if)g(the)h(TZ-ZT)g(vertex)h(angle)f Fj(\022)i
Fd(is)436 4417 y Fj(\022)23 b Fq(=)e(2atan)777 4302 y
Ff(\024)874 4368 y Fj(s)c Fm(\001)g Fq(E)d([)p Fj(H)6
b Fq(])p 831 4400 356 4 v 831 4467 a(2)17 b Fm(\001)h
Fq(V)-6 b(ar)12 b(\()p Fj(H)6 b Fq(\))1196 4302 y Ff(\025)1253
4417 y Fj(;)518 b Fq(\(3\))-180 4634 y Fd(wher)l(e)29
b Fj(H)k Fd(r)l(epr)l(esents)d(the)f(r)l(andom)f(TZ-ZT)g(heights.)-180
4796 y Fq(Pro)r(of:)42 b(F)-6 b(rom)27 b(Figure)i(1,)h(the)e(bases)h
Fj(b)976 4804 y Fi(i)1031 4796 y Fq(are)g(related)g(to)g(the)f(heigh)n
(ts)-180 4888 y Fj(h)-136 4896 y Fi(i)-83 4888 y Fq(as)f
Fj(b)45 4896 y Fi(i)95 4888 y Fq(=)22 b Fj(h)221 4896
y Fi(i)265 4888 y Fm(\001)c Fq(2tan)464 4857 y Fi(\022)p
464 4871 32 4 v 464 4913 a Fl(2)505 4888 y Fq(.)37 b(If)27
b(w)n(e)g(substitute)f Fj(B)h Fq(=)22 b Fj(H)h Fm(\001)18
b Fq(2tan)1568 4857 y Fi(\022)p 1568 4871 V 1568 4913
a Fl(2)1635 4888 y Fq(in)n(to)27 b(\(2\))-180 4979 y(and)e(solv)n(e)h
(the)g(resulting)g(equation)g(for)g Fj(\022)r Fq(,)g(w)n(e)g(get)g
(\(3\).)-180 5192 y Fh(B.)43 b(Mo)l(deling)32 b(R)l(esults)-97
5334 y Fq(W)-6 b(e)30 b(mo)r(deled)h(a)g(magnetic)g(thin-\014lm)d(with)
j(the)g(follo)n(wing)i(c)n(har-)-180 5426 y(acteristics:)50
b(remanen)n(t)32 b(magnetization)h Fj(M)1150 5434 y Fi(r)1218
5426 y Fq(=)g(625em)n(u/cm)1702 5394 y Fl(3)1736 5426
y Fq(,)i(co-)-180 5517 y(ercivit)n(y)27 b Fj(H)161 5525
y Fi(c)217 5517 y Fq(=)e(1670Oe,)k(media)e(thic)n(kness)h
Fj(\016)f Fq(=)d(400)1417 5504 y(\027)1417 5517 y(A,)29
b(orien)n(tation)-180 5608 y(ratio)i(O.R.=)c(1)p Fj(:)p
Fq(3.)48 b(The)30 b(c)n(hosen)g(trac)n(k)f(width)h(w)n(as)h
Fj(T)11 b(W)37 b Fq(=)28 b(4)p Fj(:)p Fq(8)p Fj(\026)p
Fq(m.)-180 5700 y(W)-6 b(e)22 b(used)g(a)g(Karlqvist)h(writing)g(head)f
(with)h(gap)f(length)h Fj(g)g Fq(=)e(0)p Fj(:)p Fq(28)p
Fj(\026)p Fq(m)-180 5791 y(and)k(\015ying)h(heigh)n(t)f(\(magnetic)g
(spacing\))i Fj(d)21 b Fq(=)g(0)p Fj(:)p Fq(1)p Fj(\026)p
Fq(m.)-97 5884 y(Using)33 b(the)g(micromagnetic)g(mo)r(del,)i(w)n(e)e
(obtained)g(30)h(indep)r(en-)-180 5975 y(den)n(t)29 b(isolated)h
(magnetization)g(pro\014les)g(\(normalized)f(to)h Fj(M)1652
5983 y Fi(r)1687 5975 y Fq(\).)45 b(W)-6 b(e)2010 1840
y(found)19 b(their)h(a)n(v)n(erage)g(to)g(b)r(e)g Fj(M)2927
1848 y Fi(x)2966 1840 y Fq(\()p Fj(x)p Fq(\))g Fm(\031)h
Fq(erf)3278 1750 y Ff(\020)3379 1810 y Fi(x)p 3337 1824
118 4 v 3337 1832 a Fe(p)p 3387 1832 31 3 v 42 x Fl(2)p
Fi(\033)3465 1750 y Ff(\021)3527 1840 y Fj(;)f Fq(with)g
Fj(\033)k Fq(=)d(610)4000 1827 y(\027)4000 1840 y(A.)2010
1957 y(Applying)29 b(Theorem)h(1)g(to)g(an)g(erf)g(magnetization)g
(pro\014le,)i(w)n(e)e(\014nd)2010 2048 y(the)25 b(triangle)i(heigh)n
(ts)f(p)r(df)f Fj(f)2860 2056 y Fi(H)2918 2048 y Fq(\()p
Fj(h)p Fq(\))h(to)g(b)r(e)f(a)h(Ra)n(yleigh)g(p)r(df)2145
2271 y Fj(f)2182 2279 y Fi(H)2240 2271 y Fq(\()p Fj(h)p
Fq(\))c(=)f Fm(\000)2517 2222 y Fj(M)2599 2190 y Fe(00)2591
2235 y Fi(x)2639 2222 y Fq(\()p Fj(x)p Fq(\))p 2517 2254
227 4 v 2524 2321 a Fj(M)2606 2295 y Fe(0)2598 2330 y
Fi(x)2637 2321 y Fq(\(0\))2774 2271 y Fm(\031)2883 2222
y Fj(h)p 2865 2254 82 4 v 2865 2321 a(\033)2912 2300
y Fl(2)2956 2271 y Fq(exp)3086 2156 y Ff(\022)3147 2271
y Fm(\000)3237 2222 y Fj(h)3281 2190 y Fl(2)p 3217 2254
120 4 v 3217 2321 a Fq(2)p Fj(\033)3302 2300 y Fl(2)3346
2156 y Ff(\023)3484 2271 y Fq(for)65 b Fj(h)22 b Fm(\025)f
Fq(0)p Fj(:)136 b Fq(\(4\))2010 2489 y(The)34 b(shap)r(e)g(of)h(a)f(Ra)
n(yleigh)g(p)r(df)f(matc)n(hes)g(w)n(ell)i(the)f(exp)r(erimen)n(tal)
2010 2580 y(\014ndings)f([3].)59 b(T)-6 b(o)34 b(\014nd)f(the)g(v)n
(ertex)g(angle)h Fj(\022)i Fq(of)e(the)f(TZ-ZT)h(mo)r(d-)2010
2672 y(el,)24 b(w)n(e)e(\014rst)g(calculate)i(the)d(sample)h
(magnetization)h(v)l(ariance)k(^)-43 b Fj(\033)3912 2640
y Fl(2)3909 2687 y Fi(M)3977 2672 y Fq(\()p Fj(x)p Fq(\))2010
2763 y(from)30 b(the)g(same)f(30)i(isolated)g(micromagnetic)f
(pro\014les.)48 b(The)31 b(mag-)2010 2854 y(netization)f(v)l(ariance)f
Fj(\033)2723 2822 y Fl(2)2720 2870 y Fi(M)2816 2854 y
Fq(is)h(related)g(to)f(the)g(normalized)g(magneti-)2010
2946 y(zation)g Fj(M)37 b Fq(through)28 b(the)g(equalit)n(y)h
Fj(\033)3125 2914 y Fl(2)3122 2961 y Fi(M)3215 2946 y
Fq(=)3351 2915 y Fi(s)p 3311 2929 110 4 v 3311 2971 a(T)8
b(W)3443 2880 y Ff(\000)3482 2946 y Fq(1)17 b Fm(\000)g
Fj(M)3696 2914 y Fl(2)3731 2880 y Ff(\001)3769 2946 y
Fq(,)29 b(where)g Fj(s)2010 3037 y Fq(is)g(the)f(cross-trac)n(k)h
(correlation)h(width)f([12].)44 b(By)28 b(least-squares)i(\014t-)2010
3128 y(ting)21 b(a)h(parab)r(ola)g(to)f(the)g(curv)n(e)f(of)26
b(^)-42 b Fj(\033)3083 3096 y Fl(2)3080 3144 y Fi(M)3148
3128 y Fq(\()p Fj(x)p Fq(\))20 b(v)n(ersus)h Fj(M)3573
3136 y Fi(x)3612 3128 y Fq(\()p Fj(x)p Fq(\),)g(w)n(e)h(obtain)2010
3220 y Fj(s)h Fq(=)f(197)2265 3207 y(\027)2265 3220 y(A.)28
b(Corollary)g(2.1)g(yields)f(then)e Fj(\022)g Fq(=)e(50)p
Fj(:)p Fq(7)3508 3188 y Fe(\016)3545 3220 y Fq(,)k(where)g(w)n(e)g
(used)2010 3311 y(E)13 b([)p Fj(H)6 b Fq(])31 b(=)f Fj(\033)2355
3257 y Fm(p)p 2418 3257 47 4 v 2418 3311 a Fj(\031)s(=)2503
3249 y Fm(p)p 2567 3249 39 4 v 62 x Fq(2)i(and)f(V)-6
b(ar)o(\()p Fj(H)6 b Fq(\))30 b(=)g(\(2)21 b Fm(\000)g
Fj(\031)s(=)p Fq(2\))p Fj(\033)3531 3279 y Fl(2)3596
3311 y Fq(for)32 b(a)g(Ra)n(yleigh)2010 3402 y(distributed)25
b(random)g(v)l(ariable)h Fj(H)31 b Fq(as)26 b(in)g(\(4\).)2093
3496 y(Figure)18 b(2)g(compares)g(the)g(statistical)h(prop)r(erties)g
(for)f(isolated)h(puls-)2010 3587 y(es)h(of)g(the)g(TZ-ZT)g(mo)r(del)f
(with)h(those)g(of)g(the)g(micromagnetic)f(mo)r(del.)2010
3678 y(The)35 b(plots)h(are)g(based)f(on)g(500)h(indep)r(enden)n(t)e
(runs)h(of)h(the)f(micro-)2010 3770 y(magnetic)d(mo)r(del)g(and)h(50)p
Fj(;)13 b Fq(000)34 b(runs)e(of)h(the)f(TZ-ZT)h(mo)r(del.)55
b(The)2010 3861 y(transition)24 b(shap)r(e)f(and)g(jitter)h(histograms)
g(matc)n(h)e(almost)i(p)r(erfectly)-6 b(,)2010 3952 y(see)29
b(Figures)h(2-a)f(and)g(2-b.)43 b(The)30 b(transition)f(slop)r(e)h(v)l
(ariance)f(sho)n(ws)2010 4044 y(a)e(30\045)g(mismatc)n(h,)e(see)h
(Figure)h(2-c.)37 b(This)27 b(is)f(a)h(second)f(order)h(e\013ect)2010
4135 y(with)34 b(little)h(impact)e(on)h(the)g(total)g(noise)h(p)r(o)n
(w)n(er)g(since)f(the)g(ampli-)2010 4226 y(tude)28 b(\(slop)r(e\))h(v)l
(ariations)h(are)f(w)n(eak)n(er)g(than)f(the)g(jitter)h(for)h(isolated)
2010 4318 y(pulses)c([13].)2441 4493 y Fn(IV.)45 b(Intera)n(cting)32
b(Transitions)2010 4624 y Fh(A.)43 b(Nonline)l(ar)30
b(Bit)g(Shift)g(and)h(A)n(mplitude)f(L)l(oss)g(Mo)l(deling)2093
4767 y Fq(W)-6 b(e)20 b(mo)r(del)g(nonlinear)h(bit)f(shift)h(and)f
(partial)h(signal)h(erasure)f(\(p)r(er-)2010 4859 y(colation\))28
b(b)n(y)e(mo)r(difying)g(the)h(existing)g(TZ-ZT)g(mo)r(del)f(for)i
(isolated)2010 4950 y(transitions.)35 b(Our)25 b(mo)r(del)f(for)i(in)n
(teracting)g(transitions)g(relies)g(on)f(re-)2010 5041
y(sults)h(deriv)n(ed)f(b)n(y)f(Bertram)i([9].)35 b(Equation)26
b(\(9.7\))g(in)f([9])i(sho)n(ws)f(that)2010 5133 y(the)f(bit)h(shift)g
(is)2650 5262 y(\001)p Fj(x)21 b Fq(=)2870 5213 y(4)p
Fj(M)2982 5221 y Fi(r)3017 5213 y Fj(\016)16 b Fq(\()p
Fj(d)h Fq(+)f Fj(\016)s(=)p Fq(2\))3374 5177 y Fl(3)p
2870 5245 539 4 v 2990 5313 a Fj(\031)s(QH)3162 5321
y Fi(c)3192 5313 y Fj(B)3254 5291 y Fl(3)3419 5262 y
Fj(;)542 b Fq(\(5\))2010 5425 y(where)33 b Fj(B)k Fq(is)c(the)g
(nominal)g(separation)h(b)r(et)n(w)n(een)e(the)h(curren)n(t)f(and)2010
5516 y(the)22 b(previous)g(transition)h(and)f Fj(Q)g
Fq(is)h(the)f(head-\014eld)g(gradien)n(t)g(factor.)2010
5608 y(W)-6 b(e)24 b(apply)f(this)h(form)n(ula)h(b)n(y)e(writing)i(the)
e(curren)n(t)h(transition)h(closer)2010 5699 y(to)h(the)f(previous)h
(one)g(b)n(y)e(\001)p Fj(x)p Fq(.)2093 5793 y(The)18
b(standard)h(deviation)f(\(square)g(ro)r(ot)h(of)g(v)l(ariance\))g(of)g
(the)e(tran-)2010 5884 y(sition)27 b(lo)r(cation)h(c)n(hanges)f(with)g
(the)e(distance)i(b)r(et)n(w)n(een)g(transitions.)2010
5975 y(A)17 b(simple)h(mo)r(del)f(for)i(this)f(c)n(hange)g(is)g
(Equation)g(\(12.33\))h(in)f([9],)j(where)p eop
%%Page: 3 3
3 2 bop -152 129 a Ft(Ka)n(v)n(\024)-39 b(ci)n(\023)g(c,)24
b(Moura,)i(IEEE)h(T)-7 b(ransactions)25 b(on)j(Magnetics,)e(v)n(ol.)h
(32,)g(pp.)h(3875-3877,)c(Septem)n(b)r(er)j(1996.)886
b Fs(iii)64 1453 y @beginspecial 19 @llx 622 @lly 230
@urx 748 @ury 1898 @rwi @setspecial
%%BeginDocument: Fig3.epsi
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 19 622 230 748
%%BeginPreview: 212 127 1 127
% 00000000000cc42000888000133080062220101c44100000000000
% 000000000004002000008000020000040000100800000000000000
% 000000000005bddce54bdcfe756dbbc0000cedc8f3b570f3bd7380
% 000800000004a5ec464adc529628ca44000938c8949670949c7100
% 000f00018004a534434ad0529328ca4400093948949340949e4100
% 06090000800db5fec57bdcde676db344000cddf8d33570f3127300
% 040000008000000000020010000000000000020000000080000000
% 000000008feeeffffddfdfffbbbbfff77777ffeeee8000c0000000
% 000d000080000070000080000200000400001c0000000000000000
% 000d00018000003400008000064002040000380000000000000000
% 000f00000000002fc0008000020002040000300000000000000000
% 340000000000002070008efcf2da4ee40000500000000000000000
% 34080000000000201f888694925252e40000900000000000000000
% 3c0300000000002000e88a94925252840003100000000000000000
% 000e000000000020001c8fd4f6dbdee40006100000000000000000
% fc0e0000000000200003c000820000040008100000000000000000
% 240f00000feeeefffdddfffffbbbfff77777ffeeee800000000000
% 240800000000002000009e00020000040060100000000000000000
% 3c0000000000002000008380020000040040100000000000000000
% 000e00000000002000008078020002040080100000190010000000
% 3c0900000000002000008018020002040100100000080010000000
% 040900000000000000000006800002000100003bf3cbd277000000
% 040e00000000002000008001c20002040100101a52499297000000
% 3c0000000000002000008000520001040200102a52499294000000
% 000e000000000020000080003a0001040600103f53dbdef7000000
% 2409000000000000000000000d0001000400000002000000000000
% 7c0940000feeeefffddddfffbbbbfff77f77ffeeef800000000000
% bc0fc000000000200000800002dc01c40800100000000000000000
% 2400000000000020000080000230c1c40800170000004000000000
% 000000000000000250400000000c00c01000070000004000000000
% fc000000000000221000800002020444200016003f39dc00000000
% 840000000000002eded88000020d80c420001800254a5c00000000
% 000d00000000003252508000020f404440003800254a5000000000
% 380d00000000001252500000ffff201c800000003533dc00000000
% 240f00000000003eded887ff820c18040000500000000000000000
% 25000000000000200000800002000404c000900000000000000000
% 3f0b00000feeeefffddddfffbbbbfff77777ffeeee800000000000
% 000600000000002000008000020001060002100000000000000000
% 000d000000000020000c8008020000c60000100000000000000000
% 3c0000000000002000048008020000240380100000000000000000
% 202f00000000003df9e5e93b8200001e0010100000000000000000
% 3c0900000000002d2924c94b8200001c0044100000000000000000
% 20000000000000352924c94a0200001600e2100000000000000000
% 240e00000000003fa9edef7b8200002500e0100000000000000000
% 3c0900000000002001008000020000648000100000000000000000
% 040900000000002001808000020000c44080100000000000000000
% 3c0e00000feeeefffddddfffbbbbfff77777ffeeee800000000000
% 340000000000002000008000020003041000100000000000000000
% 2c0f00000000000000000000000002000a00000000000000000000
% 000800000000002000008000020004040600100000000000000000
% 000900000000002000008000020008040300100000000000000000
% 000f00000000002000008000020010040880100000000000000000
% 000000000000000000000000000030000840000000000000000000
% fc0000030000002000008000020020040820100000000000000000
% 240000060000002000008000020040040020100000000000000000
% 243f00030000002000008000020080042010100000000000000000
% 3c0900010feeeefffddddfffbbbbfff7777fffeeee800000000000
% 000900010000002000008000020700040004100000000000000000
% 340f001f0000002000008000020c00044004100000000000000000
% 340000000000002000008000021000040002100000000000000000
% 3c0000000000000000000000002000000001000000000000000000
% 000d00000000002000008000024000050001100000000000000000
% 040d00000000002000008000038000060000900000000000000000
% 300f00000000002000008000060000040000500000000000000000
% 1c01000000000020000080001a0000040000300000000000000000
% 240c000000000020000080001a00000e0000300000000000000000
% 000700000feeeefffddddffffbbbfff77777ffeeee800000000000
% bc0900000000002000008000820000140000180000000000000000
% 240000000000002000008001020000240000180000000000000000
% fc2f00000000002000008006020000040000140000000000000000
% 840900000000002000008018020000440000140000000000000000
% 000000000000002000008078020000040000120000000000000000
% 043f00000000002000008780020000040000120000000000000000
% 3c2100000000002000009c00020002040000100000000000000000
% 34010000000000200000c000020000040000100000000000000000
% 2c0f00000000000000018000000000000000000000000000000000
% 000d00000feeeefffddfdfffbbbbfff77777ffeeee800000000000
% 000b0000000000200004800002000004000010020b008000040000
% 3c0000000000002000188000020020040000100202000000000000
% 200000000000000000600000000020000000002bde61bc25ed4ef0
% 3c0f00000000002000c0800002000004000010324a4ca5a5259290
% 200800000000002001808000020080040000101a4a40a42524d290
% 240f00000000002007008000020100040000102b5e61b43dad4cd0
% 3c080000000000000c000000000700040040000000000000000000
% 20090000000000201800801017fffffffffc100000000000000000
% 3c0f0000000000203000803ffa0200040043fa0009000000008000
% 240800000feeeefffddddfffbbbbfff77777ffeeee800000008000
% 000f0000000000f980009e0000000000000002001b6f9c7e73b800
% 38090000000005a00001e0000300000400001000094b884a94b800
% 2400000000000020000780003a00000400001000094a084a94a000
% 240e000000000020005880003a000004000010000b6f986a67b800
% 380900000000002000e08000520000040000100008000000000000
% 000900000000002003c08002820000040000100038000000000000
% 000e0000000000201c00c01c020000040000100000000000000000
% 1c00000000000229f803fb78020000040000100000000000000000
% 300f00000feeeffffddddfffbbbbfff77777ffeeee800000000000
% 600800000000022110e08000020000040000100000000000000000
% c4090000000000293e408000020000040000100000000404000000
% 040f00000000077ff8008000020000040000100000000000000000
% 00000000000007fd800080000200000400001000eefcedede70000
% 00000000000002200000800002070004000010004e946525280000
% 000000000000002000008000beddf6fe00a010004894a525260000
% 0000000300000000000041db0000000db7fdb800ced4fdadae0000
% 000000048000002400d3fc000200000400001e0000000000090000
% 000000048000057ff6e0c0000200000400001000000000000e0000
% 000000048fffffffffffffffffffffffffffffffffc00000000000
% 000000048000000000000000000000000000000000000008000000
% 000000030000000000000000000000000000000000000000000000
% 0000000000000060000000000e00000000003000000079dd700000
% 000000000000002000000000020000000000600000004a4e700000
% 000000000000002000000000060000000000300000004a4b400000
% 00000000000000200000000003000000000010000000699d700000
% 000000000000002000000000010000000000100000000000000000
% 0000000000000060000000000e0000000000700000000000000000
% 000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000
% 000000000000200000004101000000304c20000000000000000000
% 000000000000200000004000000000104452004000000000000000
% 00000000000027b5dd787b637b776b908452fc4000000000000000
% 0000000000002495c9b849414a7229908452944000000000000000
% 000000000000249908e049414a423290849a944000000000000000
% 0000000000002689d9787b636b7613f04c9fd44000000000000000
% 000000000000000000000000000000004090004000000000000000
% 000000000000000000000000000000000010000000000000000000
%%EndImage
%%EndPreview
/InitDictCount countdictstack def
gsave
save
mark
newpath
/showpage {} def
%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 { } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	
	
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 612 792 0 1 2 FMDOCUMENT
0 0 /Times-Roman FMFONTDEFINE
1 1 /Symbol FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "1" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 0 0 0 1 1 1]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 73 195 539 580 139.79 115.49 48.98 632.41 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 73 195 539 580
%!PS-Adobe-2.0 
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: noisemodes.ps
%%CreationDate: 11/22/95  17:29:40
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Pages: (atend)
%%BoundingBox: (atend)
%%EndComments

%%BeginProlog

% MathWorks dictionary
/MathWorks 150 dict begin

% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef

% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
/rm /rmoveto ldef
/rl /rlineto ldef
/s /show ldef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef

% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef

% orientation switch
/portraitMode 	0 def
/landscapeMode 	1 def

% coordinate system mappings
/dpi2point 0 def

% font control
/FontSize 0 def
/FMS {
	/FontSize xstore		%save size off stack
	findfont
	[FontSize 0 0 FontSize neg 0 0]
	makefont
	setfont
	}bdef

/reencode {
exch dup where
{pop load} {pop StandardEncoding} ifelse
exch
dup 3 1 roll
findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def
  currentdict
end
definefont pop
} bdef

/isroman {
findfont /CharStrings get
/Agrave known
} bdef

/FMSR {
3 1 roll 1 index
dup isroman
{reencode} {pop pop} ifelse
exch FMS
} bdef

/csm {
	1 dpi2point div -1 dpi2point div scale
	neg translate
	landscapeMode eq {90 rotate} if
	} bdef

% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4 dpi2point mul] 0 setdash } bdef

% macros for lines and objects
/L {
	lineto
	stroke
	} bdef
/MP {
	3 1 roll moveto
	1 sub {rlineto} repeat
	} bdef
/AP {
	{rlineto} repeat
	} bdef
/PP {
	closepath fill
	} bdef
/DP {
	closepath stroke
	} bdef
/MR {
	4 -2 roll moveto
	dup  0 exch rlineto
	exch 0 rlineto
	neg  0 exch rlineto
	closepath
	} bdef
/FR {
	MR stroke
	} bdef
/PR {
	MR fill
	} bdef
/L1i {
	{ currentfile picstr readhexstring pop } image
	} bdef

/tMatrix matrix def
/MakeOval {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 0 360 arc
	tMatrix setmatrix
	} bdef
/FO {
	MakeOval
	stroke
	} bdef
/PO {
	MakeOval
	fill
	} bdef

/PD {
	2 copy moveto lineto stroke
	} bdef


currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    73   191   543   583
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: graph1 1
bplot

/dpi2point 12 def
portraitMode 0216 7344 csm

  661   341  5644  4708 MR c np
76 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

1 j
c1
   0    0 6914 5187 PR
6 w
DO
4 w
c0
 898 4615 mt  898  389 L
 898  389 mt  898  389 L
1792 4615 mt 1792  389 L
1792  389 mt 1792  389 L
2687 4615 mt 2687  389 L
2687  389 mt 2687  389 L
3581 4615 mt 3581  389 L
3581  389 mt 3581  389 L
4476 4615 mt 4476  389 L
4476  389 mt 4476  389 L
5370 4615 mt 5370  389 L
5370  389 mt 5370  389 L
 898 4615 mt 6256 4615 L
6256 4615 mt 6256 4615 L
 898 4220 mt 6256 4220 L
6256 4220 mt 6256 4220 L
 898 3825 mt 6256 3825 L
6256 3825 mt 6256 3825 L
 898 3430 mt 6256 3430 L
6256 3430 mt 6256 3430 L
 898 3035 mt 6256 3035 L
6256 3035 mt 6256 3035 L
 898 2640 mt 6256 2640 L
6256 2640 mt 6256 2640 L
 898 2245 mt 6256 2245 L
6256 2245 mt 6256 2245 L
 898 1850 mt 6256 1850 L
6256 1850 mt 6256 1850 L
 898 1455 mt 6256 1455 L
6256 1455 mt 6256 1455 L
 898 1060 mt 6256 1060 L
6256 1060 mt 6256 1060 L
 898  665 mt 6256  665 L
6256  665 mt 6256  665 L
 898 4615 mt  898  389 L
 898  389 mt 6256  389 L
 898 4615 mt  898  389 L
 898  389 mt 6256  389 L
 898 4615 mt  898  389 L
 898  389 mt 6256  389 L
SO
6 w
 898 4615 mt 6256 4615 L
 898 4615 mt  898  389 L
 898 4615 mt  898 4615 L
 898 4615 mt  898 4561 L
 858 4784 mt 
(0) s
1792 4615 mt 1792 4561 L
1752 4784 mt 
(1) s
2687 4615 mt 2687 4561 L
2647 4784 mt 
(2) s
3581 4615 mt 3581 4561 L
3541 4784 mt 
(3) s
4476 4615 mt 4476 4561 L
4436 4784 mt 
(4) s
5370 4615 mt 5370 4561 L
5330 4784 mt 
(5) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

5875 5016 mt 
(x 10) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

6147 4927 mt 
(-3) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 898 4615 mt  952 4615 L
 783 4668 mt 
(0) s
 898 4220 mt  952 4220 L
 663 4273 mt 
(0.1) s
 898 3825 mt  952 3825 L
 663 3878 mt 
(0.2) s
 898 3430 mt  952 3430 L
 663 3483 mt 
(0.3) s
 898 3035 mt  952 3035 L
 663 3088 mt 
(0.4) s
 898 2640 mt  952 2640 L
 663 2693 mt 
(0.5) s
 898 2245 mt  952 2245 L
 663 2298 mt 
(0.6) s
 898 1850 mt  952 1850 L
 663 1903 mt 
(0.7) s
 898 1455 mt  952 1455 L
 663 1508 mt 
(0.8) s
 898 1060 mt  952 1060 L
 663 1113 mt 
(0.9) s
 898  665 mt  952  665 L
 783  718 mt 
(1) s
gs 898 389 5359 4227 MR c np
DO
-149 39 -100 33 -124 -11 -160 93 -213 171 -298 223 -447 160 -320 219 
-426 321 -596 681 -488 898 -406 340 -115 89 5485 665 14 MP stroke
SO

gr 
  36   36 5485  665 FO
  36   36 5370  754 FO
  36   36 4964 1094 FO
  36   36 4476 1992 FO
  36   36 3880 2673 FO
  36   36 3454 2994 FO
  36   36 3134 3213 FO
  36   36 2687 3373 FO
  36   36 2389 3596 FO
  36   36 2176 3767 FO
  36   36 2016 3860 FO
  36   36 1892 3849 FO
  36   36 1792 3882 FO
  36   36 1643 3921 FO
gs 898 389 5359 4227 MR c np
DA
-149 7 -100 14 -124 -5 -160 41 -213 65 -298 78 -447 -1 -320 156 
-426 256 -596 739 -488 906 -406 434 -115 115 5485 1546 14 MP stroke
SO

gr 
5449 1546 mt 5521 1546 L
5485 1510 mt 5485 1582 L
5449 1510 mt 5521 1582 L
5521 1510 mt 5449 1582 L
5334 1661 mt 5406 1661 L
5370 1625 mt 5370 1697 L
5334 1625 mt 5406 1697 L
5406 1625 mt 5334 1697 L
4928 2095 mt 5000 2095 L
4964 2059 mt 4964 2131 L
4928 2059 mt 5000 2131 L
5000 2059 mt 4928 2131 L
4440 3001 mt 4512 3001 L
4476 2965 mt 4476 3037 L
4440 2965 mt 4512 3037 L
4512 2965 mt 4440 3037 L
3844 3740 mt 3916 3740 L
3880 3704 mt 3880 3776 L
3844 3704 mt 3916 3776 L
3916 3704 mt 3844 3776 L
3418 3996 mt 3490 3996 L
3454 3960 mt 3454 4032 L
3418 3960 mt 3490 4032 L
3490 3960 mt 3418 4032 L
3098 4152 mt 3170 4152 L
3134 4116 mt 3134 4188 L
3098 4116 mt 3170 4188 L
3170 4116 mt 3098 4188 L
2651 4151 mt 2723 4151 L
2687 4115 mt 2687 4187 L
2651 4115 mt 2723 4187 L
2723 4115 mt 2651 4187 L
2353 4229 mt 2425 4229 L
2389 4193 mt 2389 4265 L
2353 4193 mt 2425 4265 L
2425 4193 mt 2353 4265 L
2140 4294 mt 2212 4294 L
2176 4258 mt 2176 4330 L
2140 4258 mt 2212 4330 L
2212 4258 mt 2140 4330 L
1980 4335 mt 2052 4335 L
2016 4299 mt 2016 4371 L
1980 4299 mt 2052 4371 L
2052 4299 mt 1980 4371 L
1856 4330 mt 1928 4330 L
1892 4294 mt 1892 4366 L
1856 4294 mt 1928 4366 L
1928 4294 mt 1856 4366 L
1756 4344 mt 1828 4344 L
1792 4308 mt 1792 4380 L
1756 4308 mt 1828 4380 L
1828 4308 mt 1756 4380 L
1607 4351 mt 1679 4351 L
1643 4315 mt 1643 4387 L
1607 4315 mt 1679 4387 L
1679 4315 mt 1607 4387 L
gs 898 389 5359 4227 MR c np
-149 20 -100 10 -124 -2 -160 40 -213 91 -298 134 -447 107 -320 29 
-426 37 -596 -15 -488 5 -406 -60 -115 -10 5485 3827 14 MP stroke

gr 
5449 3827 mt 5521 3827 L
5485 3791 mt 5485 3863 L
5334 3817 mt 5406 3817 L
5370 3781 mt 5370 3853 L
4928 3757 mt 5000 3757 L
4964 3721 mt 4964 3793 L
4440 3762 mt 4512 3762 L
4476 3726 mt 4476 3798 L
3844 3747 mt 3916 3747 L
3880 3711 mt 3880 3783 L
3418 3784 mt 3490 3784 L
3454 3748 mt 3454 3820 L
3098 3813 mt 3170 3813 L
3134 3777 mt 3134 3849 L
2651 3920 mt 2723 3920 L
2687 3884 mt 2687 3956 L
2353 4054 mt 2425 4054 L
2389 4018 mt 2389 4090 L
2140 4145 mt 2212 4145 L
2176 4109 mt 2176 4181 L
1980 4185 mt 2052 4185 L
2016 4149 mt 2016 4221 L
1856 4183 mt 1928 4183 L
1892 4147 mt 1892 4219 L
1756 4193 mt 1828 4193 L
1792 4157 mt 1792 4229 L
1607 4213 mt 1679 4213 L
1643 4177 mt 1643 4249 L
gs 898 389 5359 4227 MR c np
DD
-149 10 -100 9 -124 -3 -160 12 -213 15 -298 11 -447 54 -320 35 
-426 27 -596 -43 -488 -13 -406 -33 -115 -18 5485 4523 14 MP stroke
SO

gr 
5449 4487 mt 5521 4559 L
5521 4487 mt 5449 4559 L
5334 4469 mt 5406 4541 L
5406 4469 mt 5334 4541 L
4928 4436 mt 5000 4508 L
5000 4436 mt 4928 4508 L
4440 4423 mt 4512 4495 L
4512 4423 mt 4440 4495 L
3844 4380 mt 3916 4452 L
3916 4380 mt 3844 4452 L
3418 4407 mt 3490 4479 L
3490 4407 mt 3418 4479 L
3098 4442 mt 3170 4514 L
3170 4442 mt 3098 4514 L
2651 4496 mt 2723 4568 L
2723 4496 mt 2651 4568 L
2353 4507 mt 2425 4579 L
2425 4507 mt 2353 4579 L
2140 4522 mt 2212 4594 L
2212 4522 mt 2140 4594 L
1980 4534 mt 2052 4606 L
2052 4534 mt 1980 4606 L
1856 4531 mt 1928 4603 L
1928 4531 mt 1856 4603 L
1756 4540 mt 1828 4612 L
1828 4540 mt 1756 4612 L
1607 4550 mt 1679 4622 L
1679 4550 mt 1607 4622 L
gs 898 389 5359 4227 MR c np
-149 -54 -100 -79 -124 -4 -160 -65 -213 -40 -298 -117 -447 -161 -320 -187 
-426 -225 -596 -451 -488 -444 -406 -555 -115 -240 5485 3287 14 MP stroke

gr 

end

eplot
%%EndObject graph 1

epage
end

showpage

%%Trailer
%%BoundingBox:    73   191   543   583
%%Pages: 001
%%EOF

%%EndDocument
FMENDEPSF
0 10 Q
0 X
0 0 0 1 0 0 0 K
(Inverse bit interval \0501/) 68.48 623.1 T
1 F
(m) 157.63 623.1 T
0 F
(m\051) 163.39 623.1 T
(linear superposition) 63.15 741.98 T
(Normalized amplitude ,) 0 -270 24.73 648.95 TF
(normalized noise power) 0 -270 34.73 648.95 TF
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(dibit) 78.05 712.94 T
(total noise power) 159.11 742.35 T
(amplitude) 172.7 722.72 T
(     mode) 168.11 713.8 T
(jitter mode) 182.28 656.89 T
(shift-in-unison) 172.78 664.8 T
(remaining) 179.36 645.14 T
(noise) 195.61 636.3 T
0 0 0 0 1 1 1 K
50.61 630.8 191.11 641.55 R
7 X
0 0 0 0 1 1 1 K
V
0.5 H
2 Z
N
41.61 630.55 53.61 749.3 R
V
N
0 0 0 1 0 0 0 K
0 X
0 0 0 1 0 0 0 K
(0) 48.11 639.8 T
(1) 49.11 738.3 T
(.5) 45.86 689.05 T
(1) 74.61 633.55 T
(3) 119.36 633.55 T
(5) 164.11 633.55 T
(amplitude) 77.59 703.83 T
(amplitude) 103.05 733.43 T
J
73.75 741 77.5 740 80.5 738.5 83 737.75 86.75 736.5 90 735.75 95.25 734.5
 101 732.25 105.75 730.5 110 729 115.75 726.25 118.75 724.5 121.5 723.5 127.5 721 136.5 717.25
 144 714.75 155 708.75 166.5 703.5 18 L
J
73.75 741 74.47 740.81 2 L
N
[0.794 2.381] 0.794 I
74.47 740.81 76.78 740.19 2 L
N
J
76.78 740.19 77.5 740 78.17 739.66 3 L
N
[0.618 1.854] 0.618 I
78.17 739.66 79.83 738.84 2 L
N
J
79.83 738.84 80.5 738.5 81.22 738.28 3 L
N
[0.37 1.11] 0.37 I
81.22 738.28 82.28 737.97 2 L
N
J
82.28 737.97 83 737.75 83.71 737.51 3 L
N
[0.818 2.453] 0.818 I
83.71 737.51 86.04 736.74 2 L
N
J
86.04 736.74 86.75 736.5 87.48 736.33 3 L
N
[0.612 1.835] 0.612 I
87.48 736.33 89.27 735.92 2 L
N
J
89.27 735.92 90 735.75 90.73 735.58 3 L
N
[1.299 3.897] 1.299 I
90.73 735.58 94.52 734.67 2 L
N
J
94.52 734.67 95.25 734.5 95.95 734.23 3 L
N
[1.558 4.675] 1.558 I
95.95 734.23 100.3 732.52 2 L
N
J
100.3 732.52 101 732.25 101.7 731.99 3 L
N
[1.187 3.562] 1.187 I
101.7 731.99 105.05 730.76 2 L
N
J
105.05 730.76 105.75 730.5 106.46 730.25 3 L
N
[1.002 3.007] 1.002 I
106.46 730.25 109.29 729.25 2 L
N
J
109.29 729.25 110 729 110.68 728.68 3 L
N
[1.625 4.874] 1.625 I
110.68 728.68 115.07 726.57 2 L
N
J
115.07 726.57 115.75 726.25 116.4 725.87 3 L
N
[0.658 1.973] 0.658 I
116.4 725.87 118.1 724.88 2 L
N
J
118.1 724.88 118.75 724.5 119.46 724.24 3 L
N
[0.475 1.426] 0.475 I
119.46 724.24 120.79 723.76 2 L
N
J
120.79 723.76 121.5 723.5 122.19 723.21 3 L
N
[1.667 5] 1.667 I
122.19 723.21 126.81 721.29 2 L
N
J
126.81 721.29 127.5 721 128.19 720.71 3 L
N
[1.179 3.536] 1.179 I
128.19 720.71 135.81 717.54 2 L
N
J
135.81 717.54 136.5 717.25 137.21 717.01 3 L
N
[0.915 2.745] 0.915 I
137.21 717.01 143.29 714.99 2 L
N
J
143.29 714.99 144 714.75 144.66 714.39 3 L
N
[1.576 4.727] 1.576 I
144.66 714.39 154.34 709.11 2 L
N
J
154.34 709.11 155 708.75 155.68 708.44 3 L
N
[1.592 4.775] 1.592 I
155.68 708.44 165.82 703.81 2 L
N
J
165.82 703.81 166.5 703.5 2 L
N
J
141.01 721.24 140.75 716.25 137.74 720.25 139.38 720.75 4 Y
V
136.8 729.2 139.38 720.74 2 L
N
126.7 716.66 131.5 715.25 126.92 713.24 126.81 714.95 4 Y
V
104.07 713.48 126.81 714.95 2 L
N
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1" 1
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Descend
%%Pages: 1
%%DocumentFonts: Times-Roman
%%+ Symbol
%%EOF
countdictstack InitDictCount sub { end } repeat
cleartomark
restore
grestore

%%EndDocument
 @endspecial -180 1568 a Fk(Fig.)33 b(3.)63 b(Normalized)33
b(dibit)h(amplitude)g(and)g(normalized)f(media)h(noise)-180
1647 y(mo)r(de)23 b(p)r(o)n(w)n(ers)h(as)g(a)f(function)i(of)e(in)n(v)n
(erse)h(transition)g(spacing.)-180 1819 y Fq(it)30 b(is)g(sho)n(wn)g
(that)g(the)f(standard)h(deviation)g(of)g(in)n(teracting)h(transi-)-180
1911 y(tions)26 b(is)g(larger)h(than)f(that)f(of)h(isolated)h
(transitions)g(b)n(y)e(a)h(factor)479 2017 y Ff(\022)540
2132 y Fq(1)17 b Fm(\000)702 2084 y Fq(8)p Fj(M)814 2092
y Fi(r)850 2084 y Fj(\016)s(d)927 2052 y Fl(2)p 682 2115
300 4 v 682 2183 a Fj(\031)s(B)791 2162 y Fl(3)825 2183
y Fj(QH)950 2191 y Fi(c)991 2017 y Ff(\023)1052 2035
y Fe(\000)p Fl(1)p Fi(=)p Fl(2)1210 2132 y Fj(:)561 b
Fq(\(6\))-180 2337 y(This)29 b(is)f(easily)h(incorp)r(orated)g(in)n(to)
f(the)f(TZ-ZT)h(mo)r(del)g(b)n(y)f(correct-)-180 2429
y(ing)38 b(the)f(TZ-ZT)g(heigh)n(ts)h(for)g(isolated)h(transitions)f(b)
n(y)e(the)h(same)-180 2520 y(factor)24 b(\(6\).)33 b(After)22
b(making)g(adjustmen)n(ts)f(in)i(\(5\))f(and)g(\(6\),)i(w)n(e)e(mo)r
(del)-180 2611 y(partial)i(erasure)f(b)n(y)f(letting)h(the)g
(magnetization)g(p)r(ercolate)h(through)-180 2703 y(the)32
b(region)i(where)f(zig-zags)i(of)e(neigh)n(b)r(oring)h(transitions)f(o)
n(v)n(erlap.)-180 2794 y(Another)25 b(w)n(a)n(y)g(to)h(mo)r(del)f
(partial)h(erasure)g(is)g(to)f(let)h(the)f(magnetiza-)-180
2885 y(tion)18 b(p)r(ercolate)i(whenev)n(er)e(the)g(distance)g(b)r(et)n
(w)n(een)h(adjacen)n(t)f(zig-zags)-180 2977 y(is)30 b(less)h(than)e
(some)h(distance)g Fj(L)g Fq([11],)19 b([14],)33 b(but)c(it)g(y)n(et)h
(needs)f(to)h(b)r(e)-180 3068 y(determined)24 b(ho)n(w)i
Fj(L)g Fq(dep)r(ends)f(on)h(media)f(parameters.)-180
3271 y Fh(B.)43 b(Mo)l(deling)32 b(R)l(esults)-97 3410
y Fq(W)-6 b(e)17 b(wrote)i(TZ-ZT)f(dibits)g(and)g(read)g(it)f(with)i(a)
f(Lindholm)e(head)i(for)-180 3502 y(di\013eren)n(t)32
b(transition)h(spacings.)56 b(F)-6 b(or)33 b(eac)n(h)f(transition)h
(separation,)-180 3593 y(w)n(e)22 b(obtained)g(500)g(indep)r(enden)n(t)
e(dibit)i(w)n(a)n(v)n(eforms.)33 b(After)21 b(subtract-)-180
3684 y(ing)26 b(their)g(mean,)f(w)n(e)h(obtained)f(the)g(dibit)h(media)
f(noise)h(w)n(a)n(v)n(eforms,)-180 3776 y(and)18 b(calculated)i(their)e
(empirical)h(correlation)i(function.)32 b(W)-6 b(e)18
b(decom-)-180 3867 y(p)r(osed)34 b(the)f(correlation)j(function)e(in)n
(to)f(its)i(principal)f(comp)r(onen)n(ts)-180 3958 y(\(mo)r(des\))19
b(using)h(the)f(Karh)n(unen-Lo)r(ev)n(e)f(decomp)r(osition)j(\(KLD\))d
([13].)-180 4050 y(The)i(KLD)e(rev)n(ealed)i(that)f(t)n(w)n(o)h(basic)g
(noise)g(mo)r(des)f(\(amplitude)f(v)l(ari-)-180 4141
y(ation)k(mo)r(de)e(and)g(shift)i(in)f(unison)g(jitter)g(mo)r(de\))f
(dominate)h(the)f(dibit)-180 4232 y(media)e(noise.)32
b(Their)19 b(relativ)n(e)g(con)n(tribution)f(to)g(the)g(total)h(noise)g
(p)r(o)n(w-)-180 4324 y(er)32 b(c)n(hanges)h(with)f(transition)h
(separation,)i(as)d(sho)n(wn)h(in)f(Figure)g(3.)-180
4415 y(A)n(t)j(large)i(transition)g(separations,)j(jitter)c(is)g(the)g
(dominan)n(t)e(noise)-180 4506 y(mo)r(de,)26 b(while)i(at)f(short)f
(spacings)i(the)e(amplitude)g(v)l(ariations)h(domi-)-180
4598 y(nate.)39 b(This)28 b(plot,)h(obtained)e(with)g(TZ-ZT)h(mo)r
(deling,)g(is)g(similar)g(to)-180 4689 y(exp)r(erimen)n(tal)d(results)h
(obtained)g(in)f([13].)36 b(Figure)26 b(3)g(also)h(sho)n(ws)f(the)-180
4780 y(dibit)j(amplitude)f(as)h(a)h(function)f(of)g(in)n(v)n(erse)g
(transition)h(separation)-180 4872 y(and)25 b(the)h(amplitude)e
(obtained)i(b)n(y)f(linear)h(pulse)g(sup)r(erp)r(osition.)546
5035 y Fn(V.)45 b(Conclusion)-97 5153 y Fq(W)-6 b(e)30
b(presen)n(ted)f(a)h(computationally)g(e\016cien)n(t)g(media)g(and)f
(medi-)-180 5245 y(a)k(noise)h(mo)r(del.)55 b(Magnetization)35
b(transitions)f(are)f(represen)n(ted)f(as)-180 5336 y(p)r(ortions)i(of)
h(a)f(zig-zag)h(line)f(across)i(the)d(trac)n(k.)58 b(The)34
b(zig-zag)i(line)-180 5427 y(is)26 b(a)g(random)f(pro)r(cess)h
(obtained)g(b)n(y)f(placing)h(isosceles)i(triangles)f(on)-180
5519 y(a)36 b(common)d(basis)k(line.)64 b(F)-6 b(orm)n(ulas)35
b(are)g(presen)n(ted)g(that)g(link)g(the)-180 5610 y(de\014ning)26
b(quan)n(tities)g(of)h(the)f(mo)r(del)g(to)g(recording)h(parameters.)37
b(F)-6 b(or)-180 5701 y(isolated)33 b(transitions,)h(the)e(transition)g
(shap)r(e)g(and)f(jitter)h(noise)g(are)-180 5793 y(accurately)21
b(mo)r(deled.)33 b(F)-6 b(or)20 b(in)n(teracting)i(transitions,)h
(nonlinear)e(am-)-180 5884 y(plitude)f(loss)i(and)e(high)g(densit)n(y)g
(media)g(noise)h(are)g(also)h(incorp)r(orated)-180 5975
y(in)n(to)k(the)f(mo)r(del.)34 b(The)26 b(mo)r(del)f(can)h(b)r(e)f
(applied)h(to)g(generate)g(signals)2010 508 y(with)d(high)f(densit)n(y)
g(nonlinearities)i(and)f(media)f(noise,)i(and)e(is)i(there-)2010
600 y(fore)18 b(useful)g(for)g(statistical)h(studies)f(\(error)f(rate)h
(studies\))f(of)h(readbac)n(k)2010 691 y(subsystems.)2675
903 y Fn(A)n(ckno)n(wledgment)2093 1068 y Fq(W)-6 b(e)22
b(thank)f(Pu-Ling)i(Lu)f(for)h(pro)n(viding)f(us)g(soft)n(w)n(are)i
(and)e(sharing)2010 1160 y(his)k(exp)r(erience)g(in)f(micromagnetic)h
(mo)r(deling.)2803 1325 y Fn(References)2055 1478 y Fk([1])41
b(J.-G.)20 b(Zh)n(u)h(and)h(N.)e(H.)g(Bertram,)g(\\Recording)i(and)g
(transition)f(noise)2171 1556 y(sim)n(ulations)j(in)h(thin)h(\014lm)e
(media,")i Fa(IEEE)i(T)-5 b(r)l(ans.)28 b(Magn.)p Fk(,)e(v)n(ol.)f(24,)
2171 1635 y(pp.)f(2706{2708,)h(No)n(v.)f(1988.)2055 1714
y([2])41 b(P)-6 b(.-L.)28 b(Lu)g(and)i(S.)e(Charap,)i(\\Angular)f(v)l
(ariations)g(of)g(co)r(ercivit)n(y)g(in)2171 1793 y(thin-\014lm)21
b(media)h(b)n(y)h(micromagnetic)e(mo)r(del,")h Fa(IEEE)j(T)-5
b(r)l(ans.)25 b(Mag-)2171 1872 y(n.)p Fk(,)e(v)n(ol.)g(28,)h(pp.)g
(986{989,)h(Marc)n(h)e(1992.)2055 1951 y([3])41 b(T.)20
b(C.)g(Arnoldussen)g(and)i(H.)d(C.)h(T)-6 b(ong,)22 b(\\Zigzag)g
(transition)e(pro\014les,)2171 2030 y(noise,)i(and)h(correlation)g
(statistics)f(in)g(highly)g(orien)n(ted)h(longitudinal)2171
2109 y(media,")e Fa(IEEE)k(T)-5 b(r)l(ans.)25 b(Magn.)p
Fk(,)c(v)n(ol.)h(22,)g(pp.)g(889{891,)i(Sept.)e(1986.)2055
2187 y([4])41 b(B.)34 b(K.)g(Middleton)i(and)f(J.)g(J.)f(Miles,)j(\\Sa)
n(wto)r(oth)g(magnetization)2171 2266 y(transitions)e(and)h(the)g
(digital)f(recording)h(prop)r(erties)f(of)g(thin)g(\014lm)2171
2345 y(recording)24 b(media,")e(in)i Fa(IEE)i(Conf.)g(Pr)l(o)l(c.)p
Fk(,)e(pp.)g(20{25,)h(April)d(1991.)2055 2424 y([5])41
b(B.)35 b(K.)f(Middleton)i(and)g(J.)f(J.)g(Miles,)h(\\Recorded)h
(magnetization)2171 2503 y(distributions)21 b(in)f(thin)i(\014lm)d
(media,")i Fa(IEEE)j(T)-5 b(r)l(ans.)23 b(Magn.)p Fk(,)e(v)n(ol.)g(27,)
2171 2582 y(pp.)j(4954{4959,)h(No)n(v.)f(1991.)2055 2661
y([6])41 b(A.)31 b(Ka)n(v)n(\024)-33 b(ci)n(\023)g(c)33
b(and)g(J.)e(M.)h(F.)f(Moura,)j(\\T)-6 b(riangle)32 b(zig-zag)h
(transition)2171 2740 y(mo)r(deling,")25 b(tec)n(h.)h(rep.,)f(Data)h
(Storage)g(Systems)f(Cen)n(ter,)h(Dept.)g(of)2171 2818
y(Electrical)32 b(and)h(Computer)e(Engineering,)k(Carnegie)d(Mellon)g
(Uni-)2171 2897 y(v)n(ersit)n(y)-6 b(,)24 b(Pittsburgh,)f(P)-6
b(A,)23 b(1995.)33 b(54)24 b(pages.)2055 2976 y([7])41
b(Y.-S.)21 b(T)-6 b(ang)22 b(and)h(L.)e(Osse,)h(\\Zig-zag)h(domains)e
(and)h(metal)g(\014lm)e(disk)2171 3055 y(noise,")f Fa(IEEE)j(T)-5
b(r)l(ans.)20 b(Magn.)p Fk(,)f(v)n(ol.)e(MA)n(G-23,)i(pp.)f(2371{2373,)
j(Sep-)2171 3134 y(t.)j(1987.)2055 3213 y([8])41 b(L.)30
b(Kleinro)r(c)n(k,)i Fa(Queueing)g(Systems)p Fk(.)51
b(New)31 b(Y)-6 b(ork:)45 b(John)31 b(Wiley)g(&)2171
3292 y(Sons,)24 b(1975.)2055 3370 y([9])41 b(H.)31 b(N.)g(Bertram,)h
Fa(The)l(ory)i(of)f(Magnetic)g(R)l(e)l(c)l(or)l(ding)p
Fk(.)56 b(Cam)n(bridge:)2171 3449 y(Cam)n(bridge)23 b(Univ)n(ersit)n(y)
g(Press,)g(1994.)2020 3528 y([10])41 b(A.)30 b(Ka)n(v)n(\024)-33
b(ci)n(\023)g(c)30 b(and)h(J.)f(M.)g(F.)f(Moura,)j(\\Statistical)f
(study)g(of)f(zig-zag)2171 3607 y(transition)d(b)r(oundaries)g(in)f
(longitudinal)g(digital)h(magnetic)f(record-)2171 3686
y(ing,")d Fa(IEEE)k(T)-5 b(r)l(ans.)26 b(Magn.)p Fk(,)d(v)n(ol.)h(33,)f
(pp.)h(4482{4491,)i(No)n(v.)d(1997.)2020 3765 y([11])41
b(J.)32 b(Caroselli)g(and)i(J.)e(K.)g(W)-6 b(olf,)35
b(\\A)e(new)g(mo)r(del)f(for)g(media)g(noise)2171 3844
y(in)24 b(thin)h(\014lm)e(magnetic)i(recording)g(media,")f(in)g
Fa(Pr)l(o)l(c.)54 b(SPIE:)27 b(Co)l(d-)2171 3923 y(ing)f(and)i(Signal)f
(Pr)l(o)l(c)l(essing)h(for)f(Information)h(Stor)l(age)p
Fk(,)e(v)n(ol.)e(2605,)2171 4001 y(\(Philadelphia\),)g(pp.)g(29{38,)g
(Oct.)g(1995.)2020 4080 y([12])41 b(H.)15 b(N.)h(Bertram)f(and)h(X.)g
(Che,)h(\\General)g(analysis)f(of)g(noise)g(in)g(record-)2171
4159 y(ed)h(transitions)g(in)f(thin)h(\014lm)e(recording)i(media,")g
Fa(IEEE)j(T)-5 b(r)l(ans.)19 b(Mag-)2171 4238 y(n.)p
Fk(,)k(v)n(ol.)g(29,)h(pp.)g(201{208,)h(1993.)2020 4317
y([13])41 b(J.-G.)32 b(Zh)n(u)h(and)h(X.-G.)d(Y)-6 b(e,)35
b(\\Impact)f(of)e(medium)f(noise)i(on)g(v)l(ari-)2171
4396 y(ous)c(partial)g(resp)r(onse)h(c)n(hannels,")i
Fa(IEEE)g(T)-5 b(r)l(ans.)31 b(Magn.)p Fk(,)f(v)n(ol.)f(31,)2171
4475 y(pp.)24 b(3087{3089,)h(No)n(v.)f(1995.)2020 4554
y([14])41 b(R.)33 b(D.)h(Brandt,)i(A.)e(J.)f(Armstrong,)i(H.)e(N.)h
(Bertram,)g(and)h(J.)f(K.)2171 4632 y(W)-6 b(olf,)37
b(\\A)d(simple)f(statistical)i(mo)r(del)f(of)g(partial)g(erasure)g(in)h
(thin)2171 4711 y(\014lm)23 b(disk)h(recording)g(systems,")g
Fa(IEEE)j(T)-5 b(r)l(ans.)27 b(Magn.)p Fk(,)d(v)n(ol.)g(MA)n(G-)2171
4790 y(27,)g(pp.)f(4978{4980,)j(No)n(v.)d(1991.)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
