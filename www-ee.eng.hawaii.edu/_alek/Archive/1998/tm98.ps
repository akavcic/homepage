%!PS-Adobe-2.0
%%Creator: dvips(k) 5.85 Copyright 1999 Radical Eye Software
%%Title: revised.dvi
%%Pages: 26
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o revised.ps revised
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 1999.10.10:1955
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (revised.dvi)
@start
%DVIPSBitmapFont: Fa lasy10 12 1
/Fa 1 51 df<003FB9FCBA1280A300F0CA1207B3B3ADBAFCA4393977BE4A>50
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmsy6 6 1
/Fb 1 1 df<B712C0A322037A8D30>0 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmr6 6 2
/Fc 2 50 df<1438B2B712FEA3C70038C7FCB227277C9F2F>43 D<13E01201120712FF12
F91201B3A7487EB512C0A212217AA01E>49 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmsy8 8 3
/Fd 3 107 df<B812C0A32A037A9137>0 D<137813FE1201A3120313FCA3EA07F8A313F0
A2EA0FE0A313C0121F1380A3EA3F00A3123E127E127CA35AA35A0F227EA413>48
D<12E0B3B3B3AD034378B114>106 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmmi6 6 5
/Fe 5 117 df<D9FFFEEB1FFC163FD907C0EB0FC017004948131C163016E0ED01809026
1F0007C7FC150E15385D013E13C0EC03804A7EEC1FE0EB7C3BECE3F0EB7DC190387F01F8
EBFE0001F87F157C157E4848133E153F816F7E485A6F7E821207D8FFFEEB3FFEA22E227C
A133>75 D<90B57E92C7FCEB07C0A2495AA449C8FCA4133EA45BA45BED0180A2ED030048
5A1506A2150E48485B153C15F800071303B6FC5D21227CA12A>I<1338137CA213781370
1300A7EA0780EA1FC0EA38E01230EA60F0EAC1E0A3EA03C0A3EA0780A2EA0F0013041306
EA1E0CA21318121CEA1E70EA0FE0EA07800F237DA116>105 D<EA01F0EA1FE0A21201A2
EA03C0A4EA0780A4EA0F00A4121EA45AA45AA213401360EAF0C0A3EAF1801271EA3F0012
1E0C247DA214>108 D<133013785BA4485AA4485AB51280A23803C000485AA448C7FCA4
121EA25B1480383C03001306A25BEA1C38EA0FF0EA07C011217D9F18>116
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmex10 10 13
/Ff 13 119 df<B512F8A500F8C7FCB3B3B3B3B3B3B3B3B3B3A8B512F8A515C66B822C>
20 D<B512F8A5C7FCB3B3B3B3B3B3B3B3B3B3A8B5FCA515C67F822C>I<B61280A600FCC8
FCB3B3B3B3B3B3B3B3B3B3B3B3B3A2B61280A619F86A8230>34 D<B61280A6C7121FB3B3
B3B3B3B3B3B3B3B3B3B3B3A2B6FCA619F8808230>I<BB12E0A4000F90C9381FFE000003
18F86C606C60B3B3B3AF486D4B7E486D4B7E000F01F0913801FFFEB6021FEBFFE0A44353
7B7F4E>81 D<BF12E08AA38A6C90CCFC0900806C6D19076C6D07007F6C6D1A1F1D076C6D
F201FF6C6D747E6C6DF33F801E0F6C6D1B076D6CF303C06D6D1A01F600E06D7F6D6D1B70
6D1D30816D6D1B186D6D1B007F816E7E6E7FA26E7F6E7F6E7FA26E7F6E7F6E7FA26F7E6F
7F6F7FA26F7F6F7F81836F7F6F7F167F83707F707F8284707F707FA2707F82715A60173F
715A604D5A4DCDFC17FEA24C5A4C5A4C5A4C5A4C5A5F163F4CCEFC16FE4B5A4B5A4B5AA2
4B5A4B5A4B5A4BCFFC15FEA24A5A4A5A4A481B184A481B304A5A4B1B70023F1C604ACF12
E002FE1B014948F303C049481B074948F30F801E1F49481B7F4948F3FF0049481A0349CE
120F01FEF37FFEF403FF48481A7F4848077FB55A48BEFC48655AA248655ABFFC666D747B
7F78>88 D<BE12FEA5000302E0C9000F1480C66CF2FC00011F1AF06D626D62A26D62B3B3
B3B3B3A4496D4C7FA2496D4C7F496D4C7F017F01FF4BB512FC0003B600E0020FECFF80B8
D88003B712FEA55F747B7F6A>I<B512E0A500F8C7FCB3B3B3B3B3B3B3ACB512E0A51394
6E8227>104 D<B512E0A5EA0003B3B3B3B3B3B3B3ACB5FCA513947F8227>I<1B301B78A2
1BF8A21BF01A01A21BE01A03A21BC01A07A21B801A0FA21B0062A21A1E1A3EA21A3C1A7C
A21A781AF8A262A21901A2621903A2621907A262190FA297C7FC61A2191E193EA2193C19
7CA2197819F8A2611801A2611803A261A21807A261180FA296C8FC60A2181E183EA2183C
187C131001301678017016F813F860000116011203486C5E000F1603121DD838FE5E0070
1607126000C05FEA407F0000160FA26D6C92C9FC5FA2171E6D6C143EA2173C6D6C147CA2
177817F86D7E5F16016D7E5F1603A26D6C5C1607A26D6C5C160FA294CAFC027F5BA2161E
EC3F80163EA2163C91381FC07CA2167891380FE0F8A25E15E1EC07F15E15F3EC03FB5E15
FFA26E5BA36E90CBFCA35D157EA2157C153C15384D96788353>113
D<18301878B11318A21338133C137C13FC7F1201A2487E7F120738063F80120E120C381C
1FC01218123838300FE01260A212C06D7E1200A26D7EA36D7EA36D7EA3147FA36E7EA36E
7EA36E7EA36E7EA36E7EA36E7EA36E7EA3157FA36F7EA36F7EA36F7EA36F7EA36F7EA36F
7EA46F7EA3167FA3EE3F80A3EE1FC0A3EE0FE0A3EE07F0A3EE03F8A3EE01FCA3EE00FEA3
177FA3EF3FF8A3171FA3170FA31707A31703A31701A31700A3187018603597778158>
116 D<126012F0B3B3B012600436468158>I<007FB512FEB7FCA215FE00F0C8FCB3B3AB
12602034468358>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmsy10 12 12
/Fg 12 113 df<007FB912E0BA12F0A26C18E03C04789A4D>0 D<121FEA3F80EA7FC0EA
FFE0A5EA7FC0EA3F80EA1F000B0B789E1C>I<0060160600F8160F6C161F007E163F6C16
7E6C6C15FC6C6CEC01F86C6CEC03F06C6CEC07E06C6CEC0FC06C6CEC1F80017EEC3F006D
147E6D6C5B6D6C485A6D6C485A6D6C485A6D6C485A6D6C485ADA7E3FC7FCEC3F7E6E5A6E
5A6E5AA24A7E4A7EEC3F7EEC7E3F4A6C7E49486C7E49486C7E49486C7E49486C7E49486C
7E49C7127E017E8049EC1F804848EC0FC04848EC07E04848EC03F04848EC01F84848EC00
FC48C9127E007E163F48161F48160F00601606303072B04D>I<ED1FFE4AB512E0020F14
FC91393FF0E3FF913AFF00E03FC0D901F8EC07E0D907E0EC01F8D90F80EC007C49C78001
3C160F49707E49707E4848707E4848707E4917700007187848C881000E181C001E181E00
1C180E003C180F003884A20078198000701803A300F019C0481801A3BBFCA300E0C800E0
C71201A46C180300701980A30078180700381900A2003C60001C180E001E181E000E181C
000F183C6C6C5F000318706D17F06C6C4C5A6C6C4C5A01784C5A6D4CC7FC011F163E6D6C
5DD907E04A5AD901F8EC07E06DB4EC3FC091273FF0E3FFC8FC020FB512FC020114E09126
001FFEC9FC42427BB94D>8 D<ED1FFE4AB512E0020F14FC91393FF003FF02FFC7EA3FC0
D901F8EC07E0D907E0EC01F8D90F80EC007C49C97E013C160F49707E49707E4848707E48
48707E4917700007187848CB7E000E181C001E181E001C180E003C180F003884A2007819
8000701803A300F019C0481801A3BBFCA300E0CB1201A46C180300701980A30078180700
381900A2003C60001C180E001E181E000E181C000F183C6C6C5F000318706D17F06C6C4C
5A6C6C4C5A01784C5A6D4CC7FC011F163E6D6C5DD907E04A5AD901F8EC07E06DB4EC3FC0
91273FF003FFC8FC020FB512FC020114E09126001FFEC9FC42427BB94D>I<127012FCB4
FCEA7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF0EB07FCEB01FF9038007FC0EC1FF0EC07
FC913801FF809138007FE0ED1FF8ED07FE923800FF80EE3FE0EE0FF8EE03FE933800FF80
EF3FE0EF0FF8EF03FE943800FF80F03FE0F00FF0A2F03FE0F0FF80943803FE00EF0FF8EF
3FE0EFFF80DC03FEC7FCEE0FF8EE3FE0EEFF80DB03FEC8FCED1FF8ED7FE0913801FF80DA
07FEC9FCEC1FF0EC7FC04948CAFCEB07FCEB1FF0EB7FC04848CBFCEA07FCEA1FF0EA7FC0
48CCFC12FC1270CDFCB0007FB912E0BA12F0A26C18E03C4E78BE4D>21
D<92B6FC02071580143F91B7120001030180C8FCD907FCC9FCEB1FE0EB3F80017ECAFC5B
485A485A485A5B485A121F90CBFC123EA2123C127CA2127812F8A25AA2B9FC1880A21800
00F0CBFCA27EA21278127CA2123C123EA27E7F120F6C7E7F6C7E6C7E6C7E137E6D7EEB1F
E0EB07FC6DB47E010090B6FC023F1580140702001500313A78B542>50
D<DC03801960040F1AE0041F19014C7E047FF103C01E071E0F1E1F71183F16FFF67F801E
FF6565715F5D53130065DCCFF85F1D7E030319FD1DF904C705015BDC87FCEE03F1F407E1
0307F00FC1F41F83DC03FEEE3F03A2030F067E5B030E18FC706CED01F8031EEF03F0031C
943807E007F30FC0DB3C007FF31F800338DD3F005B1B7E03786D6C5C03704C5A5048130F
4B1607716C495A0201604B4C5A7249C7FC0203021F027E5D4B5E72485A4AC7000F495ADE
FC07151F4A4C5A020E0207495A72485A4A020349C8FCF0FFFE023C5E02386E5B02785E02
706E5B02F05E261001E06F5A003895C9FC267C03C0153ED87F87041C1830B5480318EFF8
F095CAEBFFE091CE14C0491D809A380FFE00491CF86C48F307C06C4898C8FCEA07E06C4B
7DC578>77 D<ED0FE015FF913803FC00EC0FE0EC3FC04A5A4AC7FC5C495AA2495AB3AD49
5AA2495A131F495A495A01FEC8FCEA07F8EAFFE0A2EA07F8EA00FEEB7F806D7E6D7E130F
6D7EA26D7EB3AD6D7EA26D7E806E7E6E7EEC0FE0EC03FC913800FFE0150F236479CA32>
102 D<12FEEAFFE0EA07F8EA00FEEB7F806D7E6D7E130F6D7EA26D7EB3AD6D7EA26D7E80
6E7E6E7EEC0FE0EC03FC913800FFE0A2913803FC00EC0FE0EC3FC04A5A4AC7FC5C495AA2
495AB3AD495AA2495A131F495A495A01FEC8FCEA07F8EAFFE048C9FC236479CA32>I<12
6012F0B3B3B3B3B3A81260046474CA1C>106 D<1B0C1B1E1B3EA21B7CA21BF8A2F201F0
A2F203E0A2F207C0A2F20F80A2F21F00A21A3EA262A262A24F5AA2621903A24F5AA24F5A
A24FC7FCA2193EA261A261A24E5AA24E5AA24E5AA24E5AA2010C4CC8FC133C017C163EEA
01FE00035F487E001E5F00387FD8707F4B5A00E07FD8003F4B5A80011F4B5AA26E4A5A13
0F6E4AC9FC13076E143E13036E5C13016E5C7F6F5B027F1301A26F485A143F6F485A141F
6F485A140F6F48CAFC1407EDFC3E14035E15FE02015B15FF6E5BA26F5AA26F5AA26F5AA2
6FCBFC150E4F647A8353>112 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmmi8 8 15
/Fh 15 117 df<123C127E12FFA4127E123C08087A8714>58 D<123C127EB4FCA21380A2
127F123D1201A312031300A25A1206120E5A5A5A126009157A8714>I<90263FFFFC9038
1FFF80A2D900FEC73803F80018E04AEC07804DC7FC0101151C5F4A14E04C5A01034A5A04
0EC8FC4A5B5E010714E04B5A9138E00780030EC9FC010F131F157F4A487E14C190391FC7
1FC014CEEC9C0F02F07F90383FE00702C07FEC0003825B6F7E137E6F7E13FE167F5B707E
1201161F4981831203B539E001FFFEA2392D7CAC3C>75 D<90383FFFFEA2010090C8FC5C
5CA21301A25CA21303A25CA21307A25CA2130FA25CA2131FA25CA2133FA291C7EA0180A2
4914031700017E5C160601FE140EA2495C163C12015E49EB01F84B5A0003141FB7FC5E29
2D7DAC30>I<D93FFE91B5FCA2D900FFEC07E018C06FEB038002DF150001016D5B02CF14
06EC8FE0148701036D130E170C140381D90701141C6F1318EB060081010E017E1338037F
1330010C7FA2011CEC8070031F1360011814C0150F0138ECE0E003075B013014F0150301
7014F1EEF9800160130116FD01E0EB00FF94C7FC4980A2000181163E5B486C141EEA0FE0
D8FFFE140CA2382D7CAC38>78 D<EB07E0EB1FF890387C1CE0EBF80D3801F00F3803E007
EA07C0120FD81F8013C0A2EA3F00140F481480127EA2141F00FE14005AA2EC3F02EC3E06
A25AEC7E0E007CEBFE0C14FC0101131C393E07BE18391F0E1E38390FFC0FF03903F003C0
1F1F7D9D25>97 D<EB01F8EB0FFE90383E0780EB7C01D801F813C03803F0073807E00FEA
0FC001801380121F48C8FCA25A127EA312FE5AA51560007C14E0EC01C0EC03806CEB0F00
001E131C380F81F83807FFE0C648C7FC1B1F7D9D1F>99 D<157C4AB4FC913807C380EC0F
87150FEC1F1FA391383E0E0092C7FCA3147E147CA414FC90383FFFF8A2D900F8C7FCA313
015CA413035CA413075CA5130F5CA4131F91C8FCA4133EA3EA383C12FC5BA25B12F0EAE1
E0EA7FC0001FC9FC213D7CAE22>102 D<1307EB0F80EB1FC0A2EB0F80EB070090C7FCA9
EA01E0EA07F8EA0E3CEA1C3E123812301270EA607EEAE07C12C013FC485A120012015B12
035BA21207EBC04014C0120F13801381381F01801303EB0700EA0F06131EEA07F8EA01F0
122E7EAC18>105 D<137CEA0FFCA21200A213F8A21201A213F0A21203A213E0A21207A2
13C0A2120FA21380A2121FA21300A25AA2123EA2127EA2127CA2EAFC08131812F8A21338
133012F01370EAF860EA78E0EA3FC0EA0F000E2F7DAD15>108 D<3907C007E0391FE03F
F83918F8783E393879E01E39307B801F38707F00126013FEEAE0FC12C05B00815C000114
3E5BA20003147E157C5B15FC0007ECF8081618EBC00115F0000F1538913803E030018014
7016E0001F010113C015E390C7EAFF00000E143E251F7E9D2B>110
D<EB01F8EB0FFF90383F078090387C03C0D801F813E03903F001F0EA07E0D80FC013F8EB
8000121F48C7FC14015A127EA2140300FE14F05AA2EC07E0A2EC0FC0A2007CEB1F801500
143E6C5B6C485A380F83E03803FF80D800FCC7FC1D1F7D9D22>I<3807C01F390FF07FC0
391CF8E0E0383879C138307B8738707F07EA607E13FC00E0EB03804848C7FCA212811201
5BA21203A25BA21207A25BA2120FA25BA2121FA290C8FC120E1B1F7E9D20>114
D<EB07E0EB3FF8EB781EEBF0063801E0073803C00F141FA20007131E140CEBE00013F8EB
FF806C13E06C13F06C13F8EB3FFC13011300147C0078133C12FCA2147C48137800E013F8
14F0386001E0387807C0381FFF00EA07F8181F7C9D21>I<130E131FA25BA2133EA2137E
A2137CA213FCA2B512F8A23801F800A25BA21203A25BA21207A25BA2120FA25BA2001F13
10143013001470146014E0381E01C0EB0380381F0700EA0F0EEA07FCEA01F0152B7EA919
>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmr8 8 16
/Fi 16 120 df<13031307130E131C1338137013F0EA01E013C01203EA0780A2EA0F00A2
121EA35AA45AA512F8A25AAB7EA21278A57EA47EA37EA2EA0780A2EA03C0120113E0EA00
F013701338131C130E1307130310437AB11B>40 D<12C07E12707E7E7E120FEA07801203
13C0EA01E0A2EA00F0A21378A3133CA4131EA5131FA2130FAB131FA2131EA5133CA41378
A313F0A2EA01E0A2EA03C013801207EA0F00120E5A5A5A5A5A10437CB11B>I<EC0380B3
A4B812FCA3C7D80380C7FCB3A42E2F7CA737>43 D<130C133C137CEA03FC12FFEAFC7C12
00B3B113FE387FFFFEA2172C7AAB23>49 D<EB7F803801FFF0380780FC380E003F48EB1F
8048EB0FC05A0060EB07E012F000FC14F07E1403A3007C1307C7FCA215E0140F15C0141F
1580EC3F00147E147C5C495A495A495A495A011EC7FC5B5B4913305B485A4848136048C7
FC000E14E0001FB5FC5A4814C0B6FCA21C2C7DAB23>I<000CEB0180380FC01F90B51200
5C5C14F014C0D80C7EC7FC90C8FCA8EB1FC0EB7FF8380DE07C380F801F01001380000E13
0F000CEB07C0C713E0A2140315F0A4127812FCA448EB07E012E0006014C00070130F6C14
806CEB1F006C133E380780F83801FFE038007F801C2D7DAB23>53
D<EB1FC0EBFFF03803E07C3807801E48487E001EEB0780A248EB03C0A4123E1407003F14
80381FC00F01E01300EBF81E6C6C5A3807FFF86C13E0C6FCEB3FF8EBFFFC3803C7FFD807
831380D81F0013C0001E133F48EB1FE0007C13070078EB03F012F84813011400A46C14E0
00781301007C14C0003C13036CEB0780390F800F003807E03C3801FFF038003FC01C2D7D
AB23>56 D<B812FCA3CBFCADB812FCA32E137C9937>61 D<007FB712F8A29039000FC003
007C150000701638A200601618A200E0161CA248160CA5C71500B3A94A7E011FB512E0A2
2E2D7EAC33>84 D<13FF000713C0380F01F0381C00F8003F137C80A2143F001E7FC7FCA4
EB07FF137F3801FE1FEA07F0EA1FC0EA3F80EA7F00127E00FE14065AA3143F7E007E137F
007FEBEF8C391F83C7FC390FFF03F83901FC01E01F207D9E23>97
D<15F8141FA214011400ACEB0FE0EB7FF83801F81E3803E0073807C003380F8001EA1F00
481300123E127EA25AA9127C127EA2003E13017EEB8003000F13073903E00EFC3A01F03C
FFC038007FF090391FC0F800222F7EAD27>100 D<EB1F80EBFFF03803E0783807C03E38
0F801E381F001FEC0F80123E007E130715C0127C12FCA3B6FCA200FCC8FCA5127EA2003E
14C0123F6C1301390F80038001C013003803E00F3801F03C38007FF8EB1FC01A207E9E1F
>I<EA07C012FFA2120F1207B3B3A3EA0FE0EAFFFEA20F2E7EAD14>108
D<3807C0FE39FFC3FF809038C703E0390FDE01F0EA07F8496C7EA25BA25BB2486C487E3A
FFFE1FFFC0A2221E7E9D27>110 D<EB1FE0EB7FF83801F03E3803C00F3907800780390F
0003C04814E0003EEB01F0A248EB00F8A300FC14FCA9007C14F8A26CEB01F0A26CEB03E0
A2390F8007C03907C00F803901F03E0038007FF8EB1FE01E207E9E23>I<3BFFFC3FFE07
FFA23B0FE003F001F801C09038E000F00007010114E0812603E00314C0A2913807F80127
01F006781380A29039F80E7C030000D90C3C1300A290397C181E06A2151F6D486C5AA216
8C90391F600798A216D890390FC003F0A36D486C5AA36DC75A301E7F9C33>119
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmmi12 12 32
/Fj 32 117 df<EE1FE0EE7FFC923801E03F923907800F8092390E0007C04BEB03E04B13
014B14F04B13004A4814F85D14034AC8FC1406140E020C1401141C021815F00238140302
3015E01707027015C00260140F188002E0EC1F004A143E5F010190383FF1F84AB512E092
38C01F8092B57E010390383FF1F091C87E1778177C49811306A283130E130CA3011C1680
1318A30138ED3F001330A301705D177E136017FE01E05DA24C5AA200014B5A6D4A5A01B0
4A5A5FD803B84AC7FC0118147E011C5C6DEB01F0486CEB07C0270603C03FC8FC903800FF
FCEC3FC0000E90CAFC120CA3121C1218A312381230A312701260A312E0A235597DC537>
12 D<1578913807FFE0021F13FC91383C7FFEEC7007EC6003ECE0004A13381600A280A3
80A280147CA2147E143E143F816E7EA26E7E81140781EC3FFC14FF903803E1FEEB07C190
381F00FF133E49EB7F805B0001143F485A484814C049131F120F485AA248C7FC150F5A12
7EA300FEEC1F805AA316005A5DA2153E157E157CA26C5C127C4A5A6C495AA26C495A6C6C
485A6C6C48C7FC3803E07C3800FFF0EB1FC027487CC62B>14 D<147002F8140E0101153F
A301035DA24A147EA2010715FEA24A5CA2010F1401A24A5CA2011F1403A24A5CA2013F14
07A291C75BA249140FA2017E5DA201FE021F1318183849ED8030A20001033F13701860EE
7F005E486C16E0DB01DF13C09238039F016DD9071F1380489039801E0F83903BF7C07807
8700903AE1FFE003FE903AE07F8000F8000F90CAFCA25BA2121FA25BA2123FA290CBFCA2
5AA2127EA212FEA25A123835417DAB3B>22 D<010FB712E0013F16F05B48B812E04817C0
2807E0060030C7FCEB800EEA0F00001E010C13705A0038011C13605A0060011813E000E0
13381240C7FC5C4B5AA214F014E01301150314C01303A3EB078082130FA2EB1F00A34980
133E137EA24980A2000114015BA26C48EB00E0342C7EAA37>25 D<0203B612E0021F15F0
91B7FC4916E0010716C090270FF80FF8C7FC90381FC00349486C7E017EC7FC49147E485A
4848143E0007153F5B485AA2485AA2123F90C8FC5E48157E127EA216FE00FE5D5A15015E
A24B5A007C5D15074B5A5E6C4AC8FC153E6C5C5D390F8003F03907C007C02601F03FC9FC
38007FFCEB1FE0342C7DAA37>27 D<121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A0A7889
1B>58 D<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013C0A3120113801203
13005A1206120E5A5A5A12600B1D78891B>I<F001C0F007E0181FF07FC0943801FF00EF
07FCEF1FF0EF7FC04C48C7FCEE0FFCEE3FF0EEFFC0030390C8FCED0FF8ED3FE0EDFF80DA
03FEC9FCEC1FF8EC7FE0903801FF80D907FECAFCEB1FF0EB7FC04848CBFCEA07FCEA1FF0
EA7FC048CCFCA2EA7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF0EB07FE903801FF809038
007FE0EC1FF8EC03FE913800FF80ED3FE0ED0FF8ED03FF030013C0EE3FF0EE0FFCEE01FF
9338007FC0EF1FF0EF07FCEF01FF9438007FC0F01FE01807F001C03B3878B44C>I<1618
163C167CA2167816F8A216F01501A216E01503A216C01507A21680150FA2ED1F00A2151E
153EA2153C157CA2157815F8A25D1401A24A5AA25D1407A25D140FA292C7FC5CA2141E14
3EA2143C147CA25CA25C1301A25C1303A25C1307A25C130FA291C8FC5BA2133EA2133C13
7CA2137813F8A25B1201A25B1203A2485AA25B120FA290C9FC5AA2121E123EA2123C127C
A2127812F8A25A126026647BCA31>I<127012FCB4FCEA7FC0EA1FF0EA07FCEA01FF3800
7FC0EB1FF0EB07FE903801FF809038007FE0EC1FF8EC03FE913800FF80ED3FE0ED0FF8ED
03FF030013C0EE3FF0EE0FFCEE01FF9338007FC0EF1FF0EF07FCEF01FF9438007FC0F01F
E0A2F07FC0943801FF00EF07FCEF1FF0EF7FC04C48C7FCEE0FFCEE3FF0EEFFC0030390C8
FCED0FF8ED3FE0EDFF80DA03FEC9FCEC1FF8EC7FE0903801FF80D907FECAFCEB1FF0EB7F
C04848CBFCEA07FCEA1FF0EA7FC048CCFC12FC12703B3878B44C>I<1830187018F0A217
011703A24D7EA2170F171FA21737A2176717E717C793380187FCA2EE0307EE0703160616
0CA216181638163004607FA216C0030113011680ED0300A21506150E150C5D845D03707F
15605DA24A5A4AB7FCA25C0206C87F5C021C157F14185CA25C14E05C495A8549C9FC4916
3F1306130E5B133C137C01FE4C7ED807FFED01FF007F01F0027FEBFFC0B5FC5C42477DC6
49>65 D<4CB46C1318043F01F013384BB512FC0307D9007E1378DB1FF090380F80F0DB7F
80EB03C1DA01FEC7EA01C34A48EC00E7DA0FF0ED7FE04A48153F4A5A02FFC9121F494817
C04948160F495A130F4A178049481607495A137F4948170091CAFC5A485A1906485AA248
5A96C7FC121F5BA2123F5BA3127F5BA4485AA419C0A2180161127F180396C7FC6018066C
6C160E601818001F17386D5E000F5F6D4B5A6C6C4B5A00034CC8FC6C6C150E6C6C153C01
7F5DD93FC0EB01E0D91FF0EB0FC0D907FE017FC9FC0101B512FCD9003F13E0020790CAFC
45487CC546>67 D<91B87E19F019FC02009039C00007FF6F489038007FC003FFED1FE073
7E93C86C7E737E19014A707E5D1A7FA20203EF3F805DA21BC014075DA3140F4B17E0A314
1F4B17C0A3143F4B167FA3027F18804B16FFA302FF180092C95A62A24917034A5F190762
01034D5A5C4F5A620107173F4A5F4FC7FC19FE010F4C5A4A15034E5AF00FE0011F4C5A4A
4B5A06FFC8FC013FED01FCEF0FF84AEC3FE001FF913803FF80B848C9FC17F094CAFC4B44
7CC351>I<91B6D8E003B61280A3020001E0C70003EB8000DB7F806E48C7FC03FF1503A2
93C85BA219075C4B5EA2190F14034B5EA2191F14074B5EA2193F140F4B5EA2197F141F4B
5EA219FF143F92B8C8FCA3DA7FC0C712014B5DA2180314FF92C85BA218075B4A5EA2180F
13034A5EA2181F13074A5EA2183F130F4A5EA2187F131F4A5EA2013F16FFA24A93C9FCD9
FFE002037FB6D8E003B67EA351447CC351>72 D<91B600E049B512C0A3020001E0C8383F
F800DB7F80ED1FE003FF94C7FC1A3E93C9127862F101C04A4C5A4B4BC8FC191C6102035E
4B5DF003804EC9FC0207150E4B14386060020F4A5A4B0107CAFC170E5F021F14784B13F8
4C7E1603023F130F4B487E163BEEE1FF91387FC1C1DB83807FED8700159CDAFFB86D7E5D
03C06D7E5D4990C7FC4A6E7EA2717E13034A811707A201076F7E5C717EA2130F4A6E7FA2
727E131F5C727E133F854A82D9FFE04B7EB600E0010FB512E05FA252447CC353>75
D<91B612F8A3020001E0C8FC6F5A4B5AA293C9FCA35C5DA314035DA314075DA3140F5DA3
141F5DA3143F5DA3147F5DA314FF92CAFCA35B4A16C0A21801010317804A15031900A201
075E4A1506180E181E010F161C4A153C18381878011F16F84A4A5A1703013F150F4D5A4A
14FF01FF02075BB9FCA2603A447CC342>I<91B500C0933803FFFE63630200F1FE00DB6F
E0EE1BF803EF171F1B3703CFEF67F0A21BCF0201EF018F038F60DB87F0ED030F1B1F0203
17060307040C5BA2F2183F020717300206616F6C15601B7F020E17C0020CDC018090C7FC
A24F485A021C16060218606F6C5C1A0102381618023004305BA2F16003027016C0026060
6F6CEB01801A0702E0ED03004A03065CA24E130F01015E4A60047F5B1A1F01035E91C74A
5CA24D48133F494BC7FC010661EE3F861A7F010E158C010C039892C8FCA205B05C011C15
E001186001386E5A190101785D01FC92C75BD803FFEF07FEB500F8011E0107B512FE161C
160C5F447BC35E>I<91B500C0020FB5128082A2DA007F9239007FE00070ED1F8074C7FC
DBEFF8150E15CF03C7160C70151C1401DB83FE1518A2DB81FF1538140303001630831A70
4A6D7E02061760163F7114E0140E020C6D6C5CA2706C1301141C021801075D8319030238
6D7E023094C8FC1601715B147002606DEB8006A294387FC00E14E04A023F130C18E0191C
0101ED1FF04A1618170FF0F838130391C83807FC30A2943803FE705B01060301136018FF
19E0010E81010C5F187FA2131C0118705A1338181F137801FC70C9FCEA03FFB512F88418
0651447CC34E>I<91B712FEF0FFE019F802009039C0000FFE6F48EB01FF03FF9138007F
80F13FC093C8EA1FE0A24AEE0FF0A25D1AF81403A25DA21407F11FF05DA2020FEE3FE0A2
4B16C0197F021F1780F1FF004B4A5A4E5A023F4B5A4E5A4BEC3FC006FFC7FC027FEC07FC
92B612F018800380CAFC14FFA292CBFCA25BA25CA21303A25CA21307A25CA2130FA25CA2
131FA25CA2133FA25CEBFFE0B612E0A345447CC33F>80 D<EE03FF047F13F0923901FC01
FC92390FE0007FDB3F80EB1FC003FEC76C7EDA01F8EC03F0DA07F0814A486E7EDA1F806E
7E027FC9FC02FE167F495A4948EE3F801307494817C04A161F495A013F18E0495AA249CA
FC485A1AF012035B12075B120F5B001F19E0193F5B123FA34848EF7FC0A31A8019FF485A
1A0060A24E5AA2614E5AA2007F4D5AA24E5A4E5A61003F021F147F6DD9FFC049C7FC913A
01E0E001FE001F90260380705B913A07003003F8260FE00690383807F00007010E903818
0FE0D9F00CEC1F80D803F84BC8FC0001011CEB1CFE2600FC18EB1DF8017EEC1FF0D93F9C
14C0D90FEC017FC9FC902703FE03FC14600100B5FC91260FFE1C14E091C7001E5C1801A2
4E5A043F1307180FDD803FC7FC71B4FCEFFFFE705BA26060705B60040390C8FCEE00FC44
597CC54D>I<48BA12C05AA291C7D980001380D807F092C7121F4949150F0180170748C7
5B1903120E48020316005E12181238003014074C5C00701806126000E0140F485DA3C800
1F92C7FC5EA3153F5EA3157F5EA315FF93CAFCA35C5DA314035DA314075DA3140F5DA314
1F5DA3143F5DA2147FA214FF01037F001FB612FCA25E42447EC339>84
D<B6D88003B500FC0107B5FC5E03005D000301C09026001FFEC8EA7FE06C90C8D80FF8ED
3F80F41F001C1E1C1C17076C1B1864050F16701C60051F5EA205374B5AA205674BC7FC17
E705C71506DC0187150E72140C6ED903075DA2017FDA06035DA2040C5E041C16E004185E
04304B5AA204604BC8FCA204C01506150104805DDB03005D84DAC0065E1701013F495EA2
4B5E4B1501624B4BC9FCA24B1506A2DAC1805D02C3161C92C7141802C66F5A14E602EC5E
83D91FF85EA24A5E4A93CAFCA24A5DA24A5DA291C95AA2011E5E011C5E010C166060467B
C35C>87 D<EC0FC0EC7FF0903901F8381C903907E01C7E90380FC00E90393F0007FE496D
5A13FE485A49130100035D485A120F491303001F5DA2485A1507007F5D5BA2150F00FF5D
90C7FCA2151F5E5AA2033F1330EE00701760A24B13E017C015FE007E130102031301003E
D9073E1380003F010E13036C011C14006C6C486C5A3A07C0F00F0E3A01FFC007FC3A007F
0001F02C2D7CAB33>97 D<EE01FC16FFA3EE03F816011603A217F0A21607A217E0A2160F
A217C0A2161FA21780A2163FA21700EC0FC091387FF07F903801F838903907E01C7E9038
0FC00E90393F0007FE49130301FE5C485A491301120348485C120F491303121F5E485A15
07127F495CA2150F12FF90C75BA2151FA2485DA2033F13301770EE0060A24B13E017C015
FE007E130102031301003ED9073E1380003F010E13036C011C14006C6C486C5A3A07C0F0
0F0E3A01FFC007FC3A007F0001F02E467CC433>100 D<EE07E0EE1FF8EE7C1CEEF80E92
3801F03E923803E07F17FFED07E116C117FE92380FC0FC177817004B5AA4153F93C7FCA4
5D157EA491B61280A3DA00FCC7FCA314015DA414035DA414075DA4140F5DA5141F5DA414
3F92C8FCA45C147EA45CA45C1301A25CA2EA1C03007F5B12FF5C13075C4848C9FC12F8EA
601EEA783CEA1FF0EA07C0305A7BC530>102 D<157E913803FF8091390FC1E0E091391F
0073F0027E13334A133F4948131F010315E04948130F495AA2494814C0133F4A131F137F
91C713805B163F5A491500A25E120349147EA216FEA2495CA21501A25EA2150315070001
5D150F0000141F6D133F017CEB77E090383E01E790381F078F903807FE0FD901F85B90C7
FC151FA25EA2153FA293C7FCA2001C147E007F14FE485C4A5A140348495AEC0FC000F849
5A007C01FEC8FC381FFFF8000313C02C407EAB2F>I<141E143F5C5CA3147E143891C7FC
AE133EEBFF803801C3C0380781E0380601F0120E121CEA180312381230A2EA700700605B
A2EAE00F00C05BEA001F5CA2133F91C7FCA25B137E13FE5BA212015BEC03800003140013
F01207495A1406140E140CEBC01C141814385C00035BEBE1C0C6B45A013EC7FC19437DC1
21>105 D<01F8D903FCEC7F80D803FED91FFF903803FFE0D8071F903B7C0FC00F81F83E
0E0F80E007E01C00FC001C9026C3C0030178137C271807C700D9F0E0137E02CE902601F1
C0133E003801DCDAFB80133F003001D892C7FCD90FF814FF0070495C0060495CA200E049
49485CD8C01F187E4A5C1200040715FE013F6091C75BA2040F14014960017E5D1903041F
5D13FE494B130762043F160E0001060F130C4992C713C0191F4CED801C00031A1849027E
1638F2003004FE167000071A60494A16E0F201C0030192380F0380000FF18700494AEC03
FED80380D90070EC00F84F2D7DAB55>109 D<01F8EB03FCD803FEEB1FFFD8071F90387C
0FC03B0E0F80E007E03A0C07C3C003001CD9C7007F001801CE1301003801DC80003013D8
EB0FF800705B00605BA200E0491303D8C01F5D5C12001607013F5D91C7FCA2160F495D13
7E161F5F13FE49143F94C7FC187000014B136049147E16FE4C13E0000317C049150104F8
1380170300071700495D170EEE781C000FED7C3849EC1FF0D80380EC07C0342D7DAB3A>
I<01F8EB0FC0D803FEEB7FF0D8070FEBF038000E903883C07C3A0C07C701FC001C13CE00
18EBDC03003813D8003013F8D90FF013F800709038E000E0006015005C12E0EAC01F5C12
00A2133F91C8FCA35B137EA313FE5BA312015BA312035BA312075BA3120F5BEA0380262D
7DAB2C>114 D<EC0FF0EC7FFE903901F00F809039078001C049C712E0011E14605BED01
F0491307A201F8EB0FE05B7FED03806D90C7FC7F7F14F86DB47E15E06D13F86D7F01077F
1300EC07FF140081ED3F80151F120E003FEC0F00487EA25D48C7121EA200FC5C12605D00
705C6C495A6CEB07C0260F803FC7FC3803FFFC38007FE0242D7BAB2E>I<141C147EA314
FE5CA313015CA313035CA313075CA2007FB512FCB6FC15F839000FC000A2131F5CA3133F
91C7FCA35B137EA313FE5BA312015BA312035BA21570000714605B15E015C0000F130101
C013801403EC070000071306140E5C6C6C5A000113F03800FFC0013FC7FC1E3F7EBD23>
I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk cmbx12 17.28 32
/Fk 32 119 df<B812C0AD2A0D7EA636>45 D<16F04B7E1507151F153FEC01FF1407147F
010FB5FCB7FCA41487EBF007C7FCB3B3B3B3007FB91280A6395E74DD51>49
D<913801FFF8021FEBFFC091B612F8010315FF010F16C0013F8290267FFC0114F89027FF
E0003F7F4890C7000F7F48486E7FD807F86E148048486E14C048486E14E048486F13F001
FC17F8486C816D17FC6E80B56C16FE8380A219FFA283A36C5BA26C5B6C90C8FCD807FC5D
EA01F0CA14FEA34D13FCA219F85F19F04D13E0A294B512C019804C14004C5B604C5B4C5B
604C13804C90C7FC4C5A4C5A4B13F05F4B13804B90C8FC4B5AED1FF84B5A4B5A4B48143F
4A5B4A48C8FC4A5A4A48157E4A5A4A5AEC7F8092C9FC02FE16FE495A495A4948ED01FCD9
0FC0150749B8FC5B5B90B9FC5A4818F85A5A5A5A5ABAFCA219F0A4405E78DD51>I<92B5
FC020F14F8023F14FF49B712C04916F0010FD9C01F13FC90271FFC00077FD93FE001017F
49486D8049C86C7F484883486C6F7F14C0486D826E806E82487FA4805CA36C5E4A5E6C5B
6C5B6C495E011FC85A90C95CA294B55A614C91C7FC604C5B4C5B4C5B4C5B047F13809226
0FFFFEC8FC020FB512F817E094C9FC17F817FF91C7003F13E0040713F8040113FE707F71
7F7113E085717FA2717F85A285831A80A31AC0EA03FCEA0FFF487F487F487FA2B57EA31A
80A34D14005C7E4A5E5F6C495E49C8485BD81FF85F000F5ED807FE92B55A6C6C6C491480
6C01F0010791C7FC6C9026FF803F5B6D90B65A011F16F0010716C001014BC8FCD9001F14
F0020149C9FC426079DD51>I<F01F804E7E187F18FFA25F5F5F5FA25F5F5FA294B5FC5E
5E5EA25E5EEE3FBFEE7F3FA216FEED01FCED03F8ED07F0A2ED0FE0ED1FC0ED3F8016005D
15FE4A5A4A5AA24A5A4A5A4A5A4A5AA24AC7FC14FE495A5C1303495A495A495A5C133F49
C8FC13FE485AA2485A485A485A5B121F485A48C9FC12FEBCFCA6CA6CEBC000B1037FB8FC
A6485E7CDD51>I<01C0EE01C0D801F8160F01FF167F02F0EC07FFDAFF8090B5FC92B712
8019006060606060606095C7FC17FC5F17E0178004FCC8FC16E09026FC3FFCC9FC91CBFC
ADED3FFE0203B512F0020F14FE023F6E7E91B712E001FDD9E00F7F9027FFFE00037F02F8
01007F02E06EB4FC02806E138091C8FC496F13C04917E07113F0EA00F090C914F8A219FC
83A219FEA419FFA3EA03F0EA0FFC487E487E487FA2B57EA319FEA35C4D13FC6C90C8FC5B
4917F8EA3FF001804B13F06D17E0001F5E6C6C17C06D4B1380D807FC92B512006C6C4A5B
6C6C6C01075B6C01E0011F5BD97FFE90B55A6DB712C0010F93C7FC6D15FC010115F0D900
3F1480020301F0C8FC406078DD51>I<F00FE04E7EA24E7EA34E7EA24E7EA34D7FA24D80
A24D80A34D80A24D80A34D80A2DD7FBF7FA2181F05FF8017FE04016D7FA24D7E04038217
F804076D80A24D7E040F8217E0041F6D80A24D7F043F825F047F6E7FA294C77E4C825E03
016F7FA24C800303845E03076F80A24C80030F845E031F6F80A24C81033F845E037F707F
93B9FCA292BA7EA24A85A203FCC912070203865D020771805D86020F864B82021F865D87
023F864B83027F8692CBFC874A864A840101875C496C728090381FFFC0B700E092B812FE
A66F647BE37A>65 D<4DB5ED03C0057F02F014070407B600FE140F047FDBFFC0131F4BB8
00F0133F030F05FC137F033F9127F8007FFE13FF92B6C73807FF814A02F0020113C30207
02C09138007FE74A91C9001FB5FC023F01FC16074A01F08291B54882490280824991CB7E
49498449498449498449865D49498490B5FC484A84A2484A84A24891CD127FA25A4A1A3F
5AA348491A1FA44899C7FCA25CA3B5FCB07EA380A27EA2F50FC0A26C7FA37E6E1A1F6C1D
80A26C801D3F6C6E1A00A26C6E616D1BFE6D7F6F4E5A7F6D6D4E5A6D6D4E5A6D6D4E5A6D
6E171F6D02E04D5A6E6DEFFF806E01FC4C90C7FC020F01FFEE07FE6E02C0ED1FF8020102
F8ED7FF06E02FF913803FFE0033F02F8013F1380030F91B648C8FC030117F86F6C16E004
071680DC007F02F8C9FC050191CAFC626677E375>67 D<BB12E0F2FF801BF01BFE757E1C
F0D800010280C7000780DF007F13FE080F6D7E0801807480093F7F090F13FC757F757F87
7580767F8A88767F8A888AA2767FA28A881F80A37614C0A41FE0A5881FF0B05214E0A51F
C0A4521480A31F006466A2525BA2525BA2525B666499B55A515C5191C7FC515B515B515B
097F5B50B512C008075C083F91C8FC0707B512FCBD12F01CC051C9FC1BF81B8008E0CAFC
6C627AE17C>I<B912E0A6C702E0C7FCB3B3B3B3AEB912E0A633627CE13C>73
D<B912F8A6D8000102C0CBFCB3B3B1F307E0A5F30FC0A61B1FA31B3F1C80A21B7FA21BFF
A262A262625013006262624FB5FC1907191F4EB6FCBDFC63A553627AE161>76
D<B700C0083FB612F070627097B7FCA37061D800010DF8C7FC70F103EFA202FD6DF107CF
A202FC6DF10F8FA36F6DF01F0FA26F6D183EA26F6D187CA26F6D18F8A36F6DEF01F0A26F
6DEF03E0A26F6DEF07C0A26F6DEF0F80A3706DEE1F00A2706D163EA2706D5EA2706D5EA3
706D4B5AA2706D4B5AA2706D4B5AA2706D4B5AA3716D4AC7FCA2716D143EA2716D5CA271
6D5CA3716D495AA2716D495AA2716D495AA2716D495AA3726D48C8FCA272EBC03EA2726D
5AA2726D5AA372EBF9F0A272EBFFE0A2725CA2725CA37390C9FCA2735AA2735A90381FFF
C0B700F86E480207B812F0A3735AA2735A8C627AE199>I<BA12F8F1FFE01AFEF2FFC01B
F01BFED800010280C76C7F070714C0070014F0747F081F7F747F747F7480A2748089A374
80A389A865A3505CA265A2505C9AC9FC505B505B505B087F5B4FB55A0707148096B548CA
FC93B812F81BC050CBFC621AFF932680000314C0DE007F7F071F13F8737F737F737F7380
8885888688A2747FA688A688A676140FF71F80A374801F3F86771400745E746E5BB96E6E
5B746E485A75EBFE07091F90B55A090715E009015DCF003F91C7FC0A0013FC71647AE178
>82 D<DBFFFCEC01E0020FD9FFE01303027F02FC130749B7130F0107EEC01F011F16F049
D9C007EBF83F4948C7383FFE7FD9FFF8020FB5FC4801E014014849804849153F91C97E48
4882001F834982003F83845B007F187FA2193FA200FF181FA27F190FA27FA26D17078080
806C01F893C7FC80ECFF8015F86CECFFC016FC6CEDFFE017FE6CEEFFE018F86C17FE6C71
7E6C846C846D17F86D836D836D8313036D18806D6C17C0020F17E01401DA000F16F01500
040715F8EE007F1703050014FC183F84060713FE84A2007C8300FC83A2197FA3193F7EA3
1AFC7EA27F1AF86D177F7F1AF06D17FF6D18E06D5E01FF18C06E4B138002E04B130002F8
4B5A02FFED3FFC01CF01E0ECFFF8018301FF010F5B010191B65A6D6C5E48011F93C7FC48
010315FC48D9003F14E048020149C8FC476677E35A>I<913803FFFE027FEBFFF00103B6
12FE010F6F7E4916E090273FFE001F7FD97FE001077FD9FFF801017F486D6D7F717E486D
6E7F85717FA2717FA36C496E7FA26C5B6D5AEB1FC090C9FCA74BB6FC157F0207B7FC147F
49B61207010F14C0013FEBFE004913F048B512C04891C7FC485B4813F85A5C485B5A5CA2
B55AA45FA25F806C5E806C047D7F6EEB01F96C6DD903F1EBFF806C01FED90FE114FF6C90
27FFC07FC01580000191B5487E6C6C4B7E011F02FC130F010302F001011400D9001F90CB
FC49437CC14E>97 D<92380FFFF04AB67E020F15F0023F15FC91B77E01039039FE001FFF
4901F8010113804901E0010713C04901804913E0017F90C7FC49484A13F0A2485B485B5A
5C5A7113E0485B7113C048701380943800FE0095C7FC485BA4B5FCAE7EA280A27EA2806C
18FCA26C6D150119F87E6C6D15036EED07F06C18E06C6D150F6D6DEC1FC06D01E0EC7F80
6D6DECFF00010701FCEB03FE6D9039FFC03FFC010091B512F0023F5D020F1580020102FC
C7FCDA000F13C03E437BC148>99 D<F17FF8050FB5FCA6EF000F8484B3A892380FFF804A
B512F8020F14FE023FECFF8391B712E301039138807FF3499039F8000FFB011F01E00103
B5FC494913004990C87E49488148498148834A815A485BA2485BA25AA3485BA4B5FCAE7E
A46C7FA37EA26C7FA26C5F806C5F6C6D5D6C6D5D017F93B5FC6D6C6C0103806D6D49806D
01F0D91FF7EBFFFE6D9039FE01FFE7010190B612876D6CECFE07021F14F8020314E09127
003FFE00ECC0004F657BE35A>I<92380FFFC04AB512FC020FECFF80023F15E091B712F8
0103D9FE037F499039F0007FFF011F01C0011F7F49496D7F4990C76C7F49486E7F484980
48844A804884485B727E5A5C48717EA35A5C721380A2B5FCA391B9FCA41A0002C0CBFCA6
7EA380A27EA27E6E160FF11F806C183F6C7FF17F006C7F6C6D16FE6C17016D6C4B5A6D6D
4A5A6D01E04A5A6D6DEC3FE0010301FC49B45A6D9026FFC01F90C7FC6D6C90B55A021F15
F8020715E0020092C8FC030713F041437CC14A>I<EE3FFC0307B51280033F14C04AB612
F0020715F84A9038F03FFC4AEB807F913A7FFE00FFFE4A5A4B4813FF4913F05B4913E0A2
4913C0A27013FE4949EB7FFCEF3FF8EF1FF0EF07C094C7FCB0B812C0A6D8001F01C0C8FC
B3B3B0007FB612FCA638657CE431>I<F107F8DB7FFEEC3FFE020FB5D8F001B5FC027FDA
FE03148049B7128F49DCDFFD13C0010FD9F00FEBFFC149D9800114014990C7EBFC034948
6E6C7E4948EC3FFF48496E018113800780130048F0C03E97C7FC48496E7FA34884A96C60
A36C6D4A5BA26C60A26C6D4A90C8FC6D6C4A5A6D6C4A5A6D6D485BDBF00F5B4990B612C0
60D97C7F4AC9FCD9FC0F14F09126007FFECAFC92CCFC1201A47FA27F8014F091B77E18FE
6CEFFFC019F06D17FC19FF6D846D846D846D84013F8490BAFC0003854801E0C712014890
C9000F7F484816014848EE007F4848717E8512FF5B85A56D5F007F616D173F003F616D17
7F6C6C4D5A6C01C003035B6C6D4B5B6C01F8031F5BC601FF92B5C7FC6D01F8011F5B011F
90B712F8010717E0010094C8FC020F15F0DA003F01FCC9FC4A607CC151>I<EB0FE0EB3F
F8497E48B5FCA24880A24880A76C5CA26C91C7FCA238007FFC6D5AEB0FE090C9FCAF9038
07FF80007FB5FCA6C6FC7F7FB3B3AEB712C0A622657BE42C>105
D<903807FF80B6FCA6C6FC7F7FB3A90503B61280A6DD003FEB8000DE0FFCC7FCF01FF04E
5AF0FFC04D5B4D90C8FCEF07FC4D5AEF3FF04D5A4D5A4C90C9FC4C5AEE0FFC4C5A4C5AEE
7FC04C7E03837F03877F158F039F7F03BF7F92B5FC838403FC804B7E03F0804B6C7F4B6C
7F1580707F707F707FA270807080717FA2717F717F717FA2717F717F83867180727F95B5
7EB7D8E00FECFFF0A64C647BE355>107 D<903807FF80B6FCA6C6FC7F7FB3B3B3B3ADB7
12E0A623647BE32C>I<902607FF80D91FFFEEFFF8B691B500F00207EBFF80040702FC02
3F14E0041F02FF91B612F84C6F488193267FE07F6D4801037F922781FE001F9027E00FF0
007FC6DA83F86D9026F01FC06D7F6DD987F06D4A487F6DD98FC0DBF87EC7804C6D027C80
039FC76E488203BEEEFDF003BC6E4A8003FC04FF834B5FA24B5FA24B94C8FCA44B5EB3B2
B7D8F007B7D8803FB612FCA67E417BC087>I<902607FF80EB1FFFB691B512F0040714FC
041F14FF4C8193267FE07F7F922781FE001F7FC6DA83F86D7F6DD987F07F6DD98FC0814C
7F039FC78015BE03BC8003FC825DA25DA25DA45DB3B2B7D8F007B71280A651417BC05A>
I<923807FFE092B6FC020715E0021F15F8027F15FE494848C66C6C7E010701F0010F13E0
4901C001037F49496D7F4990C87F49486F7E49486F7E48496F13804819C04A814819E048
496F13F0A24819F8A348496F13FCA34819FEA4B518FFAD6C19FEA46C6D4B13FCA36C19F8
A26C6D4B13F0A26C19E06C6D4B13C0A26C6D4B13806C6D4B13006D6C4B5A6D6D495B6D6D
495B010701F0010F13E06D01FE017F5B010090B7C7FC023F15FC020715E0020092C8FC03
0713E048437CC151>I<902607FF80EBFFF8B6010FEBFF80047F14F00381B612FC038715
FF038F010114C09227BFF0003F7FC6DAFFC0010F7F6D91C76C7F6D496E7F03F86E7F4B6E
7F4B17804B6F13C0A27313E0A27313F0A21BF885A21BFCA3851BFEAE4F13FCA41BF861A2
1BF0611BE0611BC06F92B512801B006F5C6F4A5B6F4A5B03FF4A5B70495B04E0017F13C0
9226CFFC03B55A03C7B648C7FC03C115F803C015E0041F91C8FC040313E093CBFCB3A3B7
12F0A64F5D7BC05A>I<D90FFFEB0FFCB690383FFF8093B512E04B14F04B14F8923907FC
7FFC92390FE0FFFEC6EC1F806DD93F0113FF6D133E157E157C15F8A215F07013FEA24BEB
7FFCEF3FF8EF0FE04B90C7FCA55DB3B0B712F8A638417BC042>114
D<913A3FFF8007800107B5EAF81F011FECFE7F017F91B5FC48B8FC48EBE0014890C7121F
D80FFC1407D81FF0801600485A007F167F49153FA212FF171FA27F7F7F6D92C7FC13FF14
E014FF6C14F8EDFFC06C15FC16FF6C16C06C16F06C826C826C826C82013F1680010F16C0
1303D9007F15E0020315F0EC001F1500041F13F81607007C150100FC81177F6C163FA217
1F7EA26D16F0A27F173F6D16E06D157F6D16C001FEEDFF806D0203130002C0EB0FFE02FC
EB7FFC01DFB65A010F5DD8FE0315C026F8007F49C7FC48010F13E035437BC140>I<EC07
E0A6140FA5141FA3143FA2147FA214FF5BA25B5B5B5B137F48B5FC000F91B512FEB8FCA5
D8001F01E0C8FCB3AFEF0FC0AC171F6D6D1480A2173F6D16006F5B6D6D137E6D6D5B6DEB
FF836EEBFFF86E5C020F14C002035C9126003FFCC7FC325C7DDA3F>I<902607FFC0ED3F
FEB60207B5FCA6C6EE00076D826D82B3B3A260A360A2607F60183E6D6D147E4E7F6D6D49
48806D6DD907F0ECFF806D01FFEB3FE06D91B55A6E1500021F5C020314F8DA003F018002
F0C7FC51427BC05A>I<B700C00103B512FCA6C66C01C0C8381FFE006D6DED07F0A26D6D
5E190F6D6D5E191F6D606F153F6D95C7FC6F5DA26D6D157E19FE6D6E5C18016E5E701303
6E5E701307A26E6D5C180F6E6D5C181F6E6D5C183F6E93C8FC705BA26E6D13FEA26E6E5A
17816FEBC1F817C36F5C17E76F5C17FFA26F5CA26F5CA26F91C9FCA26F5BA36F5BA2705A
A2705AA2705AA2705A4E417DBF55>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fl cmr10 10.95 13
/Fl 13 122 df<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013C0A3120113
80120313005A120E5A1218123812300B1C798919>44 D<121EEA7F80A2EAFFC0A4EA7F80
A2EA1E000A0A798919>46 D<EB01C013031307131F137FEA07FFB5FC139FEAF81F1200B3
B3ACEB7FF0B612F8A31D3D78BC2D>49 D<EB07FC90383FFF809038F80FE03901E003F839
078001FCD80F007F000E6D7E001E1580D81F80137F486C14C07FA27F5BA2121F6C5AC813
8015FF1600A24A5AA24A5A5DEC07E04A5A023FC7FCEB1FFCECFF809038000FE0EC07F86E
7E6E7E6E7E1680ED7FC0A216E0153FA216F0A2120C123F487E487EA316E0A249137F6CC7
13C01278EDFF807E6C4913006C495A3907C007FC3903F80FF0C6B55A013F1380D907F8C7
FC243F7CBC2D>51 D<150E151E153EA2157EA215FE1401A21403EC077E1406140E141CA2
14381470A214E0EB01C0A2EB0380EB0700A2130E5BA25B5BA25B5B1201485A90C7FC5A12
0E120C121C5AA25A5AB8FCA3C8EAFE00AC4A7E49B6FCA3283E7EBD2D>I<EB03FC90381F
FF8090387C07E09038F001F83901E0007C48487F48487F48C7FCED0F80121E16C0003E14
07A4123FA26DEB0F807F6C6C131F6D140001FC133E6C6C5B9038FF80786C6D5A6CEBF3E0
6CEBFF806C91C7FC133F6D13C06D7F013F13F801787F48486C7E3903E01FFF48486C1380
260F800313C048487E489038007FE0003E143F007E141F007CEC0FF01507481403A31501
A46C15E0007C1403A2007E15C06C14076CEC0F806DEB1F006C6C133ED807F05B3901FC03
F86CB512E0011F1380D903FCC7FC243F7CBC2D>56 D<EB03FCEB1FFF90387E07C09038FC
03F048486C7E48486C7E4848137C000F147E4848137F81003F15805B007F15C0A2151F12
FF16E0A516F0A5127F153FA36C7EA2001F147F120F6C6C13FF6D13DF000313013900F803
9F90387E0F1FD91FFE13E0EB07F090C7FCA2ED3FC0A41680157FD80F801400487E486C13
FEA24A5A5D49485AEB8007391E000FE0001F495A260FC07FC7FC3803FFFE6C13F838003F
C0243F7CBC2D>I<B500C093B512C0A300016D4BEBE000D8007F1880D977F0ED03BFA3D9
73F8ED073FA3D971FC150EA2D970FE151CA3027F1538A36E6C1470A36E6C14E0A26E6CEB
01C0A36E6CEB0380A36E6CEB0700A26E6C130EA36E6C5BA3037F5BA26F6C5AA36F6C5AA3
92380FE1C0A3923807F380A26FB4C7FCA36F5AA213F8486C6D5AD807FFEFFFE0B500F801
78017FEBFFC0A34A3E7CBD53>77 D<EB0FF8EBFFFE3903F01F8039078007E0000F6D7E90
38E001F8D81FF07F6E7EA3157F6C5AEA0380C8FCA4EC1FFF0103B5FC90381FF87FEB7F80
3801FC00EA07F8EA0FE0485A485AA248C7FCEE038012FEA315FFA3007F5BEC03BF3B3F80
071F8700261FC00E13CF3A07F03C0FFE3A01FFF807FC3A003FC001F0292A7DA82D>97
D<EA01FC12FFA3120712031201B3B3B1487EB512F8A3153F7DBE1A>108
D<14FF010713E090381F81F890387E007E01F8131F4848EB0F804848EB07C04848EB03E0
000F15F04848EB01F8A2003F15FCA248C812FEA44815FFA96C15FEA36C6CEB01FCA3001F
15F86C6CEB03F0A26C6CEB07E06C6CEB0FC06C6CEB1F80D8007EEB7E0090383F81FC9038
0FFFF0010090C7FC282A7EA82D>111 D<B539E00FFFE0A32707FE000313006C48EB00FC
5E00015D7F00005DA26D13016D5CA26D6C485AA2ECC007011F91C7FCA290380FE00EA2EC
F01E0107131CA26D6C5AA2ECFC7801011370A2ECFEF001005BA2EC7FC0A36E5AA26EC8FC
A3140E2B287EA630>118 D<B539E00FFFE0A32707FE000313006C48EB01FC6F5A00015D
7F00005DA2017F495AA2EC8003013F5CA26D6C48C7FCA26E5A010F130EA26D6C5AA2ECF8
3C01031338A26D6C5AA2ECFEF001005BA2EC7FC0A36E5AA36EC8FCA2140EA2141E141C14
3C1438A2147800181370127EB45BA2495AA248485AD87E07C9FCEA780EEA3C3CEA1FF8EA
07E02B3A7EA630>121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fm cmti10 10.95 14
/Fm 14 117 df<49B812F8A390260003FEC7121F18074B14031801F000F014075DA3140F
5D19E0A2141F4B1338A2EF7801023F027013C04B91C7FCA217F0027F5CED80011603160F
91B65AA3ED001F49EC07805CA3010392C8FC5CF003804C13070107020E14005C93C75A18
0E010F161E4A151C183CA2011F5E5C60A2013F15014A4A5A1707017F150F4D5A4A147F01
FF913807FF80B9FCA295C7FC3D3E7BBD3E>69 D<49B6FC5BA2D9000313005D5DA314075D
A3140F5DA3141F5DA3143F5DA3147F5DA314FF92C7FCA35B5CA313035CA313075CA3130F
5CA3131F5CA3133F5CA2137FA25C497EB67EA3283E7BBD23>73 D<49B5933807FFFC4960
62D90003F0FC00505ADBBF805E1A771AEF1407033F923801CFE0A2F1039F020FEE071F02
0E606F6C140E1A3F021E161C021C04385BA2F1707F143C023804E090C7FCF001C0629126
780FE0495A02705FF00700F00E0114F002E0031C5BA2F03803010116704A6C6C5D18E019
070103ED01C00280DA03805BA2943807000F13070200020E5C5FDB03F8141F495D010E4B
5CA24D133F131E011CDAF9C05CEEFB80197F013C6DB4C7FC013895C8FC5E01784A5C13F8
486C4A5CD807FE4C7EB500F04948B512FE16E01500563E7BBD52>77
D<48B9FCA25A903AFE001FF00101F89138E0007FD807E0163E49013F141E5B48C75BA200
1E147FA2001C4B131C123C003814FFA2007892C7FC12704A153C00F01738485CC7160014
03A25DA21407A25DA2140FA25DA2141FA25DA2143FA25DA2147FA25DA214FFA292C9FCA2
5BA25CA21303A25CEB0FFE003FB67E5AA2383D71BC41>84 D<147E49B47E903907C1C380
90391F80EFC090383F00FF017E137F4914804848133F485AA248481400120F5B001F5C15
7E485AA215FE007F5C90C7FCA21401485C5AA21403EDF0385AA21407EDE078020F137012
7C021F13F0007E013F13E0003E137FECF3E1261F01E313C03A0F8781E3803A03FF00FF00
D800FC133E252977A72E>97 D<EC1FC0ECFFF0903803F03C903807C01E90381F800E9038
3F000F017E133F4913FF485A485A000714FE5B000F14FC48481300A2485AA3127F90C8FC
A35A5AA6481403007E1407150F151E003E143C15786C14F0EC03E0390F800F803903E07E
003801FFF838003FC0202977A72A>99 D<EC3F80903801FFE0903807E0F890381F803CEB
3E0001FC131E485A485A12074848133E49133C121F4848137C15F8EC03F0397F000FE0EC
FF809038FFFC00B512C048C8FCA45AA61506150E151E007C143C15786C14F0EC01E06CEB
07C0390F801F003807C0FC3801FFF038007F801F2976A72A>101
D<EC03F0EC0FFC91383E0E1C9138FC077E903901F003FE1303903807E001D90FC013FCEB
1F80A2EB3F004914F8137E01FE1303A2484814F0A2150712034914E0A2150F12074914C0
A2151FA216805B153F1203ED7F006D5BA200015B0000495A9038F80F7E90387C1EFEEB1F
F8903807E0FC90C7FC1401A25DA21403A25D001C1307007F5C48130F5D4A5A4AC7FC4813
7E00F85B387C03F0381FFFC0D803FEC8FC273B7CA72A>103 D<1478EB01FCA21303A314
F8EB00E01400AD137C48B4FC38038F80EA0707000E13C0121E121CEA3C0F1238A2EA781F
00701380A2EAF03F140012005B137E13FE5BA212015BA212035B1438120713E0000F1378
EBC070A214F0EB80E0A2EB81C01383148038078700EA03FEEA00F8163E79BC1C>105
D<D801F0EB3F803A07FC01FFE03A0F3E07C1F83A0E1F0F00FC001E011C137C001C49137E
003C13F012385C38783FC012705C91C7FC00F015FE495CEA007EA2150101FE5C5BA21503
00015D5B15075E0003020F13704914C0A2031F13F00007ED80E05B1681EE01C0120F49EC
0380A2EE0700001FEC0F0E49EB07FC0007C7EA01F02C2979A733>110
D<EC1FC0ECFFF8903803F07C90380FC01FEB1F8090393F000F80017E14C0491307484814
E0485A12075B000F15F0485AA2485AA2ED0FE0127F90C7FCA2151F4815C05AA2ED3F80A2
ED7F00A248147E007C5C007E13015D4A5A003E495A6C495A4A5A260F803EC7FC3807C0FC
3801FFF038003F80242977A72E>I<D801F013FC3A07FC07FF803A0F3E0F03C0260E1F1C
13E0001EEB380F001C1370003CEBE01F123814C0D8783F14C00070903880070092C7FC91
C8FC12F05BEA007EA313FE5BA312015BA312035BA312075BA3120F5BA3121F5B0007C9FC
232979A726>114 D<EC7F80903801FFE0903807C0F890381F003C013E131C013C131E01
7C133E49137E15FEA2000114FCA215706D13007FEBFFC014FC6C13FF15806D13C06D13E0
010F13F01300140F14071403120C123F387F80011403D8FF0013E0A300FCEB07C000F0EB
0F8012700078EB1F006C133C381F01F83807FFE0C690C7FC1F297AA725>I<EB01C0EB03
F01307A25CA2130FA25CA2131FA25CA2133FA291C7FCA2007FB51280B6FC1500D8007EC7
FC13FEA25BA21201A25BA21203A25BA21207A25BA2120FA25BA2121F141C1380A2003F13
3C1438EB0078147014F05C495AEA1F03495A6C48C7FCEA07FCEA01F0193A78B81E>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fn cmbx12 12 34
/Fn 34 122 df<B612F8A91D097F9A25>45 D<EA07C0EA1FF0EA3FF8EA7FFCEAFFFEA7EA
7FFCEA3FF8EA1FF0EA07C00F0F788E1F>I<ECFFE0010F13FE013F6D7E90B612E0000315
F82607FC0313FE3A0FE0007FFFD81F806D138048C7000F13C0488001C015E001F07F00FF
6E13F07F17F881A46C5A6C5A6C5AC9FC17F05DA217E05D17C04B13804B1300A2ED1FFC4B
5A5E4B5A4B5A4A90C7FC4A5A4A5AEC0FF04A5AEC3F804AC7127814FE495A494814F8D907
E014F0495A495A49C8FC017C140149140348B7FC4816E05A5A5A5A5AB8FC17C0A42D417B
C038>50 D<ECFFF0010713FF011F14C0017F14F049C66C7ED803F8EB3FFED807E06D7E81
D80FF86D138013FE001F16C07FA66C5A6C4815806C485BC814005D5E4B5A4B5A4B5A4A5B
020F1380902607FFFEC7FC15F815FF16C090C713F0ED3FFCED0FFEEEFF80816F13C017E0
A26F13F0A217F8A3EA0FC0EA3FF0487EA2487EA217F0A25D17E06C5A494913C05BD83F80
491380D81FF0491300D80FFEEBFFFE6CB612F800015D6C6C14C0011F49C7FC010113E02D
427BC038>I<163FA25E5E5D5DA25D5D5D5DA25D92B5FCEC01F7EC03E7140715C7EC0F87
EC1F07143E147E147C14F8EB01F0EB03E0130714C0EB0F80EB1F00133E5BA25B485A485A
485A120F5B48C7FC123E5A12FCB91280A5C8000F90C7FCAC027FB61280A531417DC038>
I<0007150301E0143F01FFEB07FF91B6FC5E5E5E5E5E16804BC7FC5D15E092C8FC01C0C9
FCAAEC3FF001C1B5FC01C714C001DF14F09039FFE03FFC9138000FFE01FC6D7E01F06D13
804915C0497F6C4815E0C8FC6F13F0A317F8A4EA0F80EA3FE0487E12FF7FA317F05B5D6C
4815E05B007EC74813C0123E003F4A1380D81FC0491300D80FF0495AD807FEEBFFFC6CB6
12F0C65D013F1480010F01FCC7FC010113C02D427BC038>I<EC7FF0903807FFFE011F6D
7E017F14E09039FFE03FF0489038800FF848496C7E48488048486D7E001F80003F1680A2
484815C08117E0A212FF17F0A617F8A45D127FA3003F5CA26C7E5D6C6C5B12076C6C133E
6CEBC07C6CEBFFF8013F5B010F01C013F00101130090C8FCA217E05DA2EA03C0D80FF015
C0487E486C491380A217004B5A150F5E49495A6C48495A01C0EBFFE0260FF0035B6CB65A
6C4AC7FC6C14F86C6C13E0D907FEC8FC2D427BC038>57 D<EE1F80A24C7EA24C7EA34C7E
A24B7FA34B7FA24B7FA34B7F169F031F80161F82033F80ED3E07037E80157C8203FC804B
7E02018115F0820203814B137F0207815D173F020F814B7F021F8292C77EA24A82023E80
027E82027FB7FCA291B87EA2498302F0C8FCA20103834A157F0107834A153FA249488284
011F8491C97E4984133E017E82B6020FB612F0A54C457CC455>65
D<DCFFF01470031F01FF14F04AB6EAE0010207EDF803023FEDFE0791B539E001FF0F4949
C7EA3F9F010701F0EC0FFF4901C0804990C87E4948814948814948167F4849163F484916
1F5A4A160F485B19074890CAFC19035A5BA2007F1801A34994C7FC12FFAE127F7F1AF0A2
123FA27F6C18011AE06C7F19036C6D17C06E16077E6C6DEE0F806C6DEE1F006D6C5E6D6C
167E6D6C6C5D6D6D4A5A6D01F0EC07F0010101FEEC1FE06D903AFFF001FF80023F90B6C7
FC020715FC020115F0DA001F1480030001F8C8FC44467AC451>67
D<BA12F8A485D8001F90C71201EF003F180F180318011800A2197E193EA3191EA21778A2
85A405F890C7FCA316011603161F92B5FCA5ED001F160316011600A2F101E01778A2F103
C0A494C7FC1907A21A80A2190FA2191FA2193FF17F0061601807181F4DB5FCBBFC61A443
447DC34A>69 D<BA1280A419C026003FFEC7121F1701EF007F183F181F180F180719E018
03A31801A3EE01E0F000F0A419001603A31607160F167F91B6FCA59138FE007F160F1607
1603A31601A693C9FCAFB712F0A53C447CC346>I<DAFFE0131C010701FE133C013F9038
FF807C90B6EAE0FC4815F9489038801FFF3907FC00014848EB007F4848143F4848140F49
1407007F15035B1601160012FF177CA27FA26D153C7F7F6D92C7FC6C7EEBFFE014FE6CEB
FFF015FF6C15E016FC6C816C6F7E6C826C826C6C81011F810107811300020F8014000307
7FED007F82040F1380828212F082A282A27EA218007EA26C5D6C5E6D14036D5D6D140701
F84A5A01FFEC3FF002F8EBFFE0486CB65AD8FC1F92C7FCD8F80714FC48C614F048010713
8031467AC43E>83 D<B792B6FCA526003FFECAEAFC00806D606F15016D608119036D606F
15076D606F150F6D6081191F6D6D93C7FC61027F163E6F157E023F167C8119FC6E6D5C18
016E5E7013036E5E8218076E6D5C180F6E5E70131F6E93C8FC705B037F143E82187E033F
147C7013FC6F5C17816F5C17C117C36F5C17E76F5C17FF6F5CA36F91C9FCA2705AA2705A
A3705AA2705AA2705AA250457EC355>86 D<903801FFE0011F13FE017F6D7E48B612E03A
03FE007FF84848EB1FFC6D6D7E486C6D7EA26F7FA36F7F6C5A6C5AEA00F090C7FCA40203
B5FC91B6FC1307013F13F19038FFFC01000313E0000F1380381FFE00485A5B127F5B12FF
5BA35DA26D5B6C6C5B4B13F0D83FFE013EEBFFC03A1FFF80FC7F0007EBFFF86CECE01FC6
6CEB8007D90FFCC9FC322F7DAD36>97 D<EB7FC0B5FCA512037EB1ED0FF892B57E02C314
E002CF14F89139DFC03FFC9139FF000FFE02FCEB03FF4A6D13804A15C04A6D13E05CEF7F
F0A218F8173FA318FCAC18F8A2177F18F0A3EFFFE06E15C06E5B6E491380027C49130049
6C495A903AFC1FC07FFC496CB512F0D9F00314C049C691C7FCC8EA1FF036467DC43E>I<
EC3FFC49B512C0010F14F0013F14FC90397FF003FE9039FFC001FF0003495A4849481380
5B120F485AA2485A6F1300007F6E5AED00784991C7FCA212FFAC6C7EA3123F6DEC03C0A2
6C6C1407000F16806D140F6C6DEB1F006C6D133E6C01F05B3A007FFC03F86DB55A010F14
C0010391C7FC9038003FF82A2F7CAD32>I<EE03FEED07FFA5ED001F160FB1EC3FE09038
03FFFC010FEBFF8F013F14CF9039FFF807FF48EBC00148903880007F4890C7123F484814
1F49140F121F485AA3127F5BA212FFAC127FA37F123FA26C6C141FA26C6C143F0007157F
6C6C91B5FC6CD9C00314FC6C9038F01FEF6DB5128F011FEBFE0F010713F89026007FC0EB
F80036467CC43E>I<EC3FF80103B57E010F14E0013F8090397FF83FF89039FFC007FC48
496C7E48496C7E48486D1380485A001FED7FC05B003FED3FE0A2127F5B17F0161F12FFA2
90B7FCA401F0C9FCA5127FA27FA2123F17F06C7E16016C6C15E06C6C14036C6DEB07C06C
6DEB0F806C01F0EB3F0090397FFE01FE011FB55A010714F0010114C09026001FFEC7FC2C
2F7DAD33>I<EDFF80020F13E0027F13F049B512F849EB8FFC90390FFE0FFE90381FFC1F
14F8133FEB7FF0A2ED0FFCEBFFE0ED03F0ED00C01600ABB612F8A5C601E0C7FCB3B0007F
EBFFE0A527467DC522>I<DAFFE0137E010F9039FE03FF80013FEBFF8F90B812C048D9C0
7F133F489038001FF84848EB0FFC4848903907FE1F80001F9238FF0F00496D90C7FCA200
3F82A8001F93C7FCA26D5B000F5D6C6C495A6C6C495A6C9038C07FF04890B55A1680D807
8F49C8FC018013E0000F90CAFCA47F7F7F90B612C016FC6CEDFF8017E06C826C16FC7E00
0382000F82D81FF0C77ED83FC014074848020113808248C9FC177FA46D15FF007F17006D
5C6C6C4A5A6C6C4A5AD80FFEEC3FF83B07FFC001FFF0000190B612C06C6C92C7FC010F14
F8D9007F90C8FC32427DAC38>I<EB7FC0B5FCA512037EB1ED07FE92383FFF8092B512E0
02C114F89139C7F03FFC9138CF801F9139DF000FFE14DE14FC4A6D7E5CA25CA35CB3A7B6
0083B512FEA537457CC43E>I<137C48B4FC4813804813C0A24813E0A56C13C0A26C1380
6C1300EA007C90C7FCAAEB7FC0EA7FFFA512037EB3AFB6FCA518467CC520>I<EB7FC0B5
FCA512037EB3B3B3A3B61280A519457CC420>108 D<90277F8007FEEC0FFCB590263FFF
C090387FFF8092B5D8F001B512E002816E4880913D87F01FFC0FE03FF8913D8FC00FFE1F
801FFC0003D99F009026FF3E007F6C019E6D013C130F02BC5D02F86D496D7EA24A5D4A5D
A34A5DB3A7B60081B60003B512FEA5572D7CAC5E>I<90397F8007FEB590383FFF8092B5
12E0028114F8913987F03FFC91388F801F000390399F000FFE6C139E14BC02F86D7E5CA2
5CA35CB3A7B60083B512FEA5372D7CAC3E>I<EC1FFC49B512C0010714F0011F14FC9039
7FF80FFF9026FFC0017F48496C7F4848C7EA3FE000078248486E7E49140F001F82A2003F
82491407007F82A400FF1780AA007F1700A46C6C4A5AA2001F5E6D141F000F5E6C6C4A5A
A26C6C6CEBFFE06C6D485B27007FF80F90C7FC6DB55A010F14F8010114C09026001FFCC8
FC312F7DAD38>I<90397FC00FF8B590B57E02C314E002CF14F89139DFC03FFC9139FF00
1FFE000301FCEB07FF6C496D13804A15C04A6D13E05C7013F0A2EF7FF8A4EF3FFCACEF7F
F8A318F017FFA24C13E06E15C06E5B6E4913806E4913006E495A9139DFC07FFC02CFB512
F002C314C002C091C7FCED1FF092C9FCADB67EA536407DAC3E>I<90387F807FB53881FF
E0028313F0028F13F8ED8FFC91389F1FFE000313BE6C13BC14F8A214F0ED0FFC9138E007
F8ED01E092C7FCA35CB3A5B612E0A5272D7DAC2E>114 D<90391FFC038090B512870003
14FF120F381FF003383FC00049133F48C7121F127E00FE140FA215077EA27F01E090C7FC
13FE387FFFF014FF6C14C015F06C14FC6C800003806C15806C7E010F14C0EB003F020313
E0140000F0143FA26C141F150FA27EA26C15C06C141FA26DEB3F8001E0EB7F009038F803
FE90B55A00FC5CD8F03F13E026E007FEC7FC232F7CAD2C>I<EB01E0A51303A41307A213
0FA2131FA2133F137F13FF1203000F90B51280B7FCA4C601E0C7FCB3A3ED01E0A9150302
F013C0137F150790393FF80F8090391FFC1F006DB5FC6D13FC01015B9038003FE023407E
BE2C>I<D97FC049B4FCB50103B5FCA50003EC000F6C81B3A85EA25EA25E7E6E49138001
7FD901F713FE9138F807E76DB512C7010F1407010313FE9026007FF0EBFC00372E7CAC3E
>I<B6903803FFFCA5000101E09038003E006C163C80017F5D8017F8013F5D6E1301011F
5D6E1303010F5D6E13076D5DED800F6D92C7FC15C05E6DEBE01E163E6D143CEDF07C027F
1378EDF8F8023F5B15FD021F5B15FF6E5BA36E5BA26E90C8FCA26E5AA26E5AA21578362C
7EAB3B>I<B500FE90383FFFF0A5C601F0903803E0006D6C495A013F4A5A6D6C49C7FC6E
5B6D6C137E6DEB807C6D6D5A6DEBC1F0EDE3E06DEBF7C06EB45A806E90C8FC5D6E7E6E7F
6E7FA24A7F4A7F8291381F3FFCEC3E1F027C7F4A6C7E49486C7F01036D7F49487E02C080
49486C7F49C76C7E013E6E7E017E141FB500E090B512FCA5362C7EAB3B>120
D<B6903803FFFCA5000101E09038003E006C163C80017F5D8017F8013F5D6E1301011F5D
6E1303010F5D6E13076D5DED800F6D92C7FC15C05E6DEBE01E163E6D143CEDF07C027F13
78EDF8F8023F5B15FD021F5B15FF6E5BA36E5BA26E90C8FCA26E5AA26E5AA21578A215F8
5D14015D001F1303D83F805B387FC007D8FFE05B140F92C9FC5C143E495A387FC1F8EB07
F06CB45A6C5B000790CAFCEA01FC36407EAB3B>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fo cmti12 12 40
/Fo 40 122 df<EF7FF80407B5FC93391FC00FC093393E0001E004FCEB00F04B4813014B
4813075E0307140FA24B5A19E0031FEC03804C90C7FCA3153F93C9FCA45D157EA415FE91
B8FCA260DA00FCC7127E020115FE4B5CA317016014035D170360A214074B130760A3020F
140F4B5CA3171F021F5D5DA2053F13E01801023F16C092C7FCA2EF7F03057E13805C027E
15071900173E180E02FEEC1E1E4AEC1F1CEF07F8EF01E094C8FC495AA35C1303A2001C5B
127FEAFF075CA2495A00FE90CBFCEAF81FEA701EEA783CEA1FF0EA07C03C5A83C537>12
D<13F0EA03FC1207A2EA0FFEA4EA07FCEA03CCEA000C131C1318A2133813301370136013
E0EA01C013801203EA0700120E5A5A5A5A5A0F1D7A891E>44 D<007FB5FCB6FCA214FEA2
1805789723>I<120FEA3FC0127FA212FFA31380EA7F00123C0A0A76891E>I<ED3FC09138
01FFF0913807C07C4AC67E021CEB1F800278130F4AEB07C0494814E04A1303494814F013
0749C7FCEB0E06D91E0714F8EB1C03133C1338137813704A1307D9F00614F013E0140E02
0C130F0001011C14E0EBC0180238131F4A14C06C6C48EB3F80D9E1C0137FD97F80140001
3EC712FE90C7485A4B5A4B5A4B5AED1F804BC7FC15FC4A5AEC03E0EC0FC0023FC8FC147C
EB01F0495AEB0780011FC9FC133E49EC03805B49140748481500485A48485C90C8121E5A
001E5D001C157CD83FFC5C9038FFC0013A7C0FFC07F0D87803B55AEA700126F0007F5B48
6D90C7FCEC0FFEEC03F82D4478C132>50 D<ED03FCED1FFF037F13C0913801FE07913903
F001E091380FE00091381F800391383F000F027E131F5C495A495A010715C04948EB0700
4A90C7FC131F495AA249C9FCA213FE1201A2485AEC07F09038F83FFC0007EB781F9039F9
E00F803A0FFB8007C0EBF70001FE80491303001F815B5B82485AA3491307127F5BA2150F
5E90C7FCA2151F485DA25A4B5AA2007E5D157F93C7FC5D5D4A5A003E495A003F5C4A5A6C
6C485A000FEB3F80D9C0FEC8FC3803FFFC6C13F038007F802B4475C132>54
D<130FEB1FC0133FEB7FE013FFA214C0EB7F801400131E90C7FCB3A5120FEA3FC0127FA2
12FFA35B6CC7FC123C132B76AA1E>58 D<EF03801707A24D7EA2171FA2173F177FA217FF
A25EA2EE03BF1607173F160F160E161C841638171F167016F016E0ED01C0A2ED0380A2ED
0700A2150E151E151C5D845D170F5D14015D14035D4AC7FC92B6FC5CA2021CC7120F143C
14385CA24A81A249481407A2495A130791C8FC130E131EA25B137C13FC00014C7ED807FE
151FB500E00107B512F8A219F03D477BC648>65 D<DC0FF8130393B513070307ECC00F92
3A1FF803E01F923A7FC000F81E4BC7EA7C3EDA03FCEC3C7EDA0FF0EC1EFE4A48EC0FFC4A
4814074AC8FC02FE1503494816F8130349481501495A494816F0495A137F5C01FF17E048
90C9FCA2485A19C0485AA2485A95C7FC121F5BA2123F5BA3127F5BA4485AA41838A21878
1870A218F0007F5F1701601703003F5F17076D4BC7FC001F160E171E6C6C5D6D5D00075E
6C6C4A5A6DEC07C06C6C4A5AD8007F023EC8FCD93FC013FC90391FF807F00107B512C001
0191C9FC9038001FF0404872C546>67 D<91B712F818FF19C00201903980003FF06E90C7
EA0FF84AED03FCF000FE4B157FA2F13F800203EE1FC05DF10FE0A214074B16F01907A214
0F5D1AF8A2141F5DA2190F143F5D1AF0A2147F4B151FA302FF17E092C9123FA34918C04A
167F1A80A2010317FF4A1700A24E5A13074A4B5A611807010F5F4A4B5A181F61011F4C5A
4A4BC7FC18FE4D5A013F4B5A4A4A5A4D5A017FED3FC005FFC8FC4AEB03FE01FFEC1FF8B8
12E094C9FC16F845447AC34A>I<91B912C0A30201902680000313806E90C8127F4A163F
191F4B150FA30203EE07005DA314074B5D190EA2140F4B1307A25F021F020E90C7FC5DA2
171E023F141C4B133C177C17FC027FEB03F892B5FCA39139FF8003F0ED00011600A2495D
5CA2160101034B13705C19F061010791C8FC4A1501611803010F5F4A150796C7FC60131F
4A151E183E183C013F167C4A15FC4D5A017F1503EF0FF04A143F01FF913803FFE0B9FCA2
6042447AC342>I<DC0FF81306DCFFFE130E03079038FF801E923A1FF807E03E923A7F80
01F03CDA01FEC7EA787CDA03F8EC3CFCDA0FF0141D4A48EC1FF8DA3F80140F4AC8FCD901
FE1507494816F05C01071603495A494816E0495A137F5C01FF17C04890C9FC5B12031980
485AA2485A95C7FC121F5BA2123F5BA3127F5BA4485A043FB512E0A39339001FF80060A3
60A2007F163F60A3177F003F5F7F121F17FF6D93C7FC000F5D6C6C5C7F6C6C4A5A6C6CEC
1F3E6C6C143ED93FC0EBF81E903A1FF007F01C0107B5EAC00C010149C9FC9038003FF03F
4872C54B>71 D<027FB512E091B6FCA20200EBE000ED7F8015FFA293C7FCA35C5DA31403
5DA314075DA3140F5DA3141F5DA3143F5DA3147F5DA314FF92C8FCA35B5CA313035CA313
075CA3130F5CA3131F5CA2133FA25CEBFFE0B612E0A25D2B447BC326>73
D<91B56C93387FFFC08298B5FC02014DEBC0006E614A5FA203DF4C6CC7FC1A0E63912603
CFE05D038F5F1A381A711407030FEEE1FCA2F101C3020FEE0383020E60F107036F6C1507
021E160E021C60191CF1380F143C023804705BA2F1E01F0278ED01C091267003F85EF003
801A3F02F0ED070002E0030E5CA24E137F130102C04B91C8FC606201036D6C5B02805F4D
5A943803800113070200DA07005BA2050E1303495D010E606F6C5A1907011E5D011C4B5C
A27048130F133C01384B5C017892C7FC191F01F85C486C027E5DD807FE027C4A7EB500F0
0178013FB512C0A216705A447AC357>77 D<91B56C49B512E0A28202009239000FFC00F1
07F0706E5A4A5F15DF705D1907EC03CFDB8FF892C7FCA203875D02077F0303150EA27014
1EEC0F01020E161C826F153C141E021C6E1338167F1978023C800238013F1470A27113F0
0278131F02705E83040F130102F014F84A5E1607EFFC0313014A01035C17FE1807010314
014A02FF90C8FCA2705B0107168F91C8138E177F18DE5B010EED3FDC18FCA2011E151F01
1C5EA2170F133C01386F5A1378A201F81503486C5EEA07FEB500F01401A2604B447AC348
>I<91B712F018FEF0FF800201903980007FE06E90C7EA1FF04AED07F818034B15FCF001
FE1403A24B15FFA21407A25DA2140FF003FE5DA2021F16FC18074B15F8180F023F16F0F0
1FE04B15C0F03F80027FED7F0018FE4BEB03FCEF0FF002FFEC7FC092B6C7FC17F892CAFC
5BA25CA21303A25CA21307A25CA2130FA25CA2131FA25CA2133FA25CA2137FA25C497EB6
7EA340447AC342>80 D<91B77E18F818FE020190398001FF806E90C7EA3FC04AED1FE0F0
0FF04BEC07F8180319FC14034B15FEA314075DA3020FED07FC5DA2F00FF8141F4B15F0F0
1FE0F03FC0023F16804BEC7F0018FEEF03F8027F4A5A4BEB1FC04CB4C7FC92B512F891B6
12E092380003F8EE00FE177F496F7E4A6E7EA28413034A140FA2171F13075CA2173F130F
5CA24D5A131F5CA3013F170E5CA2017FEE801E191C4A163C496C1638B66C90383FC07005
1F13F094380FE1E0CA3803FF80943800FE003F467AC347>82 D<DB03FE130C92390FFF80
1C037FEBE03C9238FE03F8913A03F0007C7C4A48EB3EF84A48131F4A48130F4AC7FC027E
EC07F05C1703495A18E0495AA213074A15C0A3130F1880A28094C7FCA280806D7EECFFE0
15FC6DEBFF806D14F016FC6D14FF023F80020F801403DA003F7F150703007F163F161F16
0FA21607A3120716031607A2485EA2120E160F001E5EA2001F4B5AA2484BC7FC6D143E16
7E6D5C007F4A5A6D495AD87CF0495AD8787CEB1F8027F03F807FC8FC90381FFFFCD8E007
13F039C0007F80364879C537>I<48B912F85AA2913B0007FC001FF0D807F84A130701E0
010F140349160148485C90C71500A2001E021F15E05E121C123C0038143F4C1301007818
C0127000F0147F485DA3C800FF91C7FC93C9FCA35C5DA314035DA314075DA3140F5DA314
1F5DA3143F5DA3147F5DA314FF92CAFCA35B5CA21303A21307497E007FB612C0A25E3D44
6FC346>I<001FB500F090383FFFFCA326003FF0C7000113806D48913800FE00013F167C
18785C187018F0017F5E5CA2170101FF5E91C8FCA21703485F5BA21707000394C7FC5BA2
5F0007160E5BA2171E120F49151CA2173C121F491538A21778123F491570A217F0127F49
5DA2160100FF5E90C8FCA216035F16074893C8FC5E160E161E5E007E1538007F15785E6C
4A5A6D495A001F4A5A6D49C9FC6C6C133E6C6C13F83903FC07F0C6B512C0013F90CAFCEB
07F83E466DC348>I<EC1F80EC7FE0903901F07070903907C039F890380F801D90381F00
1F013E6D5A137E5B484813075E485A120749130F000F5DA2485A151F003F5D5BA2153F00
7F92C7FC90C7FCA25D157E12FEA29238FE0380EDFC071700A2007E13015E913803F80E14
07003E010F131E161C6C131C02385B3A0F80F078783A07C3E07C703A01FF801FE03A007E
000780292D76AB32>97 D<EB0FE0EA07FFA338001FC0130F131FA25CA3133F91C8FCA35B
137EA313FE5BA312015BEC1F80EC7FE03903F9E0F89038F3C07C9038F7003E13FE48487F
5BA2491480485AA25BA2121F5BA2153F123F90C7FCA2157F481500127EA25D5D5AA24A5A
A24A5AA2007C5C4A5A140F5D4A5A003C49C7FC003E137E001E5B6C485A380783E03803FF
80C648C8FC214676C42D>I<EC0FE0EC7FF8903801F81E903807E00F90390F8007809038
1F0003017E14C049131F0001143F5B4848EB7F801207485AED3E00484890C7FCA2485AA2
127F90C9FCA35A5AA45AA5ED0180ED03C0ED0780A2007CEC0F00007E141E003E147C15F0
6CEB03E0390F800F802607C07EC7FC3801FFF838007FC0222D75AB2D>I<EE07F0ED03FF
A39238000FE01607160FA217C0A2161FA21780A2163FA21700A25EA2167EA216FEA25EEC
1F80EC7FE1903801F071903907C039F890380F801D90381F001F013E130F017E5C5B4848
1307A248485C120749130F120F5E485A151F123F495CA2153F127F90C790C7FCA25DA200
FE147EA29238FE0380160703FC1300A2007E13015E913803F80E1407003E010F131E161C
6C131C02385B3A0F80F078783A07C3E07C703A01FF801FE03A007E0007802C4676C432>
I<EC0FE0EC7FF8903801F83E903807C00F90391F800780EB3F00017E14C0491303485A48
481307000715805B000F140F484814005D4848133E15FCEC07F0007FEBFFC0D9FFFEC7FC
14C090C9FC5A5AA55AA4ED0180ED03C0007CEC0780A2007EEC0F00003E141E157C6C14F0
6CEB03E03907800F802603C07EC7FC3801FFF838003FC0222D75AB2D>I<EE0F80EE3FE0
EEF870923801F038923803E0F8923807E1FC16C3ED0FC7A2EE87F892381F83F0EE81E0EE
8000153F93C7FCA45D157EA415FE5DA349B512FEA390260001F8C7FCA314035DA414075D
A4140F5DA4141F5DA4143F92C8FCA55C147EA314FE5CA413015CA4495AA35C1307121C00
7F5B12FF495AA291C9FC485AEAF81E485AEA7878EA1FF0EA07C02E5A83C51E>I<15FCEC
03FF91390F83838091393E01CFC091387C00EF4A13FF4948137F010315804948133F495A
131F4A1400133F91C75A5B167E13FE16FE1201495CA215011203495CA21503A2495CA215
07A25EA2150F151F5E0001143F157F6C6C13FF913801DF8090387C039F90383E0F3FEB0F
FCD903F090C7FC90C7FC5DA2157EA215FEA25DA2001C495A127F48495A14074A5A485C02
3FC8FC00F8137E387C01F8381FFFE0000390C9FC2A407BAB2D>I<14FE137FA3EB01FC13
001301A25CA21303A25CA21307A25CA2130FA25CA2131FA25C157F90393F83FFC091388F
81F091381E00F802387F4948137C5C4A137EA2495A91C7FCA25B484814FE5E5BA2000314
015E5BA2000714035E5B1507000F5DA249130F5E001F1678031F1370491480A2003F023F
13F0EE00E090C7FC160148023E13C01603007E1680EE070000FEEC1E0FED1F1E48EC0FF8
0038EC03E02D467AC432>I<143C147E14FE1301A3EB00FC14701400AE137C48B4FC3803
C780380703C0000F13E0120E121C13071238A21278EA700F14C0131F00F0138012E0EA00
3F1400A25B137EA213FE5B12015BA212035B141E0007131C13E0A2000F133CEBC038A214
78EB807014F014E0EB81C0EA0783EBC7803803FE00EA00F8174378C11E>I<14FE137FA3
EB01FC13001301A25CA21303A25CA21307A25CA2130FA25CA2131FA25C167E013F49B4FC
92380783C09138000E07ED3C1F491370ED603F017E13E0EC01C09026FE03801380913907
000E00D9FC0E90C7FC5C00015B5C495AEBF9C03803FB8001FFC9FCA214F03807F3FCEBF0
7F9038E01FC06E7E000F130781EBC003A2001F150FA20180140EA2003F151E161C010013
E0A2485DA2007E1578167000FE01015B15F1489038007F800038021FC7FC2A467AC42D>
107 D<EB03F8EA01FFA3380007F013031307A214E0A2130FA214C0A2131FA21480A2133F
A21400A25BA2137EA213FEA25BA21201A25BA21203A25BA21207A25BA2120FA25BA2121F
A25BA2123FA290C7FCA2387F01C01303007E1380A2130700FE130012FCA25B130EEA7C1E
131CEA3C3CEA3E786C5AEA07C0154678C419>I<D801F0D90FE0EB07F0D803FCD97FF8EB
3FFC28071E01F03EEBF81F3E0E1F03C01F01E00F80271E0F8700D983807F001C018E9039
0F870007003C019C148E003801B802DC8002F814FC26781FF05C0070495CA24A5C00F049
4948130FD8E03F6091C75B1200043F141F4960017E92C7FCA24C143F01FE95C7FC49147E
6104FE147E1201494A14FE610301EE0780000305011400494A14F8A2030302035B0007F0
F00E495C1A1E0307EDE01C000F193C494A153862030F020113F0001FF0F1E0494A903800
FF800007C7D80380023EC7FC492D78AB50>I<D801F0EB0FE0D803FCEB7FF83A071E01F0
3E3A0E0F03C01F001ED987001380001C018E130F003C139C003801B814C014F838781FF0
00705BA25C00F049131FD8E03F158091C7FC1200163F491500137EA25E01FE147E5B16FE
5E12014913015E170F00030203130E4914F0A20307131E0007EDE01C5B173CEEC038000F
167849157017E0ED03C1001FEDE3C049903801FF000007C8127C302D78AB37>I<EC0FE0
EC7FFC903801F83E903907E00F8090390F8007C0EB1F00017EEB03E04914F0A248481301
484814F81207485AA2485AA2485A1503127F90C7FCA215074815F05AA2150F16E05AED1F
C0A21680153F16005D157E5D007C495A007E495A003E5C4A5A6CEB1F80260F803EC7FC38
07C0FC3801FFF038003F80252D75AB32>I<D903E0137E903A07F801FF80903A0E3C0783
E0903A1C1E0F01F0903A3C1F1C00F801385B017849137C01705BA24A48137E01E05BA292
C7FC00015B13C0147EC7FC02FE14FEA25CA20101140117FC5CA20103140317F85CA20107
EC07F0A24AEB0FE0A2010F15C0EE1F80163F1700496C137E5E4B5A9138B803F090393F9C
07E091389E0F80DA07FEC7FCEC01F849C9FCA2137EA213FEA25BA21201A25BA21203A212
07B512F0A25C2F3F7FAB32>I<D801F0EB3F803A03FC01FFF03A071E03C0F83A0E0F0F00
7C001E90389E01FC001C139CECB803003813F0A2D91FE013F80078EC00E00070491300A2
00F05BEAE03F91C8FC1200A25B137EA313FE5BA312015BA312035BA312075BA3120F5BA3
121F5B0007C9FC262D78AB29>114 D<EC0FE0EC7FF8903801F01E903803C00F90390780
078090380F0003011E14C0150749131FA2017CEB3F801378137CED0E0092C7FC137E137F
14F014FF6D13C06D13F06D7F6D7F1300EC0FFE14011400157F81120E003F141E487EA215
3E48C7123CA200FC5C12705D0078495A6C495A6CEB0F80260F803EC7FC3803FFF838007F
C0222D7AAB28>I<1470EB01F8A313035CA313075CA3130F5CA3131F5CA2007FB512E0B6
FC15C0D8003FC7FCA25B137EA313FE5BA312015BA312035BA312075BA3120F5BA2EC0780
001F140013805C140E003F131EEB001C143C14385C6C13F0495A6C485AEB8780D807FEC7
FCEA01F81B3F78BD20>I<017C143848B414FC3A03C78001FE380703C0000F13E0120E00
1C14000107147E1238163E1278D8700F141E5C131F00F049131C12E0EA003F91C7123C16
385B137E167801FE14705BA216F0000115E05B150116C0A24848EB0380A2ED0700A2150E
12015D6D5B000014786D5B90387C01E090383F0780D90FFFC7FCEB03F8272D78AB2D>
118 D<137C48B414072603C780EB1F80380703C0000F7F000E153F001C1600130712385E
0078157EEA700F5C011F14FE00F0495B12E0EA003FEC00015E5B137E150301FE5C5BA215
0700015D5BA2150F00035D5BA2151F5EA2153F12014BC7FC6D5B00005BEB7C0390383E0F
7EEB1FFEEB03F090C712FE5DA214015D121F397F8003F0A24A5A4848485A5D48131F00F0
49C8FC0070137E007813F8383801F0381E07C06CB4C9FCEA01FC294078AB2F>121
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fp cmbx12 14.4 30
/Fp 30 119 df<EEFFFC031FEBFF804AB612E0020781021F9038C00FF8913A7FFE0003FC
DAFFF0EB00FE4949EB03FF4901805B4990C7487F49485CA2495A4D7F013F6F5B5CA37190
C7FC715AEF01F894C9FCA90403B512C0BAFCA526003FFCC7120783B3B3A6003FB5D8FC03
B612C0A542547DD34B>12 D<B712F0AB240B7F9F2D>45 D<EA07F0487E487E487E487EB5
1280A76C13006C5A6C5A6C5A6C5A1111769025>I<157815FC14031407141F14FF130F00
07B5FCB6FCA2147F13F0EAF800C7FCB3B3B3A6007FB712FEA52F4E76CD43>49
D<EC3FFE0103B512E0010F14FC013F14FF90B712C048D9C07F7F2703FE000F13F8D807F8
01037FD80FE06D7F48486D7F48488001F01680486C6E13C07F486C6E13E07FA27013F0A5
6C5AA26C5AEA0FF0EA03C0C914E05EA218C05E1880A24C13005F4C5A4B5B5F4B5B5F4B5B
4B90C7FC4B5A5E4B5AED7FE04B5A4A5B4A48C8FC4A5A5D4A48EB01F04A5AEC3F804AC7FC
02FEEC03E0495A495A495A495AD91F80140749C8FC013E150F017FB7FC90B812C05A5A5A
5A5A5A5AB9FC1880A4344E79CD43>I<171F4D7E4D7EA24D7EA34C7FA24C7FA34C7FA34C
7FA24C7FA34C8083047F80167E8304FE804C7E03018116F8830303814C7E03078116E083
030F814C7E031F81168083033F8293C77E4B82157E8403FE824B800201835D840203834B
800207835D844AB87EA24A83A3DA3F80C88092C97E4A84A2027E8202FE844A82010185A2
4A820103854A82010785A24A82010F855C011F717FEBFFFCB600F8020FB712E0A55B547B
D366>65 D<BA12C019FEF1FFC01AF01AFCD8000701F0C7000313FFDE007F7F737F070F7F
737F878587858785A287A84F5BA263616361634F5B4F5B077F90C7FC4E485A060713F892
B812E097C8FC861AF003F0C7000313FE9539003FFF80070F13E0737F07017F87737F747E
1C807413C0A27413E0A31CF0A386A362A31CE0A2621CC0A250138097B5FC1C004F5B1907
4F5B073F13F04EB55ABC128098C7FC1AF81AC007F8C8FC54527CD160>I<932601FFFCEC
01C0047FD9FFC013030307B600F81307033F03FE131F92B8EA803F0203DAE003EBC07F02
0F01FCC7383FF0FF023F01E0EC0FF94A01800203B5FC494848C9FC4901F8824949824949
824949824949824990CA7E494883A2484983485B1B7F485B481A3FA24849181FA3485B1B
0FA25AA298C7FC5CA2B5FCAE7EA280A2F307C07EA36C7FA21B0F6C6D1980A26C1A1F6C7F
1C006C6D606C6D187EA26D6C606D6D4C5A6D6D16036D6D4C5A6D6D4C5A6D01FC4C5A6D6D
EE7F806D6C6C6C4BC7FC6E01E0EC07FE020F01FEEC1FF80203903AFFE001FFF0020091B6
12C0033F93C8FC030715FCDB007F14E0040101FCC9FC525479D261>I<BA7E19FCF1FF80
1AF01AFCD8000701F0C7000F13FF060014C0071F7F070713F807017F737F747E747F747F
86747F747F8886888688A2757EA31D8087A21DC0A51DE0A387A963A31DC0A51D80A2631D
00A3515AA2646264505B6264505B505B5090C7FCF2FFFE4F5B07075B071F5B96B512C006
0F91C8FCBB5A1AF01AC007FCC9FC19805B527CD167>I<932601FFFCEC01C0047FD9FFC0
13030307B600F81307033F03FE131F92B8EA803F0203DAE003EBC07F020F01FCC7383FF0
FF023F01E0EC0FF94A01800203B5FC494848C9FC4901F882494982494982494982494982
4990CA7E494883A2484983485B1B7F485B481A3FA24849181FA3485B1B0FA25AA298C8FC
5CA2B5FCAE6C057FB712E0A280A36C94C7003FEBC000A36C7FA36C7FA27E6C7FA26C7F6C
7FA26D7E6D7F6D7F6D6D5E6D7F6D01FC93B5FC6D13FF6D6C6D5C6E01F0EC07FB020F01FE
EC1FF10203903AFFF001FFE0020091B6EAC07F033FEE001F030703FC1307DB007F02E013
01040149CAFC5B5479D26A>71 D<B812F8A5D8000701F8CAFCB3B3A91A7CA41AFC1AF8A5
1901A31903A219071AF0190FA2191F193F197F19FF180360183F4DB5FCBB12E0A546527C
D151>76 D<B600FC073FB512FE6F61A26F96B6FCA2D80007F5C00070EF01EFA202EF6DEF
03CFA202E76DEF078FA202E36DEF0F0FA202E16D171EA302E06D173CA26F6C1778A26F6C
17F0A26F6DED01E0A26F6DED03C0A36F6DED0780A26F6DED0F00A26F6D151EA26F6D5DA3
706C5DA2706C5DA2706D495AA2706D495AA2706D495AA3706D49C7FCA2706D131EA2706D
5BA2716C5BA3716C5BA271EB81E0A271EBC3C0A271EBE780A27101FFC8FCA3715BA2715B
A2725AA2725AA2D93FFC6F5AB74DB712FEA2725AA2725A77527CD180>I<91260FFF8013
0791B500F85B010702FF5B011FEDC03F49EDF07F9026FFFC006D5A4801E0EB0FFD480180
0101B5FC4848C87E48488149150F001F824981123F4981007F82A28412FF84A27FA26D82
A27F7F6D93C7FC14C06C13F014FF15F86CECFF8016FC6CEDFFC017F06C16FC6C16FF6C17
C06C836C836D826D82010F821303010082021F16801400030F15C0ED007F040714E01600
173F050F13F08383A200788200F882A3187FA27EA219E07EA26CEFFFC0A27F6D4B13806D
17006D5D01FC4B5A01FF4B5A02C04A5A02F8EC7FF0903B1FFFC003FFE0486C90B65AD8FC
0393C7FC48C66C14FC48010F14F048D9007F90C8FC3C5479D24B>83
D<EC7FFF0107B512F0013F14FE90B77E48D9E00F7F2703FE000113F0486C6D7F6EEB3FFC
48826E131F83707FA36C496D7FA26C90C7FC6C5AC9FCA6037FB5FC020FB6FC91B7FC0107
1487013FEBF0074913803901FFFC004813F0485B485B485B4890C7FC5A5BA2485AA45EA2
6D5C007F151D163D6C6C02797F6C6D01F113F86C9026C003E1EBFFE06C9026F81FC014F0
6C90B5487EC6ED001F011F01FC010713E0010101E090C8FC3C387CB641>97
D<913801FFF8021FEBFF8091B612F0010315FC010F9038C00FFE903A1FFE0001FFD97FFC
491380D9FFF05B4817C048495B5C5A485BA2486F138091C7FC486F1300705A4892C8FC5B
A312FFAD127F7FA27EA2EF03E06C7F17076C6D15C07E6E140F6CEE1F806C6DEC3F006C6D
147ED97FFE5C6D6CEB03F8010F9038E01FF0010390B55A01001580023F49C7FC020113E0
33387CB63C>99 D<4DB47E0407B5FCA5EE001F1707B3A4913801FFE0021F13FC91B6FC01
0315C7010F9038E03FE74990380007F7D97FFC0101B5FC49487F4849143F484980485B83
485B5A91C8FC5AA3485AA412FFAC127FA36C7EA37EA26C7F5F6C6D5C7E6C6D5C6C6D49B5
FC6D6C4914E0D93FFED90FEFEBFF80903A0FFFC07FCF6D90B5128F0101ECFE0FD9003F13
F8020301C049C7FC41547CD24B>I<913803FFC0023F13FC49B6FC010715C04901817F90
3A3FFC007FF849486D7E49486D7E4849130F48496D7E48178048497F18C0488191C7FC48
17E0A248815B18F0A212FFA490B8FCA318E049CAFCA6127FA27F7EA218E06CEE01F06E14
037E6C6DEC07E0A26C6DEC0FC06C6D141F6C6DEC3F806D6CECFF00D91FFEEB03FE903A0F
FFC03FF8010390B55A010015C0021F49C7FC020113F034387CB63D>I<ED3FFC0203B5FC
020F14C0023F14E09139FFF81FF0499038C03FF849EB807F49903800FFFC495A495AA249
5AA2EE7FF8495AEE3FF0EE0FC093C7FCAEB712E0A526007FF8C8FCB3B3A7007FB512FEA5
2E547CD329>I<EB3FF0B5FCA51203C6FCB3A4EE1FFC93B512C0030314F0030F8092391F
E07FFC92393F001FFE037C8003F07FDAF1E081ECF3C0DAF7807F8502FFC7FC5CA25CA45C
B3ACB6D8F807B612C0A542537BD24B>104 D<137F497E000313E0487FA2487FA76C5BA2
6C5BC613806DC7FC90C8FCADEB3FF0B5FCA512017EB3B3A6B612E0A51B547BD325>I<EB
3FF0B5FCA512017EB3B3B3B1B612F0A51C537BD225>108 D<D93FF0EB1FFCB591B512C0
030314F0030F8092391FE07FFC92393F001FFE0003027C80C602F07FDAF1E081ECF3C0DA
F7807F8502FFC7FC5CA25CA45CB3ACB6D8F807B612C0A542367BB54B>110
D<913801FFE0021F13FE91B612C0010315F0010F9038807FFC903A1FFC000FFED97FF86D
6C7E49486D7F48496D7F48496D7F4A147F48834890C86C7EA24883A248486F7EA3007F18
80A400FF18C0AC007F1880A3003F18006D5DA26C5FA26C5F6E147F6C5F6C6D4A5A6C6D49
5B6C6D495B6D6C495BD93FFE011F90C7FC903A0FFF807FFC6D90B55A010015C0023F91C8
FC020113E03A387CB643>I<903A3FF001FFE0B5010F13FE033FEBFFC092B612F002F301
017F913AF7F8007FFE0003D9FFE0EB1FFFC602806D7F92C76C7F4A824A6E7F4A6E7FA271
7FA285187F85A4721380AC1A0060A36118FFA2615F616E4A5BA26E4A5B6E4A5B6F495B6F
4990C7FC03F0EBFFFC9126FBFE075B02F8B612E06F1480031F01FCC8FC030313C092CBFC
B1B612F8A5414D7BB54B>I<912601FFE0EB0780021F01F8130F91B500FE131F0103ECFF
80010F9039F03FC03F499039800FE07F903A7FFE0003F04948903801F8FF4849EB00FD48
49147F4A805A4849805A4A805AA291C87E5AA35B12FFAC6C7EA37EA2806C5EA26C6D5CA2
6C6D5C6C6D5C6C93B5FC6C6D5B6D6C5B6DB4EB0FEF010F9038C07FCF6D90B5120F010114
FED9003F13F80203138091C8FCB1040FB61280A5414D7CB547>I<90397FE003FEB59038
0FFF80033F13E04B13F09238FE1FF89139E1F83FFC0003D9E3E013FEC6ECC07FECE78014
EF150014EE02FEEB3FFC5CEE1FF8EE0FF04A90C7FCA55CB3AAB612FCA52F367CB537>I<
903903FFF00F013FEBFE1F90B7FC120348EB003FD80FF81307D81FE0130148487F498012
7F90C87EA24881A27FA27F01F091C7FC13FCEBFFC06C13FF15F86C14FF16C06C15F06C81
6C816C81C681013F1580010F15C01300020714E0EC003F030713F015010078EC007F00F8
153F161F7E160FA27E17E07E6D141F17C07F6DEC3F8001F8EC7F0001FEEB01FE9039FFC0
0FFC6DB55AD8FC1F14E0D8F807148048C601F8C7FC2C387CB635>I<143EA6147EA414FE
A21301A313031307A2130F131F133F13FF5A000F90B6FCB8FCA426003FFEC8FCB3A9EE07
C0AB011FEC0F8080A26DEC1F0015806DEBC03E6DEBF0FC6DEBFFF86D6C5B021F5B020313
802A4D7ECB34>I<D93FF8913801FFC0B50207B5FCA50003ED001FC61607B3AE5FA35FA2
017F5D173B177B6D6C14F3DC01E313F06D6CD907C3EBFFC0903A0FFFC03F836D90B51203
010114FE6D6C13F8020701E091C7FC42377BB54B>I<B600F00107B5FCA5000101F8C8EA
7FE06C6DED3F00A2017F163E6E157E013F167C6E15FC6D5E6F13016D5E8117036D5E6F13
076D5E6F130F6D5E6F131F6D93C7FC815F6E6C133E177E023F147C6F13FC6E5C16816E5C
16C3A26EEBE3E016E76E5C16FF6E5CA26E91C8FCA26F5AA36F5AA26F5AA26F5AA26F5A6F
5A40367DB447>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fq cmr12 12 87
/Fq 87 124 df<9239FFC001FC020F9038F80FFF913B3F803E3F03C0913BFC00077E07E0
D903F890390FFC0FF0494890383FF81F4948EB7FF0495A494814E049C7FCF00FE0499139
3FC0038049021F90C7FCAFB912F0A3C648C7D81FC0C7FCB3B2486CEC3FF0007FD9FC0FB5
12E0A33C467EC539>11 D<4AB4FC020F13E091387F80F8903901FC001C49487FD907E013
0F4948137F011FECFF80495A49C7FCA25B49EC7F00163E93C7FCACEE3F80B8FCA3C648C7
FC167F163FB3B0486CEC7FC0007FD9FC1FB5FCA330467EC536>I<913801FFC0020FEBFB
8091387F803F903801FC00494813FFEB07E0EB1FC0A2495A49C7FC167F49143F5BAFB8FC
A3C648C7123FB3B2486CEC7FC0007FD9FC1FB5FCA330467EC536>I<DBFF80EB3FE0020F
9039F001FFFC913B3F807C0FF01F913CFC000E3F800380D903F86D48486C7E4948D90FFC
804948D93FF8130F4948017F4A7E49485C49C75BA25B494B6D5A041F6E5A96C8FCACF107
F0BBFCA3C648C7391FC0001F190F1907B3B0486C4A6C497E007FD9FC0FB50083B512E0A3
4B467EC551>I<131F1480133F137FA2EBFF00485A485A5B485A485A138048C7FC123E12
3C5A12E0124011126CC431>19 D<6C130100E013076C130F007C133E001F13F8380F81F0
3807E7E03803FFC06C138038007E00133C1318180C74BF31>I<EA03F0EA0FFCEA1C0EEA
300338600180A238C000C0A538600180A238300300EA1C0EEA0FFCEA03F0121165C649>
23 D<001EEB03C0397F800FF000FF131F01C013F8A201E013FCA3007F130F391E6003CC
0000EB000CA401E0131C491318A3000114384913300003147090C712604814E0000614C0
000E130148EB038048EB070048130E0060130C1E1D7DC431>34 D<D91F801618D97FE016
3CD9F078167C2603E01C16FC48486C4B5A260F800F4B5A6E6C1407271F0003E04A5A6FEC
3FC0003ED901BE14FF923ACFC00FCF80007ED900C1B5001FC7FC9238C03FF0007C92C712
3E6F147E00FC0260147C601701604D5A1707604D5A171F95C8FC173E007C02E0137E4B13
7C007E5E1601003E01015C4B485A6C13034B485A6C6C48130F020E5C2607C00C49C9FC26
03E01C5B2600F078133ED97FE05BD91F8001FCEB03F090C848EB0FFC4B48EB1E0F030391
387C03804CEBF801922707C001F013C0030FED00E04C48481360DB1F0015704D48133003
3E1638037E010F1418157C4B5C0201171C4B011F140C4A5A14075D4A5A141F92C7FC143E
147E147C5C0101030F141C4A1718494881A2494802071438010F18304A6E6C137049C815
60496F6C13E0013EEF01C049DB00F8138001FCEE7C034993381E0F0049EE0FFC0160EE03
F046517BCA51>37 D<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013C0A312
011380120313005A1206120E5A5A5A12600B1D78C41B>39 D<140C141C1438147014E0EB
01C01303EB0780EB0F00A2131E5BA25B13F85B12015B1203A2485AA3485AA348C7FCA35A
A2123EA2127EA4127CA312FCB3A2127CA3127EA4123EA2123FA27EA36C7EA36C7EA36C7E
A212017F12007F13787FA27F7FA2EB0780EB03C01301EB00E014701438141C140C166476
CA26>I<12C07E12707E7E7E120F6C7E6C7EA26C7E6C7EA21378137C133C133E131E131F
A2EB0F80A3EB07C0A3EB03E0A314F0A21301A214F8A41300A314FCB3A214F8A31301A414
F0A21303A214E0A3EB07C0A3EB0F80A3EB1F00A2131E133E133C137C13785BA2485A485A
A2485A48C7FC120E5A5A5A5A5A16647BCA26>I<16C04B7EB3AB007FBAFCBB1280A26C19
00C8D801E0C9FCB3AB6F5A41407BB84C>43 D<121EEA7F8012FF13C0A213E0A3127FEA1E
601200A413E013C0A312011380120313005A1206120E5A5A5A12600B1D78891B>I<B612
C0A61A067F9721>I<121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A0A78891B>I<1618163C
167CA2167816F8A216F01501A216E01503A216C01507A21680150FA2ED1F00A2151E153E
A2153C157CA2157815F8A25D1401A24A5AA25D1407A25D140FA292C7FC5CA2141E143EA2
143C147CA25CA25C1301A25C1303A25C1307A25C130FA291C8FC5BA2133EA2133C137CA2
137813F8A25B1201A25B1203A2485AA25B120FA290C9FC5AA2121E123EA2123C127CA212
7812F8A25A126026647BCA31>I<14FF010713E090381F81F890383E007C01FC133F4848
EB1F8049130F4848EB07C04848EB03E0A2000F15F0491301001F15F8A2003F15FCA390C8
FC4815FEA54815FFB3A46C15FEA56D1301003F15FCA3001F15F8A26C6CEB03F0A36C6CEB
07E0000315C06D130F6C6CEB1F806C6CEB3F00013E137C90381F81F8903807FFE0010090
C7FC28447CC131>I<143014F013011303131F13FFB5FC13E713071200B3B3B0497E497E
007FB6FCA3204278C131>I<EB03FE90381FFFC0017F13F03901F80FFC3903C001FE4848
6C7E000EC7EA7F8048EC3FC0ED1FE04815F00030140F007015F800601407126CB415FC7F
7F1503A46C4813076CC7FCC8FC16F8A2150F16F0151F16E0A2ED3FC0ED7F8016005D5D4A
5A4A5A4A5A5D4A5A4A5A4AC7FC147C5C5C495A495A495A49C7120C131E5B013814185B5B
485A4848143848C81230000E1570001FB612F0A25A5AB712E0A326427BC131>I<49B4FC
010F13E0013F13FC9038FE01FE3A01F0007F80D803C0EB3FC048C7EA1FE0120EED0FF0EA
0FE0486C14F8A215077F5BA26C48130FEA03C0C813F0A3ED1FE0A2ED3FC01680ED7F0015
FE4A5AEC03F0EC1FC0D90FFFC7FC15F090380001FCEC007FED3F80ED1FC0ED0FE016F0ED
07F816FC150316FEA2150116FFA3121EEA7F80487EA416FE491303A2007EC713FC007014
07003015F80038140F6C15F06CEC1FE06C6CEB3FC0D803E0EB7F803A01FE01FE0039007F
FFF8010F13E0010190C7FC28447CC131>I<ED0380A21507150FA2151F153FA2157F15FF
A25CEC03BF153F14071406140C141C141814301470146014C013011480EB03005B13065B
131C13185B1370136013E0485A5B120390C7FC1206120E120C5A123812305A12E0B812C0
A3C8383F8000ADEDFFE0027FEBFFC0A32A437DC231>I<000615C0D807C0130701FCEB7F
8090B612005D5D5D15E0158026063FFCC7FC90C9FCAE14FF010713C090381F01F0903838
00FC01F0137ED807C07F49EB1F8016C090C7120F000615E0C8EA07F0A316F81503A216FC
A5123E127F487EA416F890C712075A006015F0A20070140F003015E00038EC1FC07E001E
EC3F806CEC7F006C6C13FE6C6C485A3901F807F039007FFFE0011F90C7FCEB07F826447B
C131>I<EC07FCEC3FFF91B512C0903903FC03E0903907E000F0D91FC0133849C7125801
7EEB01FC01FE1303491307485A485AA24848EB03F8000FEC01F092C7FC485AA3485AA312
7FA29038007F80903801FFF090380780FC39FF0E003E49EB1F8049EB0FC049EB07E01360
01E0EB03F04914F8150116FC5BED00FEA390C812FFA47EA57F123FA216FE121F15016D14
FC120FED03F86C7EED07F06C6C14E06C6CEB0FC06C6CEB1F80017EEB3F0090383F80FE90
380FFFF8010313E00100138028447CC131>I<121CA2EA1F8090B712C0A3481680A21700
5E0038C8120C0030151C00705D0060153016705E5E4814014B5A4BC7FCC81206150E5D15
1815385D156015E04A5AA24A5A140792C8FC5CA25C141E143EA2147E147CA214FCA21301
A3495AA41307A6130FAA6D5AEB01C02A457BC231>I<14FF010713E0011F13F890387F00
FE01FC133FD801F0EB1F804848EB0FC049EB07E00007EC03F048481301A290C713F84814
00A47FA26D130116F07F6C6CEB03E013FC6C6CEB07C09039FF800F806C9038C01F006CEB
F03EECF87839007FFEF090383FFFC07F01077F6D13F8497F90381E7FFFD97C1F1380496C
13C02601E00313E048486C13F000079038007FF84848EB3FFC48C7120F003EEC07FE1501
48140016FF167F48153FA2161FA56C151E007C153EA2007E153C003E157C6C15F86DEB01
F06C6CEB03E06C6CEB07C0D803F8EB1F80C6B4EBFF0090383FFFFC010F13F00101138028
447CC131>I<14FF010713E0011F13F890387F80FC9038FC007E48487F4848EB1F804848
EB0FC0000FEC07E0485AED03F0485A16F8007F140190C713FCA25AA216FE1500A516FFA4
6C5CA36C7E5D121F7F000F5C6C6C130E150C6C6C131C6C6C5BD8007C5B90383F01E09039
0FFF80FE903801FE0090C8FC150116FCA4ED03F8A216F0D80F801307486C14E0486C130F
16C0ED1F80A249EB3F0049137E001EC75A001C495A000F495A3907E01FE06CB51280C649
C7FCEB1FF028447CC131>I<121EEA7F80A2EAFFC0A4EA7F80A2EA1E00C7FCB3A5121EEA
7F80A2EAFFC0A4EA7F80A2EA1E000A2B78AA1B>I<007FBAFCBB1280A26C1900CEFCB000
7FBAFCBB1280A26C190041187BA44C>61 D<16C04B7EA34B7EA34B7EA34B7EA3ED19FEA3
ED30FFA203707FED607FA203E07FEDC03FA2020180ED801FA2DA03007F160FA202068016
07A24A6D7EA34A6D7EA34A6D7EA20270810260147FA202E08191B7FCA249820280C7121F
A249C87F170FA20106821707A2496F7EA3496F7EA3496F7EA201788313F8486C83D80FFF
03037FB500E0027FEBFFC0A342477DC649>65 D<B8FC17E017FC00019039C00003FF6C6C
4801007FEF3FC0717E717E717E84170384170184A760A21703601707604D5A4D5AEF7FC0
4DC7FCEE03FEEE3FF091B65A17FC0280C7B47EEF1FC0EF0FF0717E717E717E717E198018
7F19C0A2183F19E0A8F07FC0A2198018FF4D1300A24D5AEF0FFC4D5AEF7FE048486C9038
03FFC0B9C7FC17FC17C03B447CC345>I<DB0FFE146092B500C013E0020314F0913A0FFC
01FC0191393FC0003E02FFC7EA0F83D903FCEC03C74948EC01E74948EC00FF4948157F49
48153F4948151F49C9120F485A491607120348481603A248481601A248481600A2123FA2
491760127FA31900485AAE6C7EA21960A2123F7FA2001F18E07F000F18C0A26C6C160119
806C6C160312016DEE07006C6C16066D6C150E6D6C5D6D6C5D6D6C15786D6C5D6D6C4A5A
D900FFEC0780DA3FC0011FC7FCDA0FFC13FC0203B512F0020014C0DB0FFEC8FC3B487BC5
46>I<B8FC17F017FC00019039C00007FF6C499038007FC0017FED1FE0EF07F0EF03FC71
7E717E84727E727E727EA2727E85180385A2180185A38584A31A80AD1A00A36061A36118
0361180761180F614E5A183F614EC7FC18FEEF03FC4D5AEF1FE001FFED7FC0486DD907FF
C8FCB812FC17F094C9FC41447CC34B>I<B912F8A3000101C0C7127F6C6C48EC07FC1701
1700187C183C181CA284A31806A4180704067FA395C7FCA4160EA2161E163E16FE91B5FC
A3EC8000163E161E160EA21606A319C0A3F0018093C7FCA41803A21900A260A260A2181E
A2183E187EEF01FE170748486C147FB95AA33A447CC342>I<B912F0A3000101C0C7127F
6C6C48EC0FF817031701170018781838A2181CA3180CA4180E1806160CA21800A5161CA2
163C167CED01FC91B5FCA3EC8001ED007C163C161CA2160CA793C8FCB08048487EB612F8
A337447CC340>I<DB0FFE146092B500C013E0020314F0913A0FFC01FC0191393FC0003E
02FFC7EA0F83D903FCEC03C74948EC01E74948EC00FF4948157F4948153F4948151F49C9
120F485A491607120348481603A248481601A248481600A2123FA2491760127FA396C7FC
485AAD4CB612C06C7EA293C7387FF000725A003F171F7FA2121F7F120FA26C7EA26C7E6C
7EA26C7E6D7E6D6C153F6D7E6D6C157F6D6C15E7D903FEEC01C7D900FFEC0383DA3FE0EB
0F01DA0FFCEBFE000203B500F81360020002E090C7FCDB0FFEC9FC42487BC54D>I<B6D8
C003B6FCA3000101E0C70007138026007F80913801FE00B3A991B7FCA30280C71201B3AC
2601FFE0913807FF80B6D8C003B6FCA340447CC349>I<B612F0A3C6EBF0006D5A6D5AB3
B3B3A4497E497EB612F0A31C447DC323>I<010FB512FEA3D9000313806E130080B3B3AB
123F487E487EA44A5A13801300006C495A00705C6C13076C5C6C495A6CEB1F802603E07F
C7FC3800FFFCEB1FE027467BC332>I<B600C049B512C0A3000101E0C8387FFC006C49ED
3FE06D481680063EC7FC183C183860604D5A4D5A4DC8FC171E17385F5F4C5A4C5A4CC9FC
160E5E5E5E5E4B5A4B7E4B7E150F4B7E4B7E1577EDE3FE913881C1FFEC8381DA87007F02
8E6D7E149C02B86D7E02F06D7E14C04A6D7E707EA2707E707EA2707F717EA2717E717EA2
717E717EA2717E717EA2717F8585496C82486D4A13FCB600C0011FEBFFE0A343447CC34C
>I<B612F8A3000101E0C9FC6C6C5A5CB3B31830A418701860A518E0A3EF01C0A2170317
07A2170F173F177FEE01FF48486C011F1380B9FCA334447CC33D>I<B56C933807FFFC6E
5EA20001F1FE0026006FE0EE1BF8A3D967F01633A2D963F81663A3D961FC16C3A3D960FE
ED0183A2027FED0303A36E6C1406A36E6C140CA26E6C1418A36E6C1430A36E6C1460A26E
6C14C0A36E6CEB0180A3037FEB0300A292383F8006A36F6C5AA36F6C5AA26F6C5AA36F6C
5AA36F6C5AA26FB45AA370C7FC13F0A2486C143ED80FFFEF0FFEB500F0011C0107B512FC
A34E447BC359>I<B56C020FB5FC8080C6040013F06D6CED1F80D96FF8ED0F00A2D967FC
1506EB63FEA2EB61FF01607FA26E7E6E7EA26E7E6E7EA26E7E6E7EA26E7E6E7FA26F7E6F
7EA26F7E6F7EA26F7E6F7EA26F7E6F1380A2EE7FC0EE3FE0A2EE1FF0EE0FF8A2EE07FCEE
03FEA2EE01FF701386A2EF7FC6EF3FE6A2EF1FF6EF0FFEA217071703A217011700A201F0
167E183E487ED80FFF161EB500F0150EA2180640447CC349>I<ED1FFC4AB512C0913907
F007F091391F8000FC027EC7123FD901F8EC0FC049486E7E49486E7E49486E7E49486E7E
49C9127E017E8201FE834848707E4848707EA24848707EA2000F84491603001F84A24848
707EA3007F84A24982A300FF1980AD6C6C4C1300A4003F606D1603A2001F60A26C6C4C5A
A26C6C4C5AA20003606D161F6C6C4C5A000060017F4CC7FC6E5D013F5E6D6C4A5AD907E0
EC03F06D6C4A5AD901FCEC1FC0D9007E4AC8FCDA1F8013FC913907F007F00201B512C091
26001FFCC9FC41487BC54C>I<B712FCEEFFC017F800019039C0000FFC6C6C48EB01FF93
38007F80EF1FE0170FEF07F018F8EF03FCA218FE1701A218FFA718FEA2170318FCA2EF07
F818F0EF0FE0EF1FC0EF7F80933801FE00EE0FFC91B612F017800280C9FCB3AA3801FFE0
B612C0A338447CC342>I<ED1FFC4AB512C0913907F007F091391F8000FC027EC7123F49
48EC1FC0D903F0EC07E049486E7E49486E7E49486E7E49C9127E49167F01FE707E484870
7E00038449160F000784491607000F84A24848707EA2003F84491601A2007F84A34982A2
00FF1980AD007F19006D5EA3003F60A26D1603001F60A2000F606D16070007606DD903F0
130F0003DA0FFC5C6DD91C0E131F00014A6C5C6C6C903A3003803F80017FD9700149C7FC
92386000C0D93F8015FED91FC0ECE1FCD907E0EC63F0D903F0EC77E0902601FC70EB7FC0
9026007E3091C8FCDA1FB813FC912707FC07F814C00201B57E9139001FFC3C92C7FC053E
1301171E051F13031A80F08007F0C00F94380FF03F95B51200A28361715BA2715B943800
7FE0F01F8042597BC54C>I<B712E016FF17C000019039C0003FF86C6C48EB03FCEE00FF
717E717E717E717E717EA284170384A760A21707604D5AA24D5A4D5A4DC8FCEE01FEEE07
F8EE3FE091B6C9FC16FC913980007F80EE0FE0707EEE03FC707E160083717EA2717EA784
A71A6084171FA21AE0716C13C02601FFE002071301B600C01680943801FC03943900FE07
00CBEA3FFEF007F843467CC348>I<49B41303010FEBE007013F13F89039FE00FE0FD801
F8131FD807E0EB079F49EB03DF48486DB4FC48C8FC4881003E81127E82127C00FC81A282
A37E82A27EA26C6C91C7FC7F7FEA3FF813FE381FFFE06C13FE6CEBFFE06C14FC6C14FF6C
15C0013F14F0010F80010180D9001F7F14019138001FFF03031380816F13C0167F163F16
1F17E000C0150FA31607A37EA36C16C0160F7E17806C151F6C16006C5D6D147ED8FBC05C
D8F9F0495AD8F07C495A90393FC00FE0D8E00FB51280010149C7FC39C0003FF02B487BC5
36>I<003FB912F8A3903BF0001FF8001F01806D481303003EC7150048187C0078183CA2
0070181CA30060180CA5481806A5C81600B3B3A54B7EED7FFE49B77EA33F447DC346>I<
B600C0010FB5FCA3000101E0C813F026007F80ED1F80F00F00A21806B3B3A7180E6D6C15
0CA2181C131F6E1518010F163818306D6C1570606D6C14016D6C5D6D6CEC0780027F4AC7
FC6E6C131EDA1FE0137C913907FC03F00201B55A6E6C1380DB07FCC8FC40467CC349>I<
B692383FFFF0A3000301E003071300C649ED01FC4A5E017F705A6E5E133F616E1501011F
5FA26D6C4BC7FCA28001071606A26E150E0103160CA26D6C5DA2806D5EA26F1470027F15
6081023F5DA281021F4A5AA26F1303020F92C8FC8102071406A26F130E0203140CA26E6C
5BA2816E5CA2EE8070037F1360A26F6C5AA216E092381FE180A216F3030F90C9FC16FBED
07FEA36F5AA36F5AA26F5AA3166044467EC349>I<B60107B500F890380FFFFEA3000301
E0D9001F90C813F06C0180DA0FFCED3FC091C86C48ED1F006C871C0E6D6C6E7E1C0CA26D
6C6F5DA36EDA06FF1538011F1A30A26E020E6D1470010FDB0C7F1560A26E021C7F0107DB
183F5DA2856D6CDA301F4A5AA36D6C4A6C6C49C7FCA36D6C4A6C6C1306A3DB80016E130E
027FDA8003140CA2DBC00380023FDA00015CA203E081021F01066D5CA36E6C486E6C5AA3
6E6C486E6C5AA36F48EC1FE1020360A2DBFE7015F302010160020F90C8FCA2DBFFE015FB
6E49EC07FEA36F486E5AA36FC86C5AA3031E6F5AA4030C16605F467EC364>I<003FB500
E0011FB5FCA3C691C7000713E0D93FFC020190C7FC6D4815FC010F6F5A6D6C15E0A26D6C
4A5A6D6C5D4DC8FC6D6D5B6E6C13065F6E6C131C6E6C13185F6E6C13706E6C13605F9138
03FE01DA01FF5B4CC9FC6E1387ED7FC616CCED3FFC6F5A5E6F7E6F7EA26F7E82A203067F
150E92380C7FC04B6C7E15389238301FF04B6C7E15E04B6C7E4A486C7E14034B6C7E0206
6D7F140E020C6E7E4A6E7E143802306E7E4A6E7E14E04A6E7E49486E7E130349C86C7E49
6F7F5B496C8201FF83000701E0020313F8B500F8021FEBFFF0A344447EC349>I<B66C91
380FFFFCA3000101F8C8000313C026007FE0923800FE0061013F17F06D6C5E80010F5F6D
6C4B5A18036D6C93C7FC6E15066D160E6D6D140C181C6E6C14186E6C5C18706E6C146018
E06E6C5C6E6C495A17036E6C91C8FC5F6E6C13066E6D5A171C92387FC0185FED3FE06F6C
5A17E06F6C5AEEF980ED07FF6F90C9FCA26F5AB3A6923807FF800203B6FCA346447FC349
>I<001FB81280A39126800001130001FCC7FC01F04A5A01C04A5A5B90C8485A121E4C5A
484B5AA200384B5A4C5AA24B90C7FC00304A5AA24B5AA24B5AC8485AA24B5A4B5AA24B5A
5C93C8FC4A5AA24A5A4A5AA24A5A4A5AA24A5A14FF5D4990C9FCEF0180495A495AA2495A
494814031800495AA2495A495A5F4890C8FC485A5F485A48485D5F48485D17FE48481403
4848140F16FFB8FCA331447BC33C>I<EAFFFCA4EAF000B3B3B3B3B3A2EAFFFCA40E6476
CA1B>I<01C01318000114384848137048C712E0000EEB01C0000C1480001C1303001814
0000385B003013060070130E0060130CA300E0131C481318A400CFEB19E039FFC01FF801
E013FCA3007F130FA2003F130701C013F8390F0001E01E1D71C431>I<EAFFFCA4EA003C
B3B3B3B3B3A2EAFFFCA40E647ECA1B>I<130C131E133F497EEBF3C03801E1E03803C0F0
3807807848487E001E7F487F0070EB038048EB01C00040EB00801A0E75C331>I<13C012
01EA0380EA0700120E120C121C12181238123012701260A312E05AA412CFEAFFC013E0A3
127FA2123F13C0EA0F000B1D79C41B>96 D<EB07FC90383FFF809038F80FE03903C003F0
48C66C7E000E6D7ED80FC0137E486C137F6D6D7EA36F7EA26C5AEA0380C8FCA4EC0FFF49
B5FC90380FFE1FEB3FC0EBFF00EA03FC485A485A485A485A127F5B176048C7FCA3153FA3
6D137F007F14EF6D9038C7E0C0003F13013A1FE00783F13B07F81E03FF802701FFFC0113
003A001FE0007C2B2E7CAC31>I<EA01FC12FFA3120712031201B3EC03FC91380FFF8091
383C07E091387001F89039FDE0007E02807F01FFEC1F8091C713C049EC0FE049140717F0
A2EE03F8A217FCA2160117FEAB17FC1603A217F8A2EE07F0A26DEC0FE017C06D141F01FB
EC3F80D9F380EB7E00D9E1C05B9039E0F001F89039C03C07E09039801FFF80C7D803FCC7
FC2F467DC436>I<EC7F80903803FFF090380FC07C90383F000F01FCEB03804848EB01C0
0003140F4848EB1FE049133F120F485AA2485AED1FC0007FEC070092C7FCA290C9FC5AAB
7E7FA2123F16307F001F15706C6C146016E06C6C14C06C6C13010001EC03806C6CEB0700
013F131E90381FC078903807FFF001001380242E7DAC2B>I<167FED3FFFA315018182B3
EC7F80903803FFF090380FC07C90383F000E017E1307496D5AD803F87F48487F5B000F81
485AA2485AA2127FA290C8FC5AAB7E7FA2123FA26C7EA2000F5D7F6C6C5B00035C6C6C90
38077F806C6C010E13C0013F011C13FE90380FC0F8903803FFE09026007F0013002F467D
C436>I<EB01FE903807FFC090381F03F090387E00FC49137E48487F485A4848EB1F8000
0F15C049130F121F484814E01507A2007F15F090C7FCA25AA390B6FCA290C9FCA67EA27F
A2123F16306C7E1670000F15606D14E06C6C14C0000314016C6CEB03806C6CEB0700013E
131E90381F80F8903803FFE0010090C7FC242E7DAC2B>I<EC0FE0EC7FF8903801F81E90
3803F03F90390FE07F8090381FC0FF5C133F495AA2ED7F0001FE131C92C7FCAFB67EA3C6
48C8FCB3B2486C7E007F13FFA321467EC51E>I<EE0F80D901FCEB7FE0903A0FFF81F0F0
90393F07E3819039FC01FF033A01F800FE014848017E13E00007027FC7FC497F000F8149
131F001F81A9000F5D6D133F000792C7FC6D5B0003147E6C6C5B6D485A3903BF07E09038
0FFF80260701FCC8FC90CAFCA25AA37F6C7E7F90B512F86C14FF16E06C15F86C6C8048B6
7E3A07C0000FFF48481300003FC8EA3F80003E151F48ED0FC0A2481507A56C150F007C16
80007E151F003E16006C153E6C6C5CD807E0495AD801F8EB07E0D8007FEB3F8090261FFF
FEC7FC010113E02C427DAC31>I<EA01FC12FFA3120712031201B3EC01FE913807FFC091
381E07F091383801F802707FECE000D9FDC07F5C01FF147F91C7FCA25BA35BB3A8486CEC
FF80B5D8F83F13FEA32F457DC436>I<EA01E0EA07F8A2487EA46C5AA2EA01E0C8FCADEA
01FC12FFA3120712031201B3B0487EB512F8A315437DC21C>I<143C14FFA2491380A46D
1300A2143C91C7FCADEC7F80EB3FFFA31300147F143FB3B3AA123E127F39FF807F00A214
7EA25C6C485A383C01F06C485A3807FF80D801FEC7FC195785C21E>I<EA01FC12FFA312
0712031201B3A292381FFFE0A36F1300ED07F816E05E5E030EC7FC5D5D5D5D4A5A4A5A4A
C8FC5CEC3F804A7E14FF9038FDCFE09038FF8FF01407496C7E01FC7F14016E7E81816F7E
82151F6F7E821507826F7E8282486C491380B5D8F81F13F8A32D457DC433>I<EA01FC12
FFA3120712031201B3B3B3A5487EB512F8A315457DC41C>I<D801FC01FFEC1FE000FF01
0701E0EBFFFC913B0F03F801E07F913C3C01FC07803F800007903C7000FE0E001FC00003
49D97E1C130F2601FDC0D97F38804A143001FFDA3FF06D7E91C75BA2495DA3495DB3A848
6C4A6C497EB5D8F81FB50003B512E0A34B2C7DAB52>I<3901FC01FE00FF903807FFC091
381E07F091383801F8000701707F0003EBE0002601FDC07F5C01FF147F91C7FCA25BA35B
B3A8486CECFF80B5D8F83F13FEA32F2C7DAB36>I<EC7F80903803FFF090380FC0FC9038
3E001F496D7E496D7E48486D7E48486D7E48486D7E000F81A24848147E003F157FA290C8
7E481680A44816C0AA6C1680A26D147F003F1600A2001F157E6D14FE000F5D6D13010007
5D6C6C495A6C6C495A6C6C495A013E49C7FC90381FC0FE903807FFF89038007F802A2E7D
AC31>I<3901FC03FC00FF90380FFF8091383C07E091387001F83A07FDE000FE00030180
137FD801FFEC3F8091C7EA1FC04915E049140F17F0160717F8160317FCA3EE01FEABEE03
FCA3EE07F8A217F0160F6D15E0EE1FC06D143F17806EEB7E00D9FDC05B9039FCF003F891
383C0FE091381FFF80DA03FCC7FC91C9FCAE487EB512F8A32F3F7DAB36>I<91387F8003
903903FFE00790380FE07890393F801C0F90387E000E496D5AD803F8EB039F0007EC01BF
4914FF48487F121F5B003F81A2485AA348C8FCAB6C7EA3123F7F121F6D5C120F6D5B1207
6C6C5B6C6C497E6C6C130E013F131C90380FC0F8903803FFE09038007F0091C7FCAEEEFF
80033F13FEA32F3F7DAB33>I<3903F803F000FFEB1FFCEC3C3EEC707F0007EBE0FF3803
F9C000015B13FBEC007E153C01FF13005BA45BB3A748B4FCB512FEA3202C7DAB26>I<90
383FE0183901FFFC383907E01F78390F0003F8001E1301481300007C1478127800F81438
A21518A27EA27E6C6C13006C7E13FC383FFFE06C13FC6C13FF6C14C06C14E0C614F0011F
13F81300EC0FFC140300C0EB01FE1400157E7E153EA27EA36C143C6C147C15786C14F86C
EB01F039F38003E039F1F00F8039E07FFE0038C00FF01F2E7DAC26>I<1306A5130EA413
1EA3133E137EA213FE12011207001FB512F0B6FCA2C648C7FCB3A4150CAA017E131C017F
1318A26D133890381F8030ECC070903807E0E0903801FFC09038007F001E3E7EBC26>I<
D801FC147F00FFEC3FFFA300071401000380000181B3A85EA35DA212006D5B017E903807
7F80017F010E13C06D011C13FE90380FC078903803FFF09026007F8013002F2D7DAB36>
I<B539F001FFFCA3000790C7EA7FE06C48EC1F8000011600160E1200160C017F5CA28001
3F5CA26E1370011F146080010F5CA2ECF00101075CA26D6C48C7FCA26E5A01011306A26D
6C5AA214FF6E5AA215B8EC3FB015F06E5AA36E5AA26E5AA36EC8FC2E2C7EAA33>I<B500
E0B539E03FFF80A30007903C000FFE000FFC00D803FCD903F8EB03F8F001E0120103015D
6D80000060A26D6E13036DD9037E91C7FCA20280017F5B013FD9063F1306A2D91FC06E5A
ED0C1FA2D90FE06E5AED180FA2D907F06E5AED3007A2D903F86E5AED6003A2902601FCE0
6D5AEDC00117FCD900FFECFD80ED800017FF027F92C8FC92C77EA26E147E023E143EA202
1E143C021C141CA2412C7EAA46>I<B539F007FFFCA30003D9C00113C0C6496C1300017F
14FC013F5C6E13E06D7E010F495A6D6C485A02F890C7FC903803FC060101130E6E5A9038
00FF186E5AEC3FF05D141F140F6E7E81140FEC0DFCEC19FEEC38FF4A7E9138603F8002C0
7F0101131F49486C7E02007F01066D7E010E1303496D7E013C80017C80D801FC1580D80F
FE4913C0B5D8800F13FFA3302B7FAA33>I<B539F001FFFCA3000790C7EA7FE06C48EC1F
8000011600160E0000150C6D141C6D1418A26E1338013F1430A26D6C5BA26E13E0010F5C
A26D6C485AA2ECF803010391C7FCA2903801FC06A2ECFE0E0100130CA2EC7F18A215B8EC
3FB0A2EC1FE0A36E5AA26E5AA36EC8FCA21406A35CA25CA2123C007E5BB4FC5CA25CEAFE
01387C0380D87007C9FCEA3C1EEA0FFCEA03F02E3F7EAA33>I<003FB612E0A29038C000
3F90C713C0003CEC7F800038ECFF00A20030495A0070495AA24A5A0060495AA24A5A4A5A
A2C7485A4AC7FC5B5C495A13075C495A131F4A1360495A495AA249C712C0485AA2485A48
5A1501485A48481303A24848EB07804848131F00FF14FF90B6FCA2232B7DAA2B>I<B9FC
A23002809B31>I E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 1 1
1 0 bop 3802 -101 a Fq(1)337 289 y Fp(Correlation-Sensitiv)l(e)48
b(Adaptiv)l(e)d(Sequence)g(Detection)853 525 y Fq(Aleksandar)33
b(Ka)m(v)m(\024)-46 b(ci)m(\023)g(c)130 b(and)g(Jos)m(\023)-46
b(e)34 b(M.)f(F.)f(Moura)1214 950 y(Data)g(Storage)g(Systems)i(Cen)m
(ter)720 1115 y(Departmen)m(t)e(of)g(Electrical)f(and)i(Computer)g
(Engineering)1260 1281 y(Carnegie)f(Mellon)g(Univ)m(ersit)m(y)1415
1446 y(5000)f(F)-8 b(orb)s(es)33 b(Av)m(en)m(ue)1380
1611 y(Pittsburgh,)g(P)-8 b(A)33 b(15213)1307 1966 y(Submitted:)43
b(April)31 b(9,)i(1997)1264 2131 y(Revised:)44 b(Decem)m(b)s(er)33
b(6,)f(1997)726 2296 y Fo(IEEE)j(T)-7 b(r)i(ansactions)33
b(on)h(Magnetics)p Fq(,)e(v)m(ol.)h(34,)f(Ma)m(y)h(1998)1628
2978 y Fn(Abstract)-19 3260 y Fq(In)d(high)f(densit)m(y)h(magnetic)f
(recording,)h(noise)f(samples)h(corresp)s(onding)f(to)g(adjacen)m(t)i
(signal)d(samples)-165 3378 y(are)j(hea)m(vily)h(correlated)f(as)h(a)f
(result)h(of)f(fron)m(t-end)h(equalizers,)g(media)e(noise,)i(and)g
(signal)e(nonlinearities)-165 3496 y(com)m(bined)35 b(with)g(nonlinear)
f(\014lters)i(to)f(cancel)g(them.)52 b(This)36 b(correlation)e
(signi\014can)m(tly)g(deteriorates)i(the)-165 3614 y(p)s(erformance)29
b(of)f(detectors)j(at)e(high)f(densities.)43 b(In)29
b(this)g(pap)s(er,)h(w)m(e)g(prop)s(ose)g(a)f(no)m(v)m(el)h(sequence)i
(detector)-165 3732 y(that)44 b(is)f(correlation-sensitiv)m(e)g(and)h
(adaptiv)m(e)g(to)g(the)g(nonstationary)g(signal)e(sample)h
(statistics.)78 b(W)-8 b(e)-165 3850 y(deriv)m(e)32 b(the)f
(correlation-sensitiv)m(e)f(maxim)m(um)f(lik)m(eliho)s(o)s(d)f
(detector.)44 b(It)31 b(can)h(b)s(e)f(used)h(with)f(an)m(y)h(Viterbi-)
-165 3969 y(lik)m(e)i(receiv)m(er)i(\(e.g.,)f(PRML,)h(FDTS,)f(MDFE\))g
(that)f(relies)h(on)g(a)f(tree/trellis)g(structure.)52
b(Our)35 b(detector)-165 4087 y(adjusts)f(the)g(metric)f(computation)f
(to)h(the)h(noise)f(correlation)f(statistics.)46 b(Because)35
b(these)g(statistics)e(are)-165 4205 y(nonstationary)-8
b(,)47 b(w)m(e)g(dev)m(elop)f(an)f(adaptiv)m(e)g(algorithm)d(that)j
(trac)m(ks)h(the)g(data)f(correlation)e(matrices.)-165
4323 y(Sim)m(ulation)c(results)k(are)g(presen)m(ted)i(that)d(sho)m(w)i
(the)f(applicabilit)m(y)c(of)j(the)h(new)h(correlation-sensitiv)m(e)
-165 4441 y(adaptiv)m(e)32 b(sequence)k(detector.)-19
5031 y(This)25 b(w)m(ork)h(w)m(as)f(supp)s(orted)h(in)e(part)h(b)m(y)g
(the)g(National)e(Science)i(F)-8 b(oundation)24 b(under)h(Gran)m(t)g
(No.)g(ECD-)-165 5150 y(8907068.)42 b(The)33 b(United)f(States)i(go)m
(v)m(ernmen)m(t)f(has)g(certain)f(righ)m(ts)h(to)f(this)g(material.)p
eop
%%Page: 2 2
2 1 bop -133 -101 a Fm(IEEE)32 b(T)-7 b(r)i(ansactions)35
b(on)e(Magnetics)p Fl(,)d(v)m(ol.)h(34,)h(Ma)m(y)f(1998)1854
b Fq(2)-165 289 y Fk(1)161 b(In)l(tro)t(duction)-165
671 y Fq(In)25 b(recen)m(t)h(y)m(ears,)i(there)e(has)f(b)s(een)h(a)f
(ma)5 b(jor)23 b(shift)i(in)f(the)h(design)g(of)g(signal)e(detectors)j
(in)f(magnetic)e(record-)-165 836 y(ing.)42 b(The)31
b(traditional)d(p)s(eak)j(detectors)h(\(PD\))e([1])h(ha)m(v)m(e)h(b)s
(een)f(replaced)g(b)m(y)g(Viterbi-lik)m(e)e(detectors)j([2)o(])f(in)
-165 1001 y(the)38 b(form)f(of)h(partial)e(resp)s(onse)k(maxim)m(um)c
(lik)m(eliho)s(o)s(d)f(\(PRML\))k(sc)m(hemes)h([3,)e(4])g(or)g(h)m
(ybrids)h(b)s(et)m(w)m(een)-165 1167 y(tree/trellis)31
b(detectors)k(and)e(decision)g(feedbac)m(k)i(equalizers)e(\(DFE\),)g
(lik)m(e)g(FDTS/DF)f([5],)h(MDFE)g([6,)h(7)o(])-165 1332
y(and)29 b(RAM-RSE)g([8].)42 b(These)31 b(metho)s(ds)e(w)m(ere)i(deriv)
m(ed)f(under)g(the)f(assumption)g(of)f(additiv)m(e)h(white)g(Gaus-)-165
1497 y(sian)f(noise)h(\(A)-11 b(W)m(GN\))30 b(in)e(the)i(system.)43
b(The)30 b(resulting)e(trellis/tree)g(branc)m(h)i(metrics)e(are)h(then)
h(computed)-165 1663 y(as)i(Euclidian)f(distances.)-19
1946 y(It)43 b(has)g(long)e(b)s(een)i(observ)m(ed)i(that)d(the)h(noise)
g(in)e(magnetic)h(recording)g(systems)i(is)e(neither)g(white)-165
2112 y(nor)d(stationary)g([9,)g(10,)g(11,)h(12)o(].)64
b(The)41 b(nonstationarit)m(y)d(of)h(the)h(media)e(noise)i(results)g
(from)e(its)h(signal)-165 2277 y(dep)s(enden)m(t)d(nature)f([13,)g(14)o
(,)g(15].)50 b(Com)m(bating)33 b(media)h(noise)g(and)h(its)g(signal)e
(dep)s(endence)k(has)e(th)m(us)h(far)-165 2442 y(b)s(een)45
b(con\014ned)g(to)f(mo)s(difying)e(the)j(Euclidian)d(branc)m(h)k
(metric)d(to)h(accoun)m(t)h(for)f(these)h(e\013ects.)80
b(Zeng)-165 2608 y(and)34 b(Mo)s(on)f([16],)h(and)g(Lee)h(and)f
(Cio\016)f([17])h(ha)m(v)m(e)h(deriv)m(ed)g(a)f(branc)m(h)g(metric)f
(computation)g(metho)s(d)g(for)-165 2773 y(com)m(bating)28
b(the)i(signal-dep)s(enden)m(t)f(c)m(haracter)h(of)f(media)f(noise.)43
b(These)31 b(authors)f(ignore)e(the)i(correlation)-165
2938 y(b)s(et)m(w)m(een)38 b(noise)e(samples.)53 b(The)37
b(e\013ectiv)m(eness)i(of)d(this)f(metho)s(d)h(has)g(b)s(een)h
(demonstrated)g(on)f(real)f(data)-165 3104 y(in)c([18].)-19
3387 y(These)47 b(metho)s(ds)f(do)f(not)h(tak)m(e)g(in)m(to)f
(consideration)g(the)h(correlation)e(b)s(et)m(w)m(een)j(noise)f
(samples)f(in)-165 3553 y(the)i(readbac)m(k)h(signal.)85
b(These)49 b(correlations)c(arise)i(due)g(to)g(noise)g(coloring)d(b)m
(y)k(fron)m(t-end)f(equalizer-)-165 3718 y(s,)h(media)43
b(noise,)k(media)d(nonlinearities,)h(and)f(magnetoresistiv)m(e)g
(\(MR\))h(head)g(nonlinearities.)77 b(They)-165 3883
y(cause)37 b(signi\014can)m(t)f(p)s(erformance)h(degradation)e(at)i
(high)f(recording)g(densities.)56 b(Early)36 b(w)m(ork)i(addressing)
-165 4049 y(noise)c(correlation)g(has)h(b)s(een)h(rep)s(orted)f(b)m(y)h
(Barb)s(osa)e(in)h([19)o(].)51 b(W)-8 b(e)35 b(prop)s(ose)h(in)e(this)g
(pap)s(er)h(an)g Fo(adaptive)-165 4214 y(c)-5 b(orr)g
(elation-sensitive)40 b Fq(maxim)m(um)f(lik)m(eliho)s(o)s(d)g(sequence)
44 b(detector.)72 b(W)-8 b(e)42 b(deriv)m(e)h(the)f(maxim)m(um)d(lik)m
(eli-)-165 4379 y(ho)s(o)s(d)h(sequence)k(detector)d(\(MLSD\))g([20])g
(without)f(making)g(the)h(usual)g(simplifying)c(assumption)k(that)-165
4545 y(the)f(noise)g(samples)g(are)h(indep)s(enden)m(t)g(random)f(v)-5
b(ariables.)65 b(The)41 b(trellis/tree)e(branc)m(h)i(metric)e(compu-)
-165 4710 y(tation)31 b(b)s(ecomes)i(correlation-sensitiv)m(e,)e(b)s
(eing)g(b)s(oth)i(signal-dep)s(enden)m(t)f(and)g(sensitiv)m(e)i(to)e
(correlations)-165 4875 y(b)s(et)m(w)m(een)27 b(noise)e(samples.)41
b(W)-8 b(e)26 b(refer)f(to)g(our)h(metho)s(d)e(as)i(the)g
(correlation-sensitiv)m(e)e(maxim)m(um)f(lik)m(eliho)s(o)s(d)-165
5041 y(sequence)35 b(detector)e(\(CS-MLSD\),)g(or)f(simply)f
(correlation-sensitiv)m(e)g(sequence)36 b(detector)d(\(CS-SD\).)p
eop
%%Page: 3 3
3 2 bop -133 -101 a Fm(IEEE)32 b(T)-7 b(r)i(ansactions)35
b(on)e(Magnetics)p Fl(,)d(v)m(ol.)h(34,)h(Ma)m(y)f(1998)1854
b Fq(3)-19 289 y(Because)39 b(the)f(noise)f(statistics)h(are)f
(non-stationary)-8 b(,)38 b(w)m(e)g(adaptiv)m(ely)g(compute)f(the)h
(noise)g(sensitiv)m(e)-165 454 y(branc)m(h)j(metrics)f(b)m(y)h
(estimating)e(the)i(noise)f(co)m(v)-5 b(ariance)40 b(matrices)g(from)f
(the)i(read-bac)m(k)h(data.)67 b(These)-165 619 y(co)m(v)-5
b(ariance)30 b(matrices)f(are)h(di\013eren)m(t)g(for)g(eac)m(h)h(branc)
m(h)g(of)f(the)g(tree/trellis)f(due)i(to)e(the)i(signal)d(dep)s(enden)m
(t)-165 785 y(structure)i(of)f(the)h(media)e(noise.)42
b(Since)30 b(the)f(c)m(hannel)h(c)m(haracteristics)g(in)e(magnetic)g
(recording)h(v)-5 b(ary)30 b(from)-165 950 y(trac)m(k-to-trac)m(k,)35
b(these)h(matrices)d(are)i(trac)m(k)m(ed)h(\(up)s(dated\))f
(on-the-\015y)-8 b(,)35 b(recursiv)m(ely)h(using)e(past)h(samples)-165
1115 y(and)d(previously)h(made)f(detector)h(decisions.)-19
1399 y(The)25 b(blo)s(c)m(k)g(diagram)d(of)i(the)g(newly)h(prop)s(osed)
g(detector)g(strategy)g(is)f(sho)m(wn)i(in)e(Figure)f(1.)41
b(Notice)24 b(that)-165 1564 y(the)29 b(detector)h(has)g(a)f(feedbac)m
(k)i(structure.)43 b(The)31 b(\014rst)e(blo)s(c)m(k)g(is)g(a)g
(Viterbi-lik)m(e)e(detector.)43 b(The)30 b(outputs)g(of)-165
1730 y(this)f(blo)s(c)m(k)g(are)h(the)g(decisions)f(and)h(the)g(dela)m
(y)m(ed)g(signal)e(samples.)42 b(They)31 b(are)e(used)i(b)m(y)f(the)g
(t)m(w)m(o)h(feedbac)m(k)-165 1895 y(blo)s(c)m(ks.)62
b(The)39 b(\014rst)g(feedbac)m(k)i(blo)s(c)m(k,)f(lab)s(eled)d(`noise)i
(statistics)f(trac)m(k)m(er,')k(uses)e(the)f(past)g(samples)f(and)-165
2060 y(detector)d(decisions)h(to)e(up)s(date)i(the)f(noise)g
(statistics,)g(i.e.,)h(to)e(up)s(date)i(the)f(noise)g(co)m(v)-5
b(ariance)35 b(matrices.)-165 2226 y(The)28 b(second)h(blo)s(c)m(k,)g
(lab)s(eled)d(`metric)h(computation)f(up)s(date,')j(uses)g(the)f(up)s
(dated)g(statistics)f(to)g(calculate)-165 2391 y(the)36
b(branc)m(h)g(metrics)g(needed)h(in)e(the)h(Viterbi-lik)m(e)d
(algorithm.)50 b(Our)36 b(new)h(algorithm)32 b(do)s(es)k(not)g(require)
-165 2556 y(replacing)c(curren)m(t)j(detectors.)49 b(It)34
b(simply)f(adds)h(t)m(w)m(o)h(new)g(blo)s(c)m(ks)f(in)g(the)g(feedbac)m
(k)i(lo)s(op)c(to)i(adaptiv)m(ely)-165 2722 y(estimate)d(the)i(branc)m
(h)h(metrics)e(used)i(in)d(the)i(Viterbi-lik)m(e)d(deco)s(der.)-19
3005 y(The)50 b(pap)s(er)g(is)f(organized)g(as)g(follo)m(ws.)93
b(Section)50 b(I)s(I)f(deriv)m(es)i(the)f(general)e(maxim)m(um)g(lik)m
(eliho)s(o)s(d)-165 3170 y(correlation-sensitiv)m(e)f(sequence)k
(detection)e(metho)s(d)g(and)g(the)g(corresp)s(onding)g(branc)m(h)g
(metrics.)92 b(In)-165 3336 y(Section)48 b(I)s(I)s(I,)g(w)m(e)h(prop)s
(ose)f(an)g(adaptiv)m(e)g(\014lter)g(for)g(trac)m(king)g(the)g
(statistics)g(needed)h(for)f(the)g(metric)-165 3501 y(computation.)k
(Sim)m(ulation)33 b(p)s(erformance)j(results)h(using)e(data)h
(generated)h(with)f(a)g(realistic)e(sto)s(c)m(hastic)-165
3667 y(zig-zag)d(transition)g(mo)s(del)g(are)h(presen)m(ted)j(in)d
(Section)g(IV.)h(Section)g(V)f(concludes)i(the)f(pap)s(er.)-165
4117 y Fk(2)161 b(Correlation-sensitiv)l(e)53 b(MLSD)-165
4500 y Fq(In)32 b(this)g(section,)g(w)m(e)h(deriv)m(e)g(the)g
(correlation-sensitiv)m(e)d(maxim)m(um)g(lik)m(eliho)s(o)s(d)f
(sequence)34 b(detector)f(\(CS-)-165 4665 y(MLSD\).)g(Assume)i(that)e
Fj(N)40 b(>)30 b Fq(1)j(c)m(hannel)h(bits)g(\(sym)m(b)s(ols\),)f
Fj(a)2168 4680 y Fi(1)2208 4665 y Fj(;)17 b(a)2303 4680
y Fi(2)2342 4665 y Fj(;)g(:)g(:)g(:)f(;)h(a)2612 4680
y Fh(N)2679 4665 y Fq(,)34 b(are)g(written)g(on)f(a)h(magnetic)-165
4830 y(medium.)70 b(The)43 b(sym)m(b)s(ols)f Fj(a)918
4845 y Fh(i)946 4830 y Fq(,)j Fj(i)f Fq(=)f(1)p Fj(;)17
b(:)g(:)g(:)f(;)h(N)10 b Fq(,)44 b(are)f(dra)m(wn)f(from)f(an)h(alphab)
s(et)f(of)h(four)g(sym)m(b)s(ols,)i Fj(a)3712 4845 y
Fh(i)3784 4830 y Fg(2)-165 4996 y(f)o Fq(+)p Fj(;)17
b Fg(\010)p Fj(;)g Fg(\000)p Fj(;)g Fg(\011g)q Fq(.)41
b(The)26 b(sym)m(b)s(ols)g(`+')f(and)h(`)p Fg(\000)p
Fq(')g(denote)g(a)f(p)s(ositiv)m(e)g(and)h(a)f(negativ)m(e)h
(transition,)f(resp)s(ectiv)m(ely)-8 b(.)p eop
%%Page: 4 4
4 3 bop -133 -101 a Fm(IEEE)32 b(T)-7 b(r)i(ansactions)35
b(on)e(Magnetics)p Fl(,)d(v)m(ol.)h(34,)h(Ma)m(y)f(1998)1854
b Fq(4)-165 289 y(The)27 b(sym)m(b)s(ol)f(`)p Fg(\010)p
Fq(')h(denotes)g(a)f(written)g(zero)h(\(no)f(transition\))f(whose)j
(nearest)f(preceding)g(non-zero)f(sym)m(b)s(ol)-165 454
y(is)32 b(a)g(`+',)h(while)f(`)p Fg(\011)p Fq(')h(denotes)h(a)e
(written)g(zero)h(whose)h(nearest)g(preceding)f(transition)e(is)h(a)g
(negativ)m(e)h(one,)-165 619 y(i.e.,)j(`)p Fg(\000)p
Fq('.)56 b(W)-8 b(e)37 b(in)m(tro)s(duce)f(this)h(notation)e(b)s
(ecause)j(a)e(simple)f(treatmen)m(t)i(of)f(transitions)f(as)i(`1's)g
(and)f(no)-165 785 y(transitions)d(as)h(`0's)h(is)f(blind)f(to)h
(signal)f(asymmetries)g(\(MR)i(head)g(asymmetries)e(and)i(base)g(line)e
(drifts\),)-165 950 y(whic)m(h)44 b(is)f(inappropriate)f(for)h(our)h
(problem.)75 b(In)44 b(Figure)f(2)g(a)h(sample)f(w)m(a)m(v)m(eform)h
(is)f(illustrated.)75 b(W)-8 b(e)-165 1115 y(exaggerate)37
b(in)f(Figure)f(2)h(the)h(signal)e(asymmetries)h(and)h(base)g(line)f
(shifts)g(to)h(mak)m(e)f(our)h(p)s(oin)m(t)e(clearer.)-165
1281 y(The)g(\014gure)f(also)f(sho)m(ws)j(the)e(written)g(sym)m(b)s
(ols)g Fj(a)1725 1296 y Fi(1)1765 1281 y Fj(;)17 b(:)g(:)g(:)f(;)h(a)
2035 1296 y Fi(18)2109 1281 y Fq(,)35 b(as)f(w)m(ell)f(as)i(the)f
(samples)g Fj(r)3192 1296 y Fi(1)3231 1281 y Fj(;)17
b(:)g(:)g(:)f(;)h(r)3494 1296 y Fi(18)3602 1281 y Fq(of)34
b(the)-165 1446 y(read-bac)m(k)f(w)m(a)m(v)m(eform,)g(sampled)f(at)h
(the)g(rate)f(of)g(one)h(sample)f(p)s(er)g(sym)m(b)s(ol)g(in)m(terv)-5
b(al.)-19 1730 y(When)42 b(the)g(written)f(sequence)k(of)c(sym)m(b)s
(ols)g Fj(a)1767 1745 y Fh(i)1795 1730 y Fq(,)j Fj(i)f
Fq(=)g(1)p Fj(;)17 b(:)g(:)g(:)e(;)i(N)10 b Fq(,)44 b(is)d(read,)j(the)
e(readbac)m(k)h(w)m(a)m(v)m(eform)-165 1895 y(is)36 b(passed)i(through)
e(a)g(pulse-shaping)g(equalizer)g(and)h(sampled)f(one)g(sample)g(p)s
(er)h(sym)m(b)s(ol,)g(resulting)e(in)-165 2060 y(the)j(sequence)i(of)d
(samples)g Fj(r)946 2075 y Fh(i)974 2060 y Fq(,)i Fj(i)e
Fq(=)f(1)p Fj(;)17 b(:)g(:)g(:)f(;)h(N)10 b Fq(.)58 b(Due)38
b(to)f(the)h(noise)g(in)e(the)i(system,)i(the)e(samples)g
Fj(r)3655 2075 y Fh(i)3720 2060 y Fq(are)-165 2226 y(realizations)27
b(of)h(random)h(v)-5 b(ariables.)41 b(The)30 b(maxim)m(um)d(lik)m
(eliho)s(o)s(d)f(detector)k(determines)f(the)h(sequence)i(of)-165
2391 y(sym)m(b)s(ols)g Fj(a)258 2406 y Fh(i)319 2391
y Fq(that)g(has)h(b)s(een)h(written,)e(b)m(y)i(maximizing)28
b(the)33 b(lik)m(eliho)s(o)s(d)d(function,)i(i.e.,)770
2674 y Fg(f)q Fq(^)-50 b Fj(a)871 2689 y Fi(1)911 2674
y Fj(;)17 b(:)g(:)g(:)f(;)i Fq(^)-50 b Fj(a)1181 2689
y Fh(N)1248 2674 y Fg(g)27 b Fq(=)h(arg)1582 2553 y Ff(\024)1626
2674 y Fq(max)1628 2734 y Fi(all)39 b Fh(a)1779 2744
y Fe(i)1824 2674 y Fj(f)11 b Fq(\()p Fj(r)1965 2689 y
Fi(1)2004 2674 y Fj(;)17 b(:)g(:)g(:)f(;)h(r)2267 2689
y Fh(N)2334 2674 y Fg(j)p Fj(a)2413 2689 y Fi(1)2452
2674 y Fj(;)g(:)g(:)g(:)f(;)h(a)2722 2689 y Fh(N)2789
2674 y Fq(\))2827 2553 y Ff(\025)2888 2674 y Fj(:)811
b Fq(\(1\))-165 2958 y(In)33 b(\(1\),)f(the)h(lik)m(eliho)s(o)s(d)d
(function)i Fj(f)11 b Fq(\()p Fj(r)1277 2973 y Fi(1)1316
2958 y Fj(;)17 b(:)g(:)g(:)f(;)h(r)1579 2973 y Fh(N)1646
2958 y Fg(j)p Fj(a)1725 2973 y Fi(1)1764 2958 y Fj(;)g(:)g(:)g(:)f(;)h
(a)2034 2973 y Fh(N)2101 2958 y Fq(\))32 b(is)h(the)g(join)m(t)e
(probabilit)m(y)g(densit)m(y)j(function)-165 3123 y(\(p)s(df)7
b(\))25 b(of)f(the)i(signal)e(samples)g Fj(r)1018 3138
y Fi(1)1058 3123 y Fj(;)17 b(:)g(:)g(:)f(;)h(r)1321 3138
y Fh(N)1388 3123 y Fq(,)26 b(conditioned)f(on)g(the)g(written)h(sym)m
(b)s(ols)f Fj(a)2999 3138 y Fi(1)3038 3123 y Fj(;)17
b(:)g(:)g(:)f(;)h(a)3308 3138 y Fh(N)3375 3123 y Fq(.)41
b(The)26 b(max-)-165 3289 y(imization)g(in)i(\(1\))h(is)g(done)h(o)m(v)
m(er)h(all)c(p)s(ossible)i(com)m(binations)f(of)h(sym)m(b)s(ols)g(in)g
(the)h(sequence)i Fg(f)p Fj(a)3397 3304 y Fi(1)3437 3289
y Fj(;)17 b(:)g(:)g(:)e(;)i(a)3706 3304 y Fh(N)3773 3289
y Fg(g)p Fq(.)-19 3572 y(Due)40 b(to)g(the)g(signal)e(dep)s(enden)m(t)k
(nature)e(of)g(media)e(noise)i(in)f(magnetic)g(recording,)j(the)e
(functional)-165 3737 y(form)29 b(of)i(the)g(join)m(t)f(conditional)e
(p)s(df)i Fj(f)11 b Fq(\()p Fj(r)1379 3752 y Fi(1)1418
3737 y Fj(;)17 b(:)g(:)g(:)f(;)h(r)1681 3752 y Fh(N)1748
3737 y Fg(j)p Fj(a)1827 3752 y Fi(1)1866 3737 y Fj(;)g(:)g(:)g(:)f(;)h
(a)2136 3752 y Fh(N)2203 3737 y Fq(\))31 b(in)f(\(1\))h(is)f
(di\013eren)m(t)h(for)f(di\013eren)m(t)h(sym)m(b)s(ol)-165
3903 y(sequences)43 b Fj(a)336 3918 y Fi(1)376 3903 y
Fj(;)17 b(:)g(:)g(:)e(;)i(a)645 3918 y Fh(N)712 3903
y Fq(.)66 b(Rather)40 b(than)g(making)f(this)h(distinction)e(with)i
(more)f(complex)h(but)g(cluttered)-165 4068 y(notation,)24
b(w)m(e)g(k)m(eep)h(the)f(notation)e(to)h(a)g(minim)m(um)d(b)m(y)25
b(using)e(simply)f(the)i(same)f(sym)m(b)s(ol)g Fj(f)34
b Fq(to)23 b(denote)h(these)-165 4233 y(di\013eren)m(t)32
b(functions.)44 b(W)-8 b(e)33 b(will)d(frequen)m(tly)j(p)s(oin)m(t)f
(out)g(this)g(distinction)f(in)h(our)g(discussions)h(throughout)-165
4399 y(the)g(text.)p eop
%%Page: 5 5
5 4 bop -133 -101 a Fm(IEEE)32 b(T)-7 b(r)i(ansactions)35
b(on)e(Magnetics)p Fl(,)d(v)m(ol.)h(34,)h(Ma)m(y)f(1998)1854
b Fq(5)-165 289 y Fp(2.1)135 b(General)46 b(Structure)e(of)h(CS-MLSD)
-165 636 y Fq(By)h(Ba)m(y)m(es)h(rule,)i(the)d(join)m(t)f(conditional)f
(p)s(df)h(\(lik)m(eliho)s(o)s(d)e(function\))i(is)g(factored)h(in)m(to)
f(a)h(pro)s(duct)g(of)-165 802 y(conditional)30 b(p)s(dfs)603
1109 y Fj(f)11 b Fq(\()p Fj(r)744 1124 y Fi(1)783 1109
y Fj(;)17 b(:)g(:)g(:)f(;)h(r)1046 1124 y Fh(N)1113 1109
y Fg(j)p Fj(a)1192 1124 y Fh(i)1220 1109 y Fj(;)g(:)g(:)g(:)f(;)h(a)
1490 1124 y Fh(N)1557 1109 y Fq(\))28 b(=)1752 1001 y
Fh(N)1730 1026 y Ff(Y)1726 1208 y Fh(i)p Fi(=1)1857 1109
y Fj(f)11 b Fq(\()p Fj(r)1998 1124 y Fh(i)2026 1109 y
Fg(j)p Fj(r)2098 1124 y Fh(i)p Fi(+1)2216 1109 y Fj(;)17
b(:)g(:)g(:)f(;)h(r)2479 1124 y Fh(N)2545 1109 y Fj(;)g(a)2640
1124 y Fi(1)2680 1109 y Fj(;)g(:)g(:)g(:)f(;)h(a)2950
1124 y Fh(N)3017 1109 y Fq(\))p Fj(:)644 b Fq(\(2\))-165
1412 y(T)-8 b(o)29 b(pro)s(ceed)h(and)g(obtain)e(more)h(concrete)h
(results,)h(w)m(e)f(no)m(w)h(exploit)d(the)i(nature)f(of)g(the)h(noise)
f(and)h(of)f(the)-165 1578 y(in)m(tersym)m(b)s(ol)i(in)m(terference)j
(in)e(magnetic)f(recording.)-165 1861 y Fn(Finite)38
b(correlation)f(length.)49 b Fq(W)-8 b(e)34 b(start)h(b)m(y)g(assuming)
f(that)g(the)h(conditional)c(p)s(dfs)k(in)f(Equation)g(\(2\))-165
2026 y(are)c(indep)s(enden)m(t)h(of)f(future)h(samples)e(after)h(some)g
(length)g Fj(L)e Fg(\025)g Fq(0.)43 b(W)-8 b(e)30 b(call)f
Fj(L)h Fq(the)h(correlation)d(length)i(of)-165 2192 y(the)j(noise.)43
b(This)33 b(indep)s(endence)h(leads)e(to)534 2475 y Fj(f)11
b Fq(\()p Fj(r)675 2490 y Fh(i)703 2475 y Fg(j)p Fj(r)775
2490 y Fh(i)p Fi(+1)893 2475 y Fj(;)17 b(:)g(:)g(:)e(;)i(r)1155
2490 y Fh(N)1222 2475 y Fj(;)g(a)1317 2490 y Fi(1)1357
2475 y Fj(;)g(:)g(:)g(:)e(;)i(a)1626 2490 y Fh(N)1694
2475 y Fq(\))27 b(=)h Fj(f)11 b Fq(\()p Fj(r)2004 2490
y Fh(i)2031 2475 y Fg(j)p Fj(r)2103 2490 y Fh(i)p Fi(+1)2221
2475 y Fj(;)17 b(:)g(:)g(:)f(;)h(r)2484 2490 y Fh(i)p
Fi(+)p Fh(L)2615 2475 y Fj(;)g(a)2710 2490 y Fi(1)2749
2475 y Fj(;)g(:)g(:)g(:)f(;)h(a)3019 2490 y Fh(N)3086
2475 y Fq(\))p Fj(:)575 b Fq(\(3\))-165 2877 y Fn(Finite)27
b(in)m(tersym)m(b)s(ol)f(in)m(terference.)40 b Fq(W)-8
b(e)25 b(further)g(assume)g(that)f(the)h(conditional)e(p)s(df)h(is)g
(indep)s(enden)m(t)-165 3042 y(of)g(sym)m(b)s(ols)g(that)g(are)g
Fo(not)g Fq(in)g(the)h Fj(K)7 b Fq(-neigh)m(b)s(orho)s(o)s(d)22
b(of)i Fj(r)1959 3057 y Fh(i)1987 3042 y Fj(;)17 b(:)g(:)g(:)f(;)h(r)
2250 3057 y Fh(i)p Fi(+)p Fh(L)2381 3042 y Fq(.)41 b(The)25
b(v)-5 b(alue)24 b(of)g Fj(K)34 b Fg(\025)29 b Fq(1)24
b(is)f(determined)-165 3208 y(b)m(y)29 b(the)h(length)e(of)g(the)h(in)m
(tersym)m(b)s(ol)f(in)m(terference)i(\(ISI\).)f(F)-8
b(or)28 b(example,)i(for)e(PR4)h(w)m(e)g(ha)m(v)m(e)h
Fj(K)35 b Fq(=)28 b(2,)h(while)-165 3373 y(for)36 b(EPR4)h
Fj(K)43 b Fq(=)34 b(3.)57 b(De\014ne)37 b Fj(K)1036 3388
y Fh(l)1097 3373 y Fg(\025)f Fq(0)h(as)g(the)g(length)g(of)f(the)i
(leading)d(\(an)m(ticausal\))h(ISI)h(and)g Fj(K)3500
3388 y Fh(t)3565 3373 y Fg(\025)e Fq(0)i(as)-165 3538
y(the)32 b(length)g(of)g(the)g(trailing)d(\(causal\))j(ISI,)h(suc)m(h)h
(that)e Fj(K)j Fq(=)27 b Fj(K)2207 3553 y Fh(l)2255 3538
y Fq(+)21 b Fj(K)2435 3553 y Fh(t)2486 3538 y Fq(+)g(1.)43
b(With)32 b(this)g(notation,)f(w)m(e)i(can)-165 3704
y(write)f(the)h(conditional)d(p)s(df)i(in)g(\(3\))g(as)335
3987 y Fj(f)11 b Fq(\()p Fj(r)476 4002 y Fh(i)504 3987
y Fg(j)p Fj(r)576 4002 y Fh(i)p Fi(+1)694 3987 y Fj(;)17
b(:)g(:)g(:)f(;)h(r)957 4002 y Fh(i)p Fi(+)p Fh(L)1087
3987 y Fj(;)g(a)1182 4002 y Fi(1)1222 3987 y Fj(;)g(:)g(:)g(:)f(;)h(a)
1492 4002 y Fh(N)1559 3987 y Fq(\))27 b(=)h Fj(f)11 b
Fq(\()p Fj(r)1869 4002 y Fh(i)1897 3987 y Fg(j)p Fj(r)1969
4002 y Fh(i)p Fi(+1)2087 3987 y Fj(;)17 b(:)g(:)g(:)e(;)i(r)2349
4002 y Fh(i)p Fi(+)p Fh(L)2480 3987 y Fj(;)g(a)2575 4002
y Fh(i)p Fd(\000)p Fh(K)2714 4014 y Fe(l)2742 3987 y
Fj(;)g(:)g(:)g(:)f(;)h(a)3012 4002 y Fh(i)p Fi(+)p Fh(L)p
Fi(+)p Fh(K)3254 4010 y Fe(t)3285 3987 y Fq(\))p Fj(:)376
b Fq(\(4\))-19 4389 y(Substituting)37 b(\(4\))g(in)m(to)f(\(2\))h(and)h
(applying)e(the)i(Ba)m(y)m(es)h(rule,)f(w)m(e)g(obtain)f(the)g
(factored)h(form)e(of)h(the)-165 4554 y(lik)m(eliho)s(o)s(d)29
b(function)j(\(conditional)e(p)s(df)7 b(\))334 4867 y
Fj(f)k Fq(\()p Fj(r)475 4882 y Fi(1)514 4867 y Fj(;)17
b(:)g(:)g(:)f(;)h(r)777 4882 y Fh(N)843 4867 y Fg(j)p
Fj(a)922 4882 y Fi(1)962 4867 y Fj(;)g(:)g(:)g(:)f(;)h(a)1232
4882 y Fh(N)1299 4867 y Fq(\))83 b(=)1604 4759 y Fh(N)1583
4784 y Ff(Y)1579 4966 y Fh(i)p Fi(=1)1709 4867 y Fj(f)11
b Fq(\()p Fj(r)1850 4882 y Fh(i)1878 4867 y Fg(j)p Fj(r)1950
4882 y Fh(i)p Fi(+1)2068 4867 y Fj(;)17 b(:)g(:)g(:)f(;)h(r)2331
4882 y Fh(N)2398 4867 y Fj(;)g(a)2493 4882 y Fi(1)2532
4867 y Fj(;)g(:)g(:)g(:)f(;)h(a)2802 4882 y Fh(N)2869
4867 y Fq(\))p eop
%%Page: 6 6
6 5 bop -133 -101 a Fm(IEEE)32 b(T)-7 b(r)i(ansactions)35
b(on)e(Magnetics)p Fl(,)d(v)m(ol.)h(34,)h(Ma)m(y)f(1998)1854
b Fq(6)1420 351 y(=)1604 243 y Fh(N)1583 268 y Ff(Y)1579
450 y Fh(i)p Fi(=1)1719 283 y Fj(f)11 b Fq(\()p Fj(r)1860
298 y Fh(i)1888 283 y Fj(;)17 b(r)1976 298 y Fh(i)p Fi(+1)2094
283 y Fj(;)g(:)g(:)g(:)f(;)h(r)2357 298 y Fh(i)p Fi(+)p
Fh(L)2488 283 y Fg(j)p Fj(a)2567 298 y Fh(i)p Fd(\000)p
Fh(K)2706 310 y Fe(l)2733 283 y Fj(;)g(:)g(:)g(:)f(;)h(a)3003
298 y Fh(i)p Fi(+)p Fh(L)p Fi(+)p Fh(K)3245 306 y Fe(t)3276
283 y Fq(\))p 1719 327 1595 4 v 1777 419 a Fj(f)11 b
Fq(\()p Fj(r)1918 434 y Fh(i)p Fi(+1)2036 419 y Fj(;)17
b(:)g(:)g(:)f(;)h(r)2299 434 y Fh(i)p Fi(+)p Fh(L)2430
419 y Fg(j)p Fj(a)2509 434 y Fh(i)p Fd(\000)p Fh(K)2648
446 y Fe(l)2675 419 y Fj(;)g(:)g(:)g(:)f(;)h(a)2945 434
y Fh(i)p Fi(+)p Fh(L)p Fi(+)p Fh(K)3187 442 y Fe(t)3218
419 y Fq(\))3324 351 y Fj(:)375 b Fq(\(5\))-165 659 y(The)38
b(factored)g(form)e(of)h(equation)g(\(5\))g(is)g(suitable)f(for)h
(applying)g(Viterbi-lik)m(e)e(dynamic)h(programming)-165
825 y(detection)22 b(tec)m(hniques.)42 b(Notice)22 b(that)g(equation)g
(\(5\))g(assumes)i(an)m(ticausal)d(factorization,)h(i.e.,)i(it)e(is)f
(deriv)m(ed)-165 990 y(b)m(y)39 b(taking)f(in)m(to)g(accoun)m(t)h(the)g
(e\013ect)h(of)e(the)h(samples)f Fj(r)1996 1005 y Fh(i)p
Fi(+1)2114 990 y Fj(;)17 b(:)g(:)g(:)f(;)h(r)2377 1005
y Fh(i)p Fi(+)p Fh(L)2546 990 y Fq(on)39 b Fj(r)2732
1005 y Fh(i)2760 990 y Fq(.)61 b(If)39 b(w)m(e)g(tak)m(e)h(in)m(to)e
(accoun)m(t)-165 1155 y(only)31 b(the)h(causal)f(e\013ects,)j(w)m(e)e
(can)g(deriv)m(e)h(the)f(causal)f(equiv)-5 b(alen)m(t)32
b(of)f(\(5\))g(as)h Fj(f)11 b Fq(\()p Fj(r)2885 1170
y Fi(1)2924 1155 y Fj(;)17 b(:)g(:)g(:)f(;)h(r)3187 1170
y Fh(N)3254 1155 y Fg(j)p Fj(a)3333 1170 y Fi(1)3372
1155 y Fj(;)g(:)g(:)g(:)f(;)h(a)3642 1170 y Fh(N)3709
1155 y Fq(\))28 b(=)-140 1238 y Fh(N)-147 1254 y Ff(Q)-165
1395 y Fh(i)p Fi(=1)-25 1262 y Fh(f)7 b Fi(\()p Fh(r)75
1272 y Fe(i)102 1262 y Fh(;r)154 1272 y Fe(i)p Fc(+1)257
1262 y Fh(;:::)o(;r)388 1273 y Fe(i)p Fc(+)p Fe(L)502
1262 y Fd(j)p Fh(a)559 1273 y Fe(i)p Fb(\000)p Fe(K)680
1291 y(l)709 1262 y Fh(;:::)n(;a)844 1273 y Fe(i)p Fc(+)p
Fe(L)p Fc(+)p Fe(K)1053 1286 y(t)1085 1262 y Fi(\))p
-25 1297 1137 4 v 14 1355 a Fh(f)g Fi(\()p Fh(r)114 1365
y Fe(i)140 1355 y Fh(;:::)o(;r)271 1366 y Fe(i)p Fc(+)p
Fe(L)p Fb(\000)p Fc(1)464 1355 y Fd(j)p Fh(a)521 1366
y Fe(i)p Fb(\000)p Fe(K)642 1384 y(l)670 1355 y Fh(;:::)o(;a)806
1366 y Fe(i)p Fc(+)p Fe(L)p Fc(+)p Fe(K)1015 1379 y(t)1047
1355 y Fi(\))1122 1321 y Fq(.)61 b(In)39 b([21],)h(w)m(e)f(consider)g
(the)g(causal)f(form)m(ulation)d(of)j(the)h(CS-MLSD.)-165
1486 y(W)-8 b(e)34 b(could)g(com)m(bine)g(the)h(causal)f(and)h(an)m
(ticausal)e(factorization)f(and)j(\014nd)g(the)g(geometric)e(mean)h(of)
g(the)-165 1651 y(t)m(w)m(o)e(to)f(form)f(a)h(causal-an)m(ticausal)e
(factorization.)41 b(Since)32 b(this)e(only)h(complicates)f(deriv)-5
b(ations)30 b(and)i(do)s(es)-165 1817 y(not)g(pro)m(vide)h(further)g
(insigh)m(t,)e(w)m(e)j(will)c(w)m(ork)k(only)e(with)g(the)h(an)m
(ticausal)f(Equation)g(\(5\).)-19 2100 y(Maximizing)24
b(the)j(lik)m(eliho)s(o)s(d)d(function)i(in)f(\(5\))i(is)f(equiv)-5
b(alen)m(t)26 b(to)g(minimizing)d(its)j(negativ)m(e)g(logarithm.)-165
2266 y(Th)m(us,)34 b(the)f(maxim)m(um)d(lik)m(eliho)s(o)s(d)f(detector)
34 b(is)e(no)m(w)280 2573 y Fg(f)q Fq(^)-50 b Fj(a)381
2588 y Fi(1)421 2573 y Fj(;)17 b(:)g(:)g(:)f(;)i Fq(^)-50
b Fj(a)691 2588 y Fh(N)758 2573 y Fg(g)83 b Fq(=)g(arg)1203
2427 y Ff(")1259 2573 y Fq(min)1251 2633 y Fi(all)39
b Fh(a)1402 2643 y Fe(i)1446 2573 y Fq(log)1614 2465
y Fh(N)1592 2490 y Ff(Y)1588 2672 y Fh(i)p Fi(=1)1787
2506 y Fj(f)11 b Fq(\()p Fj(r)1928 2521 y Fh(i)p Fi(+1)2046
2506 y Fj(;)17 b(:)g(:)g(:)f(;)h(r)2309 2521 y Fh(i)p
Fi(+)p Fh(L)2439 2506 y Fg(j)p Fj(a)2518 2521 y Fh(i)p
Fd(\000)p Fh(K)2657 2533 y Fe(l)2685 2506 y Fj(;)g(:)g(:)g(:)f(;)h(a)
2955 2521 y Fh(i)p Fi(+)p Fh(L)p Fi(+)p Fh(K)3197 2529
y Fe(t)3228 2506 y Fq(\))p 1729 2550 1595 4 v 1729 2641
a Fj(f)11 b Fq(\()p Fj(r)1870 2656 y Fh(i)1898 2641 y
Fj(;)17 b(r)1986 2656 y Fh(i)p Fi(+1)2104 2641 y Fj(;)g(:)g(:)g(:)f(;)h
(r)2367 2656 y Fh(i)p Fi(+)p Fh(L)2497 2641 y Fg(j)p
Fj(a)2576 2656 y Fh(i)p Fd(\000)p Fh(K)2715 2668 y Fe(l)2743
2641 y Fj(;)g(:)g(:)g(:)f(;)h(a)3013 2656 y Fh(i)p Fi(+)p
Fh(L)p Fi(+)p Fh(K)3255 2664 y Fe(t)3286 2641 y Fq(\))3334
2427 y Ff(#)891 2875 y Fq(=)83 b(arg)1203 2729 y Ff(")1259
2875 y Fq(min)1251 2935 y Fi(all)39 b Fh(a)1402 2945
y Fe(i)1474 2767 y Fh(N)1446 2792 y Ff(X)1448 2975 y
Fh(i)p Fi(=1)1582 2875 y Fq(log)1793 2808 y Fj(f)11 b
Fq(\()p Fj(r)1934 2823 y Fh(i)p Fi(+1)2052 2808 y Fj(;)17
b(:)g(:)g(:)e(;)i(r)2314 2823 y Fh(i)p Fi(+)p Fh(L)2445
2808 y Fg(j)p Fj(a)2524 2823 y Fh(i)p Fd(\000)p Fh(K)2663
2835 y Fe(l)2691 2808 y Fj(;)g(:)g(:)g(:)e(;)i(a)2960
2823 y Fh(i)p Fi(+)p Fh(L)p Fi(+)p Fh(K)3202 2831 y Fe(t)3234
2808 y Fq(\))p 1735 2852 V 1735 2944 a Fj(f)11 b Fq(\()p
Fj(r)1876 2959 y Fh(i)1903 2944 y Fj(;)17 b(r)1991 2959
y Fh(i)p Fi(+1)2109 2944 y Fj(;)g(:)g(:)g(:)f(;)h(r)2372
2959 y Fh(i)p Fi(+)p Fh(L)2503 2944 y Fg(j)p Fj(a)2582
2959 y Fh(i)p Fd(\000)p Fh(K)2721 2971 y Fe(l)2749 2944
y Fj(;)g(:)g(:)g(:)e(;)i(a)3018 2959 y Fh(i)p Fi(+)p
Fh(L)p Fi(+)p Fh(K)3260 2967 y Fe(t)3292 2944 y Fq(\))3340
2729 y Ff(#)891 3178 y Fq(=)83 b(arg)1203 3032 y Ff(")1259
3178 y Fq(min)1251 3238 y Fi(all)39 b Fh(a)1402 3248
y Fe(i)1474 3070 y Fh(N)1446 3095 y Ff(X)1448 3277 y
Fh(i)p Fi(=1)1582 3178 y Fg(M)1702 3193 y Fh(i)1730 3178
y Fq(\()p Fj(r)1812 3193 y Fh(i)1840 3178 y Fj(;)17 b(r)1928
3193 y Fh(i)p Fi(+1)2046 3178 y Fj(;)g(:)g(:)g(:)f(;)h(r)2309
3193 y Fh(i)p Fi(+)p Fh(L)2440 3178 y Fj(;)g(a)2535 3193
y Fh(i)p Fd(\000)p Fh(K)2674 3205 y Fe(l)2701 3178 y
Fj(;)g(:)g(:)g(:)f(;)h(a)2971 3193 y Fh(i)p Fi(+)p Fh(L)p
Fi(+)p Fh(K)3213 3201 y Fe(t)3244 3178 y Fq(\))3282 3032
y Ff(#)3347 3178 y Fj(:)352 b Fq(\(6\))-165 3486 y(The)37
b(sym)m(b)s(ol)f Fg(M)497 3501 y Fh(i)562 3486 y Fq(represen)m(ts)j
(the)e(branc)m(h)g(metric)f(of)g(the)h(trellis/tree)e(in)h(the)h
(Viterbi-lik)m(e)d(algorithm.)-165 3652 y(The)g(metric)f(is)h(a)f
(function)g(of)h(the)g(observ)m(ed)i(samples)d Fj(r)2000
3667 y Fh(i)2028 3652 y Fj(;)17 b(r)2116 3667 y Fh(i)p
Fi(+1)2234 3652 y Fj(;)g(:)g(:)g(:)f(;)h(r)2497 3667
y Fh(i)p Fi(+)p Fh(L)2628 3652 y Fq(.)47 b(It)34 b(is)g(also)e(dep)s
(enden)m(t)k(on)e(the)-165 3817 y(p)s(ostulated)24 b(sequence)j(of)d
(written)g(sym)m(b)s(ols)g Fj(a)1554 3832 y Fh(i)p Fd(\000)p
Fh(K)1693 3844 y Fe(l)1721 3817 y Fj(;)17 b(:)g(:)g(:)f(;)h(a)1991
3832 y Fh(i)p Fi(+)p Fh(L)p Fi(+)p Fh(K)2233 3840 y Fe(t)2265
3817 y Fq(,)26 b(whic)m(h)f(ensures)h(the)f(signal-dep)s(endence)-165
3982 y(of)39 b(the)h(detector.)66 b(As)41 b(a)e(consequence,)45
b(the)40 b(branc)m(h)h(metrics)e(for)g(ev)m(ery)j(branc)m(h)e(in)f(the)
i(tree/trellis)d(is)-165 4148 y(based)33 b(on)g(its)f(corresp)s(onding)
g(signal/noise)f(statistics.)-165 4555 y Fp(2.2)135 b(Sp)t(eci\014c)44
b(Branc)l(h)g(Metrics)h(for)h(the)f(CS-MLSD)-165 4903
y Fq(W)-8 b(e)27 b(next)h(consider)f(sp)s(eci\014c)h(expressions)h(for)
d(the)i(branc)m(h)f(metrics)g(that)g(result)f(under)i(di\013eren)m(t)f
(assump-)-165 5068 y(tions)32 b(on)g(the)h(noise)g(statistics.)p
eop
%%Page: 7 7
7 6 bop -133 -101 a Fm(IEEE)32 b(T)-7 b(r)i(ansactions)35
b(on)e(Magnetics)p Fl(,)d(v)m(ol.)h(34,)h(Ma)m(y)f(1998)1854
b Fq(7)-165 289 y Fn(Euclidian)37 b(branc)m(h)k(metric.)95
b Fq(In)35 b(the)g(simplest)f(case,)i(the)f(noise)f(samples)g(are)h
(realizations)d(of)i(inde-)-165 454 y(p)s(enden)m(t)43
b(iden)m(tically)d(distributed)i(Gaussian)f(random)g(v)-5
b(ariables)41 b(with)h(zero)g(mean)g(and)g(v)-5 b(ariance)42
b Fj(\033)3784 418 y Fi(2)3823 454 y Fq(.)-165 619 y(This)31
b(is)g(a)g(white)h(Gaussian)f(noise)g(assumption.)43
b(This)31 b(implies)e(that)j(the)g(correlation)d(distance)j(is)f
Fj(L)d Fq(=)g(0)-165 785 y(and)45 b(that)g(the)g(noise)g(p)s(dfs)g(ha)m
(v)m(e)i(the)e(same)g(form)f(for)h(all)e(noise)i(samples.)80
b(The)46 b(total)e(ISI)h(length)g(is)-165 950 y(assumed)40
b(to)f(b)s(e)g Fj(K)46 b Fq(=)39 b Fj(K)825 965 y Fh(l)878
950 y Fq(+)27 b Fj(K)1064 965 y Fh(t)1120 950 y Fq(+)f(1,)41
b(where)g Fj(K)1711 965 y Fh(l)1776 950 y Fq(and)e Fj(K)2055
965 y Fh(t)2124 950 y Fq(are)h(the)f(leading)f(and)h(trailing)d(ISI)k
(lengths,)-165 1115 y(resp)s(ectiv)m(ely)-8 b(.)44 b(The)34
b(conditional)c(signal)h(p)s(dfs)h(are)h(factored)g(as)510
1343 y Fj(f)11 b Fq(\()p Fj(r)651 1358 y Fh(i)p Fi(+1)769
1343 y Fj(;)17 b(:)g(:)g(:)f(;)h(r)1032 1358 y Fh(i)p
Fi(+)p Fh(L)1163 1343 y Fg(j)p Fj(a)1242 1358 y Fh(i)p
Fd(\000)p Fh(K)1381 1370 y Fe(l)1408 1343 y Fj(;)g(:)g(:)g(:)f(;)h(a)
1678 1358 y Fh(i)p Fi(+)p Fh(L)p Fi(+)p Fh(K)1920 1366
y Fe(t)1951 1343 y Fq(\))p 452 1387 1595 4 v 452 1479
a Fj(f)11 b Fq(\()p Fj(r)593 1494 y Fh(i)621 1479 y Fj(;)17
b(r)709 1494 y Fh(i)p Fi(+1)827 1479 y Fj(;)g(:)g(:)g(:)f(;)h(r)1090
1494 y Fh(i)p Fi(+)p Fh(L)1220 1479 y Fg(j)p Fj(a)1299
1494 y Fh(i)p Fd(\000)p Fh(K)1438 1506 y Fe(l)1466 1479
y Fj(;)g(:)g(:)g(:)f(;)h(a)1736 1494 y Fh(i)p Fi(+)p
Fh(L)p Fi(+)p Fh(K)1978 1502 y Fe(t)2009 1479 y Fq(\))2085
1411 y(=)2188 1320 y Fg(p)p 2271 1320 207 4 v 91 x Fq(2)p
Fj(\031)t(\033)2438 1382 y Fi(2)2494 1411 y Fq(exp)2660
1264 y Ff(")2718 1343 y Fq(\()p Fj(r)2800 1358 y Fh(i)2850
1343 y Fg(\000)23 b Fj(m)3035 1358 y Fh(i)3063 1343 y
Fq(\))3101 1307 y Fi(2)p 2718 1387 423 4 v 2856 1479
a Fq(2)p Fj(\033)2964 1450 y Fi(2)3151 1264 y Ff(#)3216
1411 y Fj(:)483 b Fq(\(7\))-165 1706 y(Here)34 b(the)f(mean)g(signal)f
Fj(m)858 1721 y Fh(i)919 1706 y Fq(is)h(dep)s(enden)m(t)i(on)f(the)f
(written)g(sequence)j(of)d(sym)m(b)s(ols.)45 b(F)-8 b(or)33
b(example,)g(for)g(a)-165 1871 y(PR4)j(c)m(hannel,)j
Fj(m)531 1886 y Fh(i)594 1871 y Fg(2)c(f\000)p Fq(1)p
Fj(;)17 b Fq(0)p Fj(;)g Fq(1)p Fg(g)o Fq(,)38 b(for)e(details)f(see,)k
(e.g.,)f([3)o(,)f(4].)56 b(The)38 b(branc)m(h/tree)g(metric)d(is)i
(then)g(the)-165 2037 y(con)m(v)m(en)m(tional)32 b(Euclidian)f
(distance)i(metric)1349 2320 y Fg(M)1469 2335 y Fh(i)1524
2320 y Fq(=)28 b Fj(N)1716 2279 y Fi(2)1706 2345 y Fh(i)1783
2320 y Fq(=)g(\()p Fj(r)1969 2335 y Fh(i)2019 2320 y
Fg(\000)23 b Fj(m)2204 2335 y Fh(i)2232 2320 y Fq(\))2270
2279 y Fi(2)2309 2320 y Fj(:)1390 b Fq(\(8\))-165 2743
y Fn(V)-9 b(ariance)31 b(dep)s(enden)m(t)i(branc)m(h)g(metric.)96
b Fq(W)-8 b(e)28 b(assume)g(again)f(that)g(the)i(noise)e(samples)h(are)
g(samples)-165 2908 y(of)j(indep)s(enden)m(t)i(Gaussian)f(v)-5
b(ariables,)30 b(but)i(that)g(their)f(v)-5 b(ariance)32
b(dep)s(ends)h(on)f(the)g(written)g(sequence)j(of)-165
3074 y(sym)m(b)s(ols.)42 b(The)31 b(noise)f(correlation)e(length)i(is)g
(still)d Fj(L)h Fq(=)g(0,)i(but)h(the)f(v)-5 b(ariance)30
b(of)g(the)g(noise)g(samples)g(is)f(no)-165 3239 y(longer)j(constan)m
(t)i(for)f(all)f(samples.)45 b(The)35 b(v)-5 b(ariance)33
b(is)f Fj(\033)1955 3203 y Fi(2)1951 3264 y Fh(i)1995
3239 y Fq(,)i(where)g(the)g(index)g Fj(i)f Fq(denotes)i(the)f(dep)s
(endence)-165 3404 y(on)i(the)h(written)f(sym)m(b)s(ol)f(sequence.)57
b(As)37 b(for)f(the)h(Euclidian)d(metric,)j(w)m(e)g(assume)g(the)f
(total)f(ISI)i(length)-165 3570 y(to)32 b(b)s(e)h Fj(K)h
Fq(=)28 b Fj(K)391 3585 y Fh(l)439 3570 y Fq(+)22 b Fj(K)620
3585 y Fh(t)672 3570 y Fq(+)g(1.)43 b(The)34 b(conditional)c(signal)h
(p)s(df)h(is)g(factored)h(to)f(giv)m(e)510 3797 y Fj(f)11
b Fq(\()p Fj(r)651 3812 y Fh(i)p Fi(+1)769 3797 y Fj(;)17
b(:)g(:)g(:)f(;)h(r)1032 3812 y Fh(i)p Fi(+)p Fh(L)1163
3797 y Fg(j)p Fj(a)1242 3812 y Fh(i)p Fd(\000)p Fh(K)1381
3824 y Fe(l)1408 3797 y Fj(;)g(:)g(:)g(:)f(;)h(a)1678
3812 y Fh(i)p Fi(+)p Fh(L)p Fi(+)p Fh(K)1920 3820 y Fe(t)1951
3797 y Fq(\))p 452 3842 1595 4 v 452 3933 a Fj(f)11 b
Fq(\()p Fj(r)593 3948 y Fh(i)621 3933 y Fj(;)17 b(r)709
3948 y Fh(i)p Fi(+1)827 3933 y Fj(;)g(:)g(:)g(:)f(;)h(r)1090
3948 y Fh(i)p Fi(+)p Fh(L)1220 3933 y Fg(j)p Fj(a)1299
3948 y Fh(i)p Fd(\000)p Fh(K)1438 3960 y Fe(l)1466 3933
y Fj(;)g(:)g(:)g(:)f(;)h(a)1736 3948 y Fh(i)p Fi(+)p
Fh(L)p Fi(+)p Fh(K)1978 3956 y Fe(t)2009 3933 y Fq(\))2085
3865 y(=)2188 3758 y Ff(q)p 2271 3758 207 4 v 107 x Fq(2)p
Fj(\031)t(\033)2438 3831 y Fi(2)2434 3888 y Fh(i)2494
3865 y Fq(exp)2660 3719 y Ff(")2718 3797 y Fq(\()p Fj(r)2800
3812 y Fh(i)2850 3797 y Fg(\000)23 b Fj(m)3035 3812 y
Fh(i)3063 3797 y Fq(\))3101 3761 y Fi(2)p 2718 3842 423
4 v 2856 3933 a Fq(2)p Fj(\033)2964 3899 y Fi(2)2960
3956 y Fh(i)3151 3719 y Ff(#)3216 3865 y Fj(:)483 b Fq(\(9\))-165
4160 y(The)33 b(corresp)s(onding)g(branc)m(h)g(metric)f(is)967
4452 y Fg(M)1087 4467 y Fh(i)1143 4452 y Fq(=)27 b(log)17
b Fj(\033)1448 4411 y Fi(2)1444 4477 y Fh(i)1510 4452
y Fq(+)1618 4385 y Fj(N)1706 4349 y Fi(2)1696 4409 y
Fh(i)p 1618 4429 128 4 v 1632 4521 a Fj(\033)1691 4486
y Fi(2)1687 4543 y Fh(i)1783 4452 y Fq(=)28 b(log)16
b Fj(\033)2088 4411 y Fi(2)2084 4477 y Fh(i)2150 4452
y Fq(+)2258 4385 y(\()p Fj(r)2340 4400 y Fh(i)2390 4385
y Fg(\000)23 b Fj(m)2575 4400 y Fh(i)2603 4385 y Fq(\))2641
4349 y Fi(2)p 2258 4429 423 4 v 2420 4521 a Fj(\033)2479
4486 y Fi(2)2475 4543 y Fh(i)2691 4452 y Fj(;)959 b Fq(\(10\))-165
4745 y(whic)m(h)33 b(is)f(the)h(metric)e(presen)m(ted)k(in)d([16,)g
(17].)p eop
%%Page: 8 8
8 7 bop -133 -101 a Fm(IEEE)32 b(T)-7 b(r)i(ansactions)35
b(on)e(Magnetics)p Fl(,)d(v)m(ol.)h(34,)h(Ma)m(y)f(1998)1854
b Fq(8)-165 289 y Fn(Correlation-sensitiv)m(e)38 b(branc)m(h)k(metric.)
96 b Fq(In)36 b(the)g(most)g(general)f(case,)j(the)e(correlation)e
(length)i(is)-165 454 y Fj(L)42 b(>)h Fq(0.)69 b(The)42
b(leading)e(and)h(trailing)d(ISI)k(lengths)f(are)h Fj(K)2075
469 y Fh(l)2142 454 y Fq(and)f Fj(K)2423 469 y Fh(t)2453
454 y Fq(,)i(resp)s(ectiv)m(ely)-8 b(.)71 b(The)42 b(noise)f(is)g(no)m
(w)-165 619 y(considered)35 b(to)e(b)s(e)i(b)s(oth)f(correlated)g(and)g
(signal-dep)s(enden)m(t.)48 b(W)-8 b(e)34 b(assume)h(join)m(t)e
(Gaussian)h(noise)g(p)s(dfs.)-165 785 y(This)g(assumption)g(is)f(w)m
(ell)h(justi\014ed)g(in)g(magnetic)f(recording)h(since)g(the)h(exp)s
(erimen)m(tal)e(evidence)j(sho)m(ws)-165 950 y(that)27
b(the)h(dominan)m(t)e(media)h(noise)g(mo)s(des)h(ha)m(v)m(e)h
(Gaussian-lik)m(e)d(histograms)g([22)o(].)42 b(The)29
b(conditional)c(p)s(dfs)-165 1115 y(do)32 b(not)h(factor)f(out)g(in)g
(this)g(general)g(case,)i(so)e(w)m(e)i(ha)m(v)m(e)g(the)f(general)f
(form)f(for)h(the)h(p)s(df)318 1380 y Fj(f)11 b Fq(\()p
Fj(r)459 1395 y Fh(i)p Fi(+1)577 1380 y Fj(;)17 b(:)g(:)g(:)f(;)h(r)840
1395 y Fh(i)p Fi(+)p Fh(L)971 1380 y Fg(j)p Fj(a)1050
1395 y Fh(i)p Fd(\000)p Fh(K)1189 1407 y Fe(l)1216 1380
y Fj(;)g(:)g(:)g(:)f(;)h(a)1486 1395 y Fh(i)p Fi(+)p
Fh(L)p Fi(+)p Fh(K)1728 1403 y Fe(t)1760 1380 y Fq(\))p
260 1424 1595 4 v 260 1515 a Fj(f)11 b Fq(\()p Fj(r)401
1530 y Fh(i)429 1515 y Fj(;)17 b(r)517 1530 y Fh(i)p
Fi(+1)635 1515 y Fj(;)g(:)g(:)g(:)f(;)h(r)898 1530 y
Fh(i)p Fi(+)p Fh(L)1029 1515 y Fg(j)p Fj(a)1108 1530
y Fh(i)p Fd(\000)p Fh(K)1247 1542 y Fe(l)1274 1515 y
Fj(;)g(:)g(:)g(:)f(;)h(a)1544 1530 y Fh(i)p Fi(+)p Fh(L)p
Fi(+)p Fh(K)1786 1538 y Fe(t)1817 1515 y Fq(\))1893 1447
y(=)1997 1268 y Ff(v)1997 1314 y(u)1997 1364 y(u)1997
1414 y(t)p 2084 1268 624 4 v 2094 1380 a Fq(\(2)p Fj(\031)t
Fq(\))2278 1351 y Fh(L)p Fi(+1)2437 1380 y Fq(det)g Fn(C)2670
1395 y Fh(i)p 2094 1424 604 4 v 2155 1515 a Fq(\(2)p
Fj(\031)t Fq(\))2339 1487 y Fh(L)2407 1515 y Fq(det)g
Fn(c)2609 1530 y Fh(i)2718 1361 y Fq(exp)2883 1264 y
Ff(h)2923 1361 y Fj(N)p 2923 1374 89 4 v 3011 1319 a
Fi(T)3011 1385 y Fh(i)3066 1361 y Fn(C)3147 1320 y Fd(\000)p
Fi(1)3147 1384 y Fh(i)3242 1361 y Fj(N)p 3242 1374 V
3330 1382 a Fh(i)3358 1264 y Ff(i)p 2718 1424 680 4 v
2764 1533 a Fq(exp)2929 1437 y Ff(h)2969 1533 y Fj(n)p
2969 1546 59 4 v -34 x Fi(T)3027 1556 y Fh(i)3082 1533
y Fn(c)3132 1492 y Fd(\000)p Fi(1)3132 1556 y Fh(i)3226
1533 y Fj(n)p 3226 1546 V 21 x Fh(i)3312 1437 y Ff(i)3407
1447 y Fj(:)243 b Fq(\(11\))-165 1784 y(The)32 b(\()p
Fj(L)19 b Fq(+)f(1\))h Fg(\002)g Fq(\()p Fj(L)h Fq(+)e(1\))31
b(matrix)e Fn(C)1185 1799 y Fh(i)1244 1784 y Fq(is)i(the)g(co)m(v)-5
b(ariance)31 b(matrix)f(of)g(the)h(data)g(samples)g Fj(r)3196
1799 y Fh(i)3224 1784 y Fj(;)17 b(r)3312 1799 y Fh(i)p
Fi(+1)3430 1784 y Fj(;)g(:)g(:)g(:)f(;)h(r)3693 1799
y Fh(i)p Fi(+)p Fh(L)3823 1784 y Fq(,)-165 1950 y(when)38
b(a)g(sequence)i(of)d(sym)m(b)s(ols)g Fj(a)1134 1965
y Fh(i)p Fd(\000)p Fh(K)1273 1977 y Fe(l)1301 1950 y
Fj(;)17 b(:)g(:)g(:)f(;)h(a)1571 1965 y Fh(i)p Fi(+)p
Fh(L)p Fi(+)p Fh(K)1813 1973 y Fe(t)1882 1950 y Fq(is)37
b(written.)58 b(The)39 b(matrix)d Fn(c)2957 1965 y Fh(i)3022
1950 y Fq(in)h(the)h(denominator)-165 2134 y(of)26 b(\(11\))g(is)h(the)
g Fj(L)10 b Fg(\002)g Fj(L)29 b Fq(lo)m(w)m(er)e(principal)e(submatrix)
h(of)g Fn(C)1947 2149 y Fh(i)2003 2134 y Fq(=)2107 1988
y Ff(")2197 2073 y Fg(\001)107 b(\001)2197 2194 y(\001)82
b Fn(c)2357 2209 y Fh(i)2427 1988 y Ff(#)2475 2134 y
Fq(.)42 b(The)28 b(\()p Fj(L)10 b Fq(+)g(1\)-dimensional)24
b(v)m(ector)-165 2311 y Fj(N)p -165 2324 89 4 v -77 2332
a Fh(i)-11 2311 y Fq(is)37 b(the)h(v)m(ector)h(of)e(di\013erences)h(b)s
(et)m(w)m(een)i(the)e(observ)m(ed)h(samples)f(and)f(their)g(exp)s
(ected)j(v)-5 b(alues)37 b(when)-165 2477 y(the)c(sequence)i(of)d(sym)m
(b)s(ols)g Fj(a)941 2492 y Fh(i)p Fd(\000)p Fh(K)1080
2504 y Fe(l)1108 2477 y Fj(;)17 b(:)g(:)g(:)f(;)h(a)1378
2492 y Fh(i)p Fi(+)p Fh(L)p Fi(+)p Fh(K)1620 2500 y Fe(t)1684
2477 y Fq(is)32 b(written,)g(i.e.,)638 2760 y Fj(N)p
638 2773 V 726 2781 a Fh(i)782 2760 y Fq(=)886 2664 y
Ff(h)966 2759 y Fq(\()p Fj(r)1048 2774 y Fh(i)1099 2759
y Fg(\000)22 b Fj(m)1283 2774 y Fh(i)1312 2759 y Fq(\))83
b(\()p Fj(r)1515 2774 y Fh(i)p Fi(+1)1655 2759 y Fg(\000)23
b Fj(m)1840 2774 y Fh(i)p Fi(+1)1958 2759 y Fq(\))83
b Fg(\001)17 b(\001)g(\001)82 b Fq(\()p Fj(r)2361 2774
y Fh(i)p Fi(+)p Fh(L)2514 2759 y Fg(\000)22 b Fj(m)2698
2774 y Fh(i)p Fi(+)p Fh(L)2830 2759 y Fq(\))2909 2664
y Ff(i)2948 2687 y Fi(T)3020 2760 y Fj(:)630 b Fq(\(12\))-165
3055 y(The)35 b(v)m(ector)h Fj(n)p 332 3068 59 4 v 21
x Fh(i)453 3055 y Fq(collects)e(the)h(last)f Fj(L)g Fq(elemen)m(ts)h
(of)f Fj(N)p 1768 3068 89 4 v 1857 3076 a Fh(i)1885 3055
y Fq(,)h Fj(n)p 1947 3068 59 4 v 2006 3076 a Fh(i)2065
3055 y Fq(=)2172 2959 y Ff(h)2253 3054 y Fq(\()p Fj(r)2335
3069 y Fh(i)p Fi(+1)2475 3054 y Fg(\000)23 b Fj(m)2660
3069 y Fh(i)p Fi(+1)2778 3054 y Fq(\))83 b Fg(\001)17
b(\001)g(\001)81 b Fq(\()p Fj(r)3180 3069 y Fh(i)p Fi(+)p
Fh(L)3334 3054 y Fg(\000)22 b Fj(m)3518 3069 y Fh(i)p
Fi(+)p Fh(L)3650 3054 y Fq(\))3729 2959 y Ff(i)3768 2982
y Fi(T)3823 3055 y Fq(.)-165 3220 y(With)32 b(this)g(notation,)f(the)i
(general)f(correlation-sensitiv)m(e)f(metric)h(is)967
3504 y Fg(M)1087 3519 y Fh(i)1142 3504 y Fq(=)c(log)1398
3436 y(det)18 b Fn(C)1632 3451 y Fh(i)p 1398 3481 262
4 v 1414 3572 a Fq(det)f Fn(c)1616 3587 y Fh(i)1692 3504
y Fq(+)22 b Fj(N)p 1790 3517 89 4 v 1878 3462 a Fi(T)1878
3528 y Fh(i)1933 3504 y Fn(C)2014 3463 y Fd(\000)p Fi(1)2014
3528 y Fh(i)2109 3504 y Fj(N)p 2109 3517 V 2197 3525
a Fh(i)2248 3504 y Fg(\000)g Fj(n)p 2347 3517 59 4 v
-41 x Fi(T)2405 3528 y Fh(i)2461 3504 y Fn(c)2511 3463
y Fd(\000)p Fi(1)2511 3528 y Fh(i)2605 3504 y Fj(n)p
2605 3517 V 21 x Fh(i)2691 3504 y Fj(:)959 b Fq(\(13\))-165
3787 y(The)28 b(computation)d(of)i(the)h(metric)e(written)h(as)g(in)f
(\(13\))h(requires)h(roughly)e(4)p Fj(L)p Fq(\()p Fj(L)11
b Fq(+)g(1\))27 b(m)m(ultiplications.)38 b(In)-165 3953
y(our)29 b(recen)m(t)i(w)m(ork)f([21)o(],)h(w)m(e)f(sho)m(w)h(that)e
(the)g(metric)g(in)f(\(13\))h(can)h(b)s(e)f(implemen)m(ted)f(using)h
(an)h Fj(L)p Fq(-tap)f(\014nite)-165 4118 y(impulse)g(resp)s(onse)j
(\(FIR\))e(\014lter,)g(bringing)f(the)i(computational)d(complexit)m(y)h
(do)m(wn)j(to)e(only)g Fj(L)h Fq(m)m(ultipli-)-165 4283
y(cations.)58 b(The)38 b(w)m(ell-b)s(eha)m(v)m(ed)g(impulse)f(resp)s
(onse)i(of)e(FIR)g(\014lters)g(and)h(the)g(computational)d(complexit)m
(y)-165 4449 y(only)d(linearly)f(prop)s(ortional)g(to)h
Fj(L)i Fq(mak)m(e)f(this)g(metric)e(attractiv)m(e)i(for)g(practical)e
(implemen)m(tations)g(ev)m(en)-165 4614 y(for)h(fairly)e(large)i
Fj(L)p Fq(.)3776 4779 y Fa(2)-19 5063 y Fq(In)41 b(the)h(deriv)-5
b(ations)39 b(of)i(the)g(branc)m(h)h(metrics)f(\(8\),)h(\(10\))f(and)g
(\(13\),)h(w)m(e)g(made)f(no)g(assumptions)f(on)p eop
%%Page: 9 9
9 8 bop -133 -101 a Fm(IEEE)32 b(T)-7 b(r)i(ansactions)35
b(on)e(Magnetics)p Fl(,)d(v)m(ol.)h(34,)h(Ma)m(y)f(1998)1854
b Fq(9)-165 289 y(the)44 b(exact)g(Viterbi-t)m(yp)s(e)f(arc)m
(hitecture,)k(that)c(is,)j(the)e(metrics)f(can)h(b)s(e)f(applied)g(to)g
(an)m(y)h(Viterbi-t)m(yp)s(e)-165 454 y(algorithm)24
b(suc)m(h)29 b(as)e(PRML)h([3,)f(4],)h(FDTS/DF)f([5)o(],)i(RAM-RSE)e
([8])h(or,)g(MDFE)f([6,)g(7].)42 b(In)28 b(this)f(pap)s(er,)h(in)-165
619 y(Section)h(IV,)h(w)m(e)g(sho)m(w)h(results)e(on)h(ho)m(w)g(the)g
(c)m(hosen)h(metric)d(a\013ects)i(the)g(p)s(erformance)f(of)g(sev)m
(eral)h(class-4)-165 785 y(partial)h(resp)s(onse)k(\(PR4)e(and)h
(EPR4\))f(detectors.)48 b(Before)33 b(considering)g(that,)h(w)m(e)g
(address)h(the)f(question)-165 950 y(of)29 b(the)h(on-the-\015y)g
(estimation)e(of)i(the)g(co)m(v)-5 b(ariance)30 b(matrices)f
Fn(C)2234 965 y Fh(i)2292 950 y Fq(that)h(are)g(needed)h(in)e(the)i
(branc)m(h)f(metric)-165 1115 y(computation)h(in)g(\(13\).)-165
1566 y Fk(3)161 b(Adaptiv)l(e)53 b(statistics)h(trac)l(king)-165
1948 y Fq(Computing)27 b(the)h(branc)m(h)h(metrics)e(in)h(\(10\))f(or)h
(\(13\))f(requires)i(kno)m(wledge)g(of)e(the)i(signal)d(statistics.)42
b(These)-165 2114 y(statistics)35 b(are)h(the)h(mean)f(signal)e(v)-5
b(alues)36 b Fj(m)1507 2129 y Fh(i)1572 2114 y Fq(in)f(\(12\))h(as)g(w)
m(ell)f(as)h(the)h(co)m(v)-5 b(ariance)36 b(matrices)f
Fn(C)3468 2129 y Fh(i)3533 2114 y Fq(in)g(\(13\).)-165
2279 y(In)43 b(magnetic)e(recording)i(systems,)k(these)d(statistics)f
(will)d(generally)i(v)-5 b(ary)43 b(from)f(trac)m(k)h(to)g(trac)m(k.)75
b(F)-8 b(or)-165 2444 y(example,)44 b(the)f(statistics)f(that)h(apply)f
(to)g(a)h(trac)m(k)g(at)f(a)g(certain)h(radius)f(will)e(di\013er)i
(from)f(those)j(from)-165 2610 y(another)35 b(trac)m(k)h(at)f(a)g
(di\013eren)m(t)h(radius)f(due)h(to)f(di\013eren)m(t)g(linear)f(trac)m
(k)i(v)m(elo)s(cities)e(at)h(those)h(radii.)50 b(Also,)-165
2775 y(the)e(signal)d(and)j(noise)f(statistics)g(will)f(b)s(e)h
(di\013eren)m(t)h(if)e(a)h(head)h(is)f(\015ying)h(sligh)m(tly)d
(o\013-trac)m(k)j(or)f(if)f(it)-165 2941 y(is)c(\015ying)g(directly)g
(o)m(v)m(er)h(the)g(trac)m(k.)74 b(The)44 b(head)f(sk)m(ew)h(angle)e
(is)g(another)g(factor)g(that)h(con)m(tributes)g(to)-165
3106 y(di\013eren)m(t)32 b(statistics)g(from)f(trac)m(k)h(to)g(trac)m
(k.)44 b(These)34 b(factors)e(suggest)h(that)f(the)h(system)g(that)f
(implemen)m(ts)-165 3271 y(the)38 b(metric)g(in)f(\(13\))h(needs)h(to)f
(b)s(e)h(\015exible)f(to)g(these)h(c)m(hanges.)62 b(Storing)37
b(the)i(statistics)f(for)f(eac)m(h)j(trac)m(k)-165 3437
y(separately)c(is)g(out)h(of)f(the)h(question)g(b)s(ecause)h(of)e(the)h
(memory)e(span)i(required)g(to)f(accomplish)f(this.)55
b(A)-165 3602 y(reasonable)32 b(alternativ)m(e)g(is)g(to)g(use)i
(adaptiv)m(e)e(\014ltering)f(tec)m(hniques)k(to)d(trac)m(k)h(the)g
(needed)i(statistics.)-19 3885 y(T)-8 b(rac)m(king)27
b(the)g(mean)f(signal)f(v)-5 b(alues)26 b Fj(m)1435 3900
y Fh(i)1490 3885 y Fq(is)g(generally)g(done)h(so)g(that)f(these)i(v)-5
b(alues)26 b(fall)f(on)h(presp)s(eci\014ed)-165 4051
y(targets.)43 b(An)33 b(adaptiv)m(e)g(fron)m(t-end)f(equalizer)h(is)f
(emplo)m(y)m(ed)h(to)f(force)h(the)g(signal)d(sample)i(v)-5
b(alues)33 b(to)f(their)-165 4216 y(targets.)59 b(This)38
b(is)g(certainly)f(the)h(case)h(with)e(partial)f(resp)s(onse)j(targets)
f(used)h(in)e(algorithms)e(lik)m(e)i(PR4,)-165 4381 y(EPR4,)f(or)g
(EEPR4)g(where)h(the)f(target)f(is)g(presp)s(eci\014ed)j(to)d(one)h(of)
f(the)h(class-4)f(partial)e(resp)s(onses.)55 b(F)-8 b(or)-165
4547 y(example,)39 b(in)f(a)g(PR4)g(system,)j(the)d(signal)f(samples,)i
(if)f(there)h(is)e(no)i(noise)f(in)f(the)i(system,)i(fall)36
b(on)i(one)-165 4712 y(of)e(the)g(three)i(target)e(v)-5
b(alues)36 b(1,)h(0,)g(or)f Fg(\000)p Fq(1.)56 b(T)m(ypically)35
b(this)i(is)e(done)i(with)f(an)h(LMS-class)f(\(least)g(mean-)-165
4878 y(squares\))42 b(algorithm)37 b(that)j(ensures)j(that)d(the)h
(mean)f(of)g(the)h(signal)e(samples)h(is)g(close)h(to)f(these)i(target)
-165 5043 y(v)-5 b(alues.)42 b(In)28 b(decision)g(feedbac)m(k)i
(equalization)c(\(DFE\))h(based)i(detectors)h(or)e(h)m(ybrids)h(b)s(et)
m(w)m(een)h(\014xed)f(dela)m(y)p eop
%%Page: 10 10
10 9 bop -133 -101 a Fm(IEEE)32 b(T)-7 b(r)i(ansactions)35
b(on)e(Magnetics)p Fl(,)d(v)m(ol.)h(34,)h(Ma)m(y)f(1998)1805
b Fq(10)-165 289 y(tree)35 b(searc)m(h)i(and)e(DFE,)g(suc)m(h)i(as)e
(FDTS/DF)f([5])h(or)g(MDFE)g([6,)h(7)o(],)g(the)g(target)f(resp)s(onse)
i(need)f(not)f(b)s(e)-165 454 y(presp)s(eci\014ed.)60
b(Instead,)40 b(the)e(target)f(v)-5 b(alues)38 b(are)f(c)m(hosen)j
(on-the-\015y)d(b)m(y)i(sim)m(ultaneously)d(up)s(dating)h(the)-165
619 y(co)s(e\016cien)m(ts)g(of)e(the)h(fron)m(t-end)g(and)g(feed-bac)m
(k)h(equalizers)f(with)g(an)g(LMS-t)m(yp)s(e)h(algorithm,)c(for)i
(details)-165 785 y(see)e([23].)-19 1068 y(When)h(there)f(are)g(sev)m
(ere)i(nonlinearities)c(in)h(the)h(system)h(\(also)e(referred)i(to)e
(as)i(nonlinear)d(distortion)-165 1233 y(or)25 b(nonlinear)f(ISI\))j(a)
e(linear)f(equalizer)i(will)d(generally)i(not)h(b)s(e)g(able)f(to)g
(place)h(the)g(signal)e(samples)h(righ)m(t)g(on)-165
1399 y(target.)42 b(Instead,)32 b(the)e(means)g(of)g(the)g(signal)e
(samples)i(will)e(fall)f(at)j(a)g(di\013eren)m(t)g(v)-5
b(alue.)42 b(F)-8 b(or)29 b(example,)h(in)g(a)-165 1564
y(PR4)23 b(system,)k(the)d(resp)s(onse)h(to)f(a)f(sequence)k(of)c
(written)g(sym)m(b)s(ols)h Fj(:)17 b(:)g(:)f(;)h Fg(\011)p
Fj(;)g Fq(+)p Fj(;)g Fg(\010)p Fj(;)g(:)g(:)g(:)23 b
Fq(migh)m(t)f(result)i(in)f(mean)-165 1730 y(sample)g(target)i(v)-5
b(alues)24 b Fj(:)17 b(:)g(:)f(;)h Fq(0)p Fj(;)g Fq(1)p
Fj(;)g Fq(0)p Fj(:)p Fq(9)p Fj(;)g(:)g(:)g(:)n Fq(,)26
b(while)e(a)g(sequence)k(of)c(written)h(sym)m(b)s(ols)f
Fj(:)17 b(:)g(:)f(;)h Fq(+)p Fj(;)g Fg(\000)p Fj(;)g
Fg(\011)p Fj(;)g(:)g(:)g(:)24 b Fq(migh)m(t)-165 1895
y(result)h(in)f(a)h(sequence)j(of)c(mean)h(sample)f(v)-5
b(alues)25 b Fj(:)17 b(:)g(:)g(;)g Fq(0)p Fj(:)p Fq(95)p
Fj(;)g Fg(\000)p Fq(1)p Fj(:)p Fq(05)p Fj(;)g Fq(0)p
Fj(;)g(:)g(:)g(:)m Fq(.)41 b(Clearly)-8 b(,)26 b(in)e(this)h(example,)h
(what)-165 2060 y(should)k(b)s(e)h(a)f(target)g(v)-5
b(alue)30 b(of)g(1)g(b)s(ecomes)h(either)g(1,)f(0)p Fj(:)p
Fq(9,)h(or)f(0)p Fj(:)p Fq(95)g(dep)s(ending)h(on)f(the)h(written)g
(sequence.)-165 2226 y(Since)42 b(w)m(e)h(are)f(talking)f(ab)s(out)g
(mean)h(v)-5 b(alues)42 b(and)g(not)g(ab)s(out)g(noisy)g(samples,)i
(this)e(deviation)f(is)h(due)-165 2391 y(to)c(nonlinearities)e(in)i
(the)h(system.)63 b(There)40 b(are)f(t)m(w)m(o)h(\014xes)g(for)e(this)g
(problem.)61 b(The)40 b(\014rst)f(is)g(to)f(emplo)m(y)-165
2556 y(a)c(nonlinear)g(\014lter)g(\(neural)h(net)m(w)m(ork)h(or)f(V)-8
b(olterra)33 b(series)j(\014lter\))e(that)h(is)f(capable)h(of)g(o)m(v)m
(ercoming)f(these)-165 2722 y(nonlinear)g(distortions,)h(see)i([24)o(,)
f(25].)52 b(Although)35 b(recen)m(tly)h(v)m(ery)h(p)s(opular,)f(suc)m
(h)h(a)e(metho)s(d)g(in)m(tro)s(duces)-165 2887 y(further)44
b(correlation)e(b)s(et)m(w)m(een)k(noise)e(samples)g(due)g(to)g(the)h
(nonlinear)d(c)m(haracter)j(of)f(the)g(\014lter.)77 b(The)-165
3052 y(second)25 b(\014x)f(is)g(to)f(trac)m(k)i(the)f(nonlinearities)d
(in)j(a)f(feedbac)m(k)j(lo)s(op)c(and)i(use)h(the)f(trac)m(k)m(ed)i(v)
-5 b(alue)23 b(in)g(the)h(metric)-165 3218 y(computation.)54
b(F)-8 b(or)36 b(example,)h(let)f(the)h(resp)s(onse)h(to)e(a)h(written)
f(sym)m(b)s(ol)g(sequence)j Fj(:)17 b(:)g(:)f(;)h Fg(\011)p
Fj(;)g Fq(+)p Fj(;)g Fg(\010)p Fj(;)g(:)g(:)g(:)36 b
Fq(b)s(e)-165 3383 y(consisten)m(tly)j Fj(:)17 b(:)g(:)f(;)h
Fq(0)p Fj(;)g Fq(1)p Fj(;)g Fq(0)p Fj(:)p Fq(9)p Fj(;)g(:)g(:)g(:)n
Fq(.)62 b(Then,)42 b(rather)d(than)g(using)f(the)i(v)-5
b(alue)38 b(1)h(in)f(the)h(metric)f(computation)-165
3548 y(for)32 b(the)h(third)f(target,)g(w)m(e)h(can)g(trac)m(k)h(this)e
(b)s(eha)m(vior)g(and)h(use)g(the)g(v)-5 b(alue)32 b
Fj(m)2733 3563 y Fh(i)2790 3548 y Fq(=)27 b(0)p Fj(:)p
Fq(9.)-19 3832 y(In)43 b(the)g(remainder)f(of)g(this)g(pap)s(er,)k(for)
c(simplicit)m(y)-8 b(,)42 b(w)m(e)i(assume)f(that)g(the)g(fron)m(t-end)
g(equalizer)f(is)-165 3997 y(placing)h(the)i(signal)e(samples)h(righ)m
(t)g(on)h(the)g(desired)g(target)g(v)-5 b(alues)44 b(and)h(that)g
(there)g(is)f(no)h(need)h(for)-165 4163 y(further)34
b(mean)f(corrections.)48 b(W)-8 b(e)34 b(shift)f(our)h(fo)s(cus)g(to)f
(trac)m(king)h(the)g(noise)g(co)m(v)-5 b(ariance)34 b(matrices)f
(needed)-165 4328 y(in)e(the)i(computation)e(of)i(the)g(branc)m(h)g
(metrics)f(\(13\).)-19 4611 y(Assume)37 b(that)e(the)i(sequence)i(of)c
(samples)h Fj(r)1666 4626 y Fh(i)1694 4611 y Fj(;)17
b(r)1782 4626 y Fh(i)p Fi(+1)1900 4611 y Fj(;)g(:)g(:)g(:)e(;)i(r)2162
4626 y Fh(i)p Fi(+)p Fh(L)2329 4611 y Fq(is)36 b(observ)m(ed.)55
b(Based)37 b(on)f(these)h(as)f(w)m(ell)-165 4777 y(as)49
b(all)f(other)h(neigh)m(b)s(oring)f(samples,)53 b(after)d(an)f
(appropriate)g(dela)m(y)g(of)g(the)h(Viterbi)e(trellis,)k(a)d(deci-)
-165 4942 y(sion)41 b(is)g(made)g(that)g(the)h(most)f(lik)m(ely)g
(estimate)g(for)g(the)h(sequence)i(of)d(sym)m(b)s(ols)g
Fj(a)3033 4957 y Fh(i)p Fd(\000)p Fh(K)3172 4969 y Fe(l)3200
4942 y Fj(;)17 b(:)g(:)g(:)f(;)h(a)3470 4957 y Fh(i)p
Fi(+)p Fh(L)p Fi(+)p Fh(K)3712 4965 y Fe(t)3785 4942
y Fq(is)-164 5107 y(^)-50 b Fj(a)-114 5122 y Fh(i)p Fd(\000)p
Fh(K)25 5134 y Fe(l)53 5107 y Fj(;)17 b(:)g(:)g(:)e(;)j
Fq(^)-50 b Fj(a)322 5122 y Fh(i)p Fi(+)p Fh(L)p Fi(+)p
Fh(K)564 5130 y Fe(t)596 5107 y Fq(.)75 b(Here)44 b Fj(L)f
Fq(is)g(the)h(noise)f(correlation)e(length)i(and)g Fj(K)53
b Fq(=)46 b Fj(K)2939 5122 y Fh(l)2994 5107 y Fq(+)29
b Fj(K)3182 5122 y Fh(t)3241 5107 y Fq(+)h(1)42 b(is)h(the)h(ISI)p
eop
%%Page: 11 11
11 10 bop -133 -101 a Fm(IEEE)32 b(T)-7 b(r)i(ansactions)35
b(on)e(Magnetics)p Fl(,)d(v)m(ol.)h(34,)h(Ma)m(y)f(1998)1805
b Fq(11)-165 289 y(length.)67 b(Let)41 b(the)g(curren)m(t)h(estimate)e
(for)g(the)h(\()p Fj(L)28 b Fq(+)g(1\))f Fg(\002)i Fq(\()p
Fj(L)f Fq(+)f(1\))41 b(co)m(v)-5 b(ariance)40 b(matrix)f(corresp)s
(onding)-165 454 y(to)j(the)h(sequence)i(of)e(sym)m(b)s(ols)g(^)-50
b Fj(a)1111 469 y Fh(i)p Fd(\000)p Fh(K)1250 481 y Fe(l)1278
454 y Fj(;)17 b(:)g(:)g(:)f(;)i Fq(^)-50 b Fj(a)1548
469 y Fh(i)p Fi(+)p Fh(L)p Fi(+)p Fh(K)1790 477 y Fe(t)1864
454 y Fq(b)s(e)2023 428 y(^)2006 454 y Fn(C)p Fq(\()q(^)g
Fj(a)2176 469 y Fh(i)p Fd(\000)p Fh(K)2315 481 y Fe(l)2343
454 y Fj(;)17 b(:)g(:)g(:)f(;)i Fq(^)-50 b Fj(a)2613
469 y Fh(i)p Fi(+)p Fh(L)p Fi(+)p Fh(K)2855 477 y Fe(t)2886
454 y Fq(\).)74 b(W)-8 b(e)43 b(abbreviate)g(this)-165
619 y(sym)m(b)s(ol)32 b(with)g(the)i(shorter)f(notation,)1325
594 y(^)1309 619 y Fn(C)p Fq(\()q(^)-50 b Fj(a)p Fq(\).)44
b(If)33 b(the)h(estimate)e(is)g(un)m(biased,)i(the)f(exp)s(ected)i(v)-5
b(alue)32 b(of)h(the)-165 785 y(estimate)e(is)1393 1068
y(E)1475 1043 y(^)1459 1068 y Fn(C)p Fq(\()q(^)-50 b
Fj(a)q Fq(\))27 b(=)h(E)1882 972 y Ff(h)1921 1068 y Fj(N)p
1921 1081 89 4 v 2009 1089 a Fh(i)2065 1068 y Fj(N)p
2065 1081 V 2154 1026 a Fi(T)2154 1093 y Fh(i)2209 972
y Ff(i)2265 1068 y Fj(;)1385 b Fq(\(14\))-165 1352 y(where)35
b Fj(N)p 118 1365 V 206 1372 a Fh(i)268 1352 y Fq(is)e(the)h(v)m(ector)
h(of)e(di\013erences)i(b)s(et)m(w)m(een)h(the)e(observ)m(ed)i(samples)d
(and)h(their)f(exp)s(ected)i(v)-5 b(alues,)-165 1517
y(as)32 b(de\014ned)i(in)e(\(12\).)-19 1800 y(Note)38
b(that)f(once)h(w)m(e)h(ha)m(v)m(e)g(observ)m(ed)g(the)f(samples)g
Fj(r)2037 1815 y Fh(i)2065 1800 y Fj(;)17 b(r)2153 1815
y Fh(i)p Fi(+1)2271 1800 y Fj(;)g(:)g(:)g(:)f(;)h(r)2534
1815 y Fh(i)p Fi(+)p Fh(L)2664 1800 y Fq(,)39 b(and)f(once)g(w)m(e)h
(ha)m(v)m(e)g(decided)-165 1966 y(that)30 b(most)f(lik)m(ely)g(they)i
(resulted)g(from)e(a)h(series)h(of)f(written)g(sym)m(b)s(ols)h(^)-50
b Fj(a)2554 1981 y Fh(i)p Fd(\000)p Fh(K)2693 1993 y
Fe(l)2721 1966 y Fj(;)17 b(:)g(:)g(:)e(;)j Fq(^)-50 b
Fj(a)2990 1981 y Fh(i)p Fi(+)p Fh(L)p Fi(+)p Fh(K)3232
1989 y Fe(t)3264 1966 y Fq(,)30 b(w)m(e)i(kno)m(w)f(the)-165
2131 y(sequence)i(of)d(target)g(\(mean\))g(v)-5 b(alues)30
b Fj(m)1338 2146 y Fh(i)1366 2131 y Fj(;)17 b(m)1495
2146 y Fh(i)p Fi(+1)1614 2131 y Fj(;)g(:)g(:)g(:)f(;)h(m)1918
2146 y Fh(i)p Fi(+)p Fh(L)2079 2131 y Fq(that)30 b(corresp)s(ond)h(to)g
(these)g(samples.)43 b(W)-8 b(e)30 b(use)-165 2296 y(them)h(to)h
(compute)f(the)i(v)m(ector)f Fj(N)p 1055 2309 V 1144
2317 a Fh(i)1172 2296 y Fq(,)g(with)f(whic)m(h)i(w)m(e)g(form)d(the)i
(empirical)d(rank-one)j(co)m(v)-5 b(ariance)32 b(matrix)-165
2462 y Fj(N)p -165 2475 V -77 2483 a Fh(i)-21 2462 y
Fj(N)p -21 2475 V 68 2420 a Fi(T)68 2486 y Fh(i)123 2462
y Fq(.)-19 2745 y(In)g(the)g(absence)h(of)e(prior)g(information,)e
(this)i(rank-one)h(matrix)e(is)h(our)g(estimate)g(for)g(the)h(co)m(v)-5
b(ariance)-165 2911 y(matrix)45 b(for)h(the)h(detected)h(sym)m(b)s
(ols.)86 b(In)47 b(a)g(recursiv)m(e)h(adaptiv)m(e)f(sc)m(heme)g(as)g(w)
m(e)h(are)f(prop)s(osing,)i(w)m(e)-165 3076 y(use)41
b(this)f(rank-one)g(data)g(co)m(v)-5 b(ariance)41 b(estimate)e(to)h(up)
s(date)h(our)f(curren)m(t)h(estimate)f(of)g(the)g(co)m(v)-5
b(ariance)-165 3241 y(matrix)175 3216 y(^)159 3241 y
Fn(C)p Fq(\()q(^)-50 b Fj(a)p Fq(\).)66 b(A)40 b(simple)e(w)m(a)m(y)k
(to)d(ac)m(hiev)m(e)i(this)f(is)g(pro)m(vided)g(b)m(y)h(the)f(recursiv)
m(e)i(least-squares)f(\(RLS\))-165 3407 y(algorithm)29
b([26].)43 b(The)34 b(RLS)e(computes)h(the)g(next)h(co)m(v)-5
b(ariance)32 b(matrix)f(estimate)2938 3381 y(^)2922 3407
y Fn(C)3003 3371 y Fd(0)3026 3407 y Fq(\()q(^)-50 b Fj(a)p
Fq(\))33 b(as)1063 3665 y(^)1047 3690 y Fn(C)1128 3649
y Fd(0)1151 3690 y Fq(\()q(^)-50 b Fj(a)q Fq(\))27 b(=)h
Fj(\014)6 b Fq(\()p Fj(t)p Fq(\))1598 3665 y(^)1582 3690
y Fn(C)o Fq(\()q(^)-50 b Fj(a)q Fq(\))22 b(+)g([1)g Fg(\000)g
Fj(\014)6 b Fq(\()p Fj(t)p Fq(\)])17 b Fj(N)p 2323 3703
V 2411 3711 a Fh(i)2467 3690 y Fj(N)p 2467 3703 V 2556
3648 a Fi(T)2556 3715 y Fh(i)2611 3690 y Fj(:)1039 b
Fq(\(15\))-165 3974 y(Here,)46 b Fj(\014)6 b Fq(\()p
Fj(t)p Fq(\),)45 b(0)g Fj(<)f(\014)6 b Fq(\()p Fj(t)p
Fq(\))45 b Fj(<)g Fq(1,)g(is)d(a)h(forgetting)e(factor.)74
b(The)43 b(dep)s(endence)j(on)c Fj(t)h Fq(signi\014es)g(that)f
Fj(\014)48 b Fq(is)43 b(a)-165 4139 y(function)36 b(of)h(time.)55
b(Equation)37 b(\(15\))f(can)h(b)s(e)g(view)m(ed)h(as)g(a)e(w)m(eigh)m
(ted)i(a)m(v)m(eraging)f(algorithm,)e(where)j(the)-165
4304 y(data)29 b(sample)g(co)m(v)-5 b(ariance)30 b Fj(N)p
846 4317 V 934 4325 a Fh(i)990 4304 y Fj(N)p 990 4317
V 1078 4263 a Fi(T)1078 4329 y Fh(i)1163 4304 y Fq(is)f(w)m(eigh)m(ted)
i(b)m(y)g(the)f(factor)f([1)22 b Fg(\000)h Fj(\014)6
b Fq(\()p Fj(t)p Fq(\)],)30 b(while)f(the)h(previous)g(estimate)-165
4470 y(is)35 b(w)m(eigh)m(ted)h(b)m(y)h Fj(\014)6 b Fq(\()p
Fj(t)p Fq(\).)52 b(The)37 b(c)m(hoice)f(of)f Fj(\014)6
b Fq(\()p Fj(t)p Fq(\))36 b(should)f(re\015ect)i(the)f(nonstationarit)m
(y)f(degree)h(of)f(the)h(noise.)-165 4635 y(F)-8 b(or)33
b(example,)h(if)f(the)h(nonstationarit)m(y)f(is)h(small,)e
Fj(\014)6 b Fq(\()p Fj(t)p Fq(\))34 b(should)g(b)s(e)g(close)g(to)g(1,)
g(while)f(it)g(should)h(drop)g(as)-165 4800 y(the)h(nonstationarit)m(y)
e(lev)m(el)i(increases.)50 b(The)36 b(forgetting)d(factor)i(is)f(t)m
(ypically)f(tak)m(en)j(time-dep)s(enden)m(t)f(to)-165
4966 y(accoun)m(t)c(for)g(the)g(start-up)g(conditions)f(of)g(the)i(RLS)
f(algorithm)c(in)j(\(15\).)43 b(As)31 b(more)f(data)h(is)f(pro)s
(cessed,)k(a)-165 5131 y(steady-state)i(is)g(exp)s(ected)h(to)f(b)s(e)f
(ac)m(hiev)m(ed)i(and)f Fj(\014)6 b Fq(\()p Fj(t)p Fq(\))36
b(is)f(made)g(to)g(approac)m(h)h(a)g(constan)m(t)g(v)-5
b(alue.)53 b(If)35 b(w)m(e)p eop
%%Page: 12 12
12 11 bop -133 -101 a Fm(IEEE)32 b(T)-7 b(r)i(ansactions)35
b(on)e(Magnetics)p Fl(,)d(v)m(ol.)h(34,)h(Ma)m(y)f(1998)1805
b Fq(12)-165 289 y(lac)m(k)34 b(a)g(go)s(o)s(d)g(prior)f(estimate)1010
263 y(^)994 289 y Fn(C)p Fq(\()q(^)-50 b Fj(a)p Fq(\),)35
b Fj(\014)6 b Fq(\()p Fj(t)p Fq(\))34 b(should)g(b)s(e)h(close)f(to)g
(zero,)i(to)e(w)m(eigh)g(more)g(the)h(curren)m(t)h(data)-165
454 y(estimate.)42 b(With)29 b(time,)h Fj(\014)6 b Fq(\()p
Fj(t)p Fq(\))29 b(will)f(increase)j(and)f(settle)h(around)f(a)g(v)-5
b(alue)30 b(close)g(to)g(1.)42 b(In)31 b(our)f(sim)m(ulations)-165
619 y(in)36 b(Section)g(V,)h(w)m(e)g(c)m(hose)i(a)d(constan)m(t)h
(forgetting)f(factor)g Fj(\014)6 b Fq(,)37 b(indep)s(enden)m(t)h(of)e
(time.)54 b(In)37 b(particular,)f(w)m(e)-165 785 y(use)d
Fj(\014)g Fq(=)28 b(0)p Fj(:)p Fq(95.)-19 1068 y(Although)33
b(our)h(sim)m(ulations)e(ha)m(v)m(e)k(sho)m(wn)f(\(15\))f(to)g(con)m(v)
m(erge)i(ev)m(en)g(when)f(w)m(e)g(pic)m(k)g(the)f(zero)h(matrix)-165
1233 y(as)h(the)h(initial)c(condition,)j(in)g(practice,)i(w)m(e)g(w)m
(an)m(t)f(to)f(ha)m(v)m(e)i(a)e(go)s(o)s(d)g(starting)g(condition)f(to)
h(obtain)f(fast)-165 1399 y(con)m(v)m(ergence.)52 b(By)35
b(dividing)e(the)i(disk)g(in)f(a)g(n)m(um)m(b)s(er)h(of)f(sectors)i
(and)f(pic)m(king)f(the)h(middle)e(trac)m(k)i(as)g(the)-165
1564 y(represen)m(tativ)m(e)41 b(trac)m(k)f(of)e(the)i(sector,)h(the)f
(co)m(v)-5 b(ariance)39 b(matrix)2326 1539 y(^)2309 1564
y Fn(C)p Fq(\()q(^)-50 b Fj(a)q Fq(\))39 b(for)f(this)h(trac)m(k)h(pro)
m(vides)g(a)e(go)s(o)s(d)-165 1730 y(starting)28 b(condition)f(for)i
(all)d(trac)m(ks)k(in)f(that)f(sector.)43 b(Con)m(v)m(ergence)32
b(can)d(b)s(e)g(exp)s(ected)i(then)f(to)e(tak)m(e)i(a)f(few)-165
1895 y(h)m(undred)34 b(samples)e(\(bits\).)-19 2178 y(The)h
(one-dimensional)d(equiv)-5 b(alen)m(t)33 b(of)f(equation)g(\(15\))g
(is)1295 2462 y(^)-54 b Fj(\033)1349 2421 y Fi(2)1345
2486 y(new)1500 2462 y Fq(=)27 b Fj(\014)11 b Fq(^)-54
b Fj(\033)1723 2421 y Fi(2)1719 2486 y(old)1840 2462
y Fq(+)22 b([1)g Fg(\000)h Fj(\014)6 b Fq(])16 b Fj(N)2328
2421 y Fi(2)2318 2486 y Fh(i)2368 2462 y Fj(:)1282 b
Fq(\(16\))-165 2745 y(This)32 b(equation)h(can)g(b)s(e)f(used)i(in)e
(conjunction)g(with)g(the)h(metric)f(in)g(\(10\).)-19
3029 y(It)e(is)g(imp)s(ortan)m(t)f(to)h(p)s(oin)m(t)g(out)g(that,)h
(due)g(to)f(the)h(signal-dep)s(enden)m(t)f(c)m(haracter)h(of)f(the)h
(media)e(noise,)-165 3194 y(there)41 b(will)d(b)s(e)i(a)g(di\013eren)m
(t)h(co)m(v)-5 b(ariance)40 b(matrix)f(to)h(trac)m(k)h(for)f(eac)m(h)h
(branc)m(h)g(in)f(the)g(tree/trellis)f(of)h(the)-165
3359 y(Viterbi-lik)m(e)45 b(detector.)89 b(Practical)47
b(considerations)g(of)g(memory)g(requiremen)m(ts,)52
b(ho)m(w)m(ev)m(er,)i(limit)44 b(the)-165 3525 y(dimensions)33
b(of)h(the)h(matrices)f(to)g(b)s(e)g(trac)m(k)m(ed.)51
b(F)-8 b(ortunately)g(,)34 b(as)h(w)m(e)g(sho)m(w)h(in)e(the)g(next)i
(section,)f(simple)-165 3690 y(2)22 b Fg(\002)g Fq(2)32
b(matrices)g(are)h(enough)g(to)f(sho)m(w)i(substan)m(tial)e(impro)m(v)m
(emen)m(t)g(in)g(error)g(rate)h(p)s(erformance.)-165
3974 y Fn(Example.)42 b Fq(The)33 b(follo)m(wing)c(example)i
(illustrates)f(ho)m(w)j(the)f(algorithm)d(in)i(\(15\))g(w)m(orks.)44
b(Assume)33 b(a)e(PR4)-165 4139 y(target)j(resp)s(onse)h(with)f(a)h
(simple)d(trellis)h(structure)i(as)g(sho)m(wn)h(in)d(Figure)h(3.)48
b(Notice)34 b(that)g(for)g(PR4,)h(the)-165 4304 y(sym)m(b)s(ols)e(can)g
(b)s(e)h(equated)h(to)e(the)h(trellis)d(states,)k(as)e(is)g
(illustrated)f(in)g(Figure)h(3.)45 b(The)35 b(n)m(um)m(b)s(er)e(next)i
(to)-165 4470 y(eac)m(h)d(branc)m(h)g(in)e(Figure)g(3)h(represen)m(ts)j
(the)d(target)g(v)-5 b(alue)31 b(\(mean)f(sample)h(v)-5
b(alue\))30 b(for)h(the)g(corresp)s(onding)-165 4635
y(path)h(b)s(et)m(w)m(een)j(states.)44 b(The)34 b(target)e(v)-5
b(alues)33 b(in)e(PR4)i(can)g(b)s(e)f(one)h(of)f(three)i(v)-5
b(alues)32 b Fg(\000)p Fq(1,)h(0,)f(or)h(1.)-19 4919
y(In)38 b(this)g(example)f(w)m(e)i(assume)f(a)g(noise)f(correlation)f
(length)i(of)f Fj(L)g Fq(=)g(1.)59 b(W)-8 b(e)38 b(also)f(assume)h
(that)g(the)-165 5084 y(leading)26 b(and)i(trailing)d(ISI)k(lengths)f
(are)g Fj(K)1414 5099 y Fh(l)1468 5084 y Fq(=)f(0)h(and)h
Fj(K)1917 5099 y Fh(t)1974 5084 y Fq(=)e(1,)i(resp)s(ectiv)m(ely)-8
b(,)30 b(to)e(giv)m(e)g(the)h(total)d(ISI)j(length)p
eop
%%Page: 13 13
13 12 bop -133 -101 a Fm(IEEE)32 b(T)-7 b(r)i(ansactions)35
b(on)e(Magnetics)p Fl(,)d(v)m(ol.)h(34,)h(Ma)m(y)f(1998)1805
b Fq(13)-165 289 y Fj(K)34 b Fq(=)28 b Fj(K)139 304 y
Fh(l)177 289 y Fq(+)12 b Fj(K)348 304 y Fh(t)390 289
y Fq(+)g(1)28 b(=)g(2)f(for)g(the)h(PR4)g(resp)s(onse.)43
b(Since)28 b Fj(L)g Fq(=)g(1,)g(w)m(e)h(will)d(need)i(to)g(trac)m(k)g
(signal)e(co)m(v)-5 b(ariance)-165 454 y(matrices)35
b(of)g(size)h(\()p Fj(L)25 b Fq(+)f(1\))g Fg(\002)h Fq(\()p
Fj(L)f Fq(+)h(1\))32 b(=)h(2)25 b Fg(\002)f Fq(2.)53
b(The)37 b(n)m(um)m(b)s(er)f(of)g(these)h(matrices)e(equals)h(the)g(n)m
(um)m(b)s(er)-165 619 y(of)30 b(di\013eren)m(t)h(com)m(binations)e(of)h
(t)m(w)m(o)h(consecutiv)m(e)h(branc)m(hes)h(in)c(the)i(trellis.)41
b(A)31 b(simple)e(coun)m(t)i(in)f(Figure)g(3)-165 785
y(rev)m(eals)39 b(that)f(this)h(n)m(um)m(b)s(er)g(is)f(16,)i(since)f
(there)g(are)g(4)f(no)s(des)h(in)f(the)h(trellis)e(and)i(2)f(branc)m
(hes)i(en)m(tering)-165 950 y(and)32 b(lea)m(ving)g(eac)m(h)h(no)s(de.)
-19 1233 y(Assume)43 b(that,)i(using)d(the)g(branc)m(h)h(metric)f(in)f
(\(13\),)j(the)f(Viterbi-lik)m(e)d(detector)j(decides)g(that)f(the)-165
1399 y(most)32 b(lik)m(ely)f(written)i(sym)m(b)s(ols)g
Fj(a)1097 1414 y Fh(i)1125 1399 y Fj(;)17 b(a)1220 1414
y Fh(i)p Fi(+1)1338 1399 y Fj(;)g(a)1433 1414 y Fh(i)p
Fi(+2)1551 1399 y Fq(,)33 b(equal)g Fg(f)q Fq(^)-50 b
Fj(a)1970 1414 y Fh(i)1998 1399 y Fj(;)18 b Fq(^)-50
b Fj(a)2093 1414 y Fh(i)p Fi(+1)2211 1399 y Fj(;)18 b
Fq(^)-50 b Fj(a)2306 1414 y Fh(i)p Fi(+2)2425 1399 y
Fg(g)27 b Fq(=)h Fg(f\011)p Fj(;)17 b Fq(+)p Fj(;)g Fg(\000g)p
Fq(.)44 b(This)33 b(is)f(illustrated)-165 1564 y(in)i(Figure)f(4,)i
(where)h(the)f(corresp)s(onding)g(path)f(through)h(the)g(trellis)e(is)h
(highligh)m(ted.)48 b(The)35 b(noisy)g(signal)-165 1730
y(samples)43 b(corresp)s(onding)h(to)g(the)h(trellis)d(branc)m(hes)k
(are)e Fj(r)2076 1745 y Fh(i)2151 1730 y Fq(=)k(0)p Fj(:)p
Fq(9)43 b(and)h Fj(r)2688 1745 y Fh(i)p Fi(+1)2854 1730
y Fq(=)j Fg(\000)p Fq(0)p Fj(:)p Fq(2,)h(whic)m(h)c(deviate)-165
1895 y(sligh)m(tly)31 b(from)g(their)h(ideal)f(partial)f(resp)s(onse)k
(target)f(v)-5 b(alues)32 b(of)g(1)g(and)h(0,)g(resp)s(ectiv)m(ely)-8
b(.)-19 2178 y(Supp)s(ose)29 b(that,)g(prior)e(to)h(making)e(the)j
(decision)e Fg(f)q Fq(^)-50 b Fj(a)1911 2193 y Fh(i)1939
2178 y Fj(;)18 b Fq(^)-50 b Fj(a)2034 2193 y Fh(i)p Fi(+1)2153
2178 y Fj(;)17 b Fq(^)-49 b Fj(a)2248 2193 y Fh(i)p Fi(+2)2366
2178 y Fg(g)27 b Fq(=)h Fg(f\011)p Fj(;)17 b Fq(+)p Fj(;)g
Fg(\000g)p Fq(,)29 b(the)f(estimate)f(for)h(the)-165
2344 y(co)m(v)-5 b(ariance)32 b(matrix)f(asso)s(ciated)i(with)f(this)g
(sequence)j(of)d(three)i(sym)m(b)s(ols)e(is)1200 2613
y(^)1184 2639 y Fn(C)p Fq(\()p Fg(\011)p Fj(;)17 b Fq(+)p
Fj(;)g Fg(\000)p Fq(\))28 b(=)1790 2493 y Ff(")1919 2578
y Fq(0)p Fj(:)p Fq(5)121 b Fg(\000)p Fq(0)p Fj(:)p Fq(2)1880
2698 y Fg(\000)p Fq(0)p Fj(:)p Fq(2)h(0)p Fj(:)p Fq(8)2409
2493 y Ff(#)2474 2639 y Fj(:)1176 b Fq(\(17\))-165 2934
y(Let)29 b(the)g(forgetting)e(factor)i(b)s(e)g Fj(\014)k
Fq(=)28 b(0)p Fj(:)p Fq(95.)41 b(T)-8 b(o)29 b(up)s(date)h(the)f(co)m
(v)-5 b(ariance)29 b(matrix)e(w)m(e)j(\014rst)f(form)f(the)h(v)m(ector)
780 3218 y Fj(N)p 780 3231 89 4 v 38 w Fq(=)1000 3121
y Ff(h)1080 3217 y Fq(\()p Fj(r)1162 3232 y Fh(i)1213
3217 y Fg(\000)22 b Fq(1\))83 b(\()p Fj(r)1564 3232 y
Fh(i)p Fi(+1)1704 3217 y Fg(\000)23 b Fq(0\))1932 3121
y Ff(i)1971 3144 y Fi(T)2054 3218 y Fq(=)2158 3121 y
Ff(h)2238 3217 y Fg(\000)p Fq(0)p Fj(:)p Fq(1)84 b Fg(\000)p
Fq(0)p Fj(:)p Fq(2)2767 3121 y Ff(i)2806 3144 y Fi(T)2878
3218 y Fj(:)772 b Fq(\(18\))-165 3501 y(W)-8 b(e)33 b(use)g(the)g
(rank-one)g(sample)f(co)m(v)-5 b(ariance)32 b(matrix)f
Fj(N)p 1857 3514 V 38 w(N)p 1973 3514 V 2062 3459 a Fi(T)2149
3501 y Fq(to)i(\014nd)g(the)g(co)m(v)-5 b(ariance)32
b(matrix)f(up)s(date)879 3759 y(^)863 3785 y Fn(C)944
3743 y Fd(0)967 3785 y Fq(\()p Fg(\011)p Fj(;)17 b Fq(+)p
Fj(;)g Fg(\000)p Fq(\))83 b(=)g Fj(\014)1686 3759 y Fq(^)1664
3785 y Fj(C)7 b Fq(\()p Fg(\011)p Fj(;)17 b Fq(+)p Fj(;)g
Fg(\000)p Fq(\))22 b(+)g(\(1)g Fg(\000)h Fj(\014)6 b
Fq(\))p Fj(N)p 2563 3798 V 37 w(N)p 2678 3798 V 2767
3743 a Fi(T)1444 3992 y Fq(=)1603 3846 y Ff(")1708 3931
y Fq(0)p Fj(:)p Fq(4755)96 b Fg(\000)p Fq(0)p Fj(:)p
Fq(189)1693 4051 y Fg(\000)p Fq(0)p Fj(:)p Fq(189)h(0)p
Fj(:)p Fq(7620)2417 3846 y Ff(#)2482 3992 y Fj(:)1168
b Fq(\(19\))-165 4313 y(The)34 b(matrix)369 4287 y(^)353
4313 y Fn(C)434 4277 y Fd(0)457 4313 y Fq(\()p Fg(\011)p
Fj(;)17 b Fq(+)p Fj(;)g Fg(\000)p Fq(\))34 b(b)s(ecomes)f(our)g
(estimate)f(for)h(the)g(co)m(v)-5 b(ariance)33 b(matrix)f(corresp)s
(onding)h(to)g(this)-165 4478 y(particular)42 b(sym)m(b)s(ol)h
(sequence)k(\(trellis)42 b(path\))i(and)h(w)m(e)g(use)g(it)e(to)h
(compute)g(the)h(metrics)e(\(13\))h(in)f(the)-165 4644
y(subsequen)m(t)35 b(steps)f(of)e(the)h(Viterbi-lik)m(e)d(algorithm.)p
eop
%%Page: 14 14
14 13 bop -133 -101 a Fm(IEEE)32 b(T)-7 b(r)i(ansactions)35
b(on)e(Magnetics)p Fl(,)d(v)m(ol.)h(34,)h(Ma)m(y)f(1998)1805
b Fq(14)-165 289 y Fk(4)161 b(Sim)l(ulation)54 b(results)-165
671 y Fq(In)35 b(this)h(section,)g(w)m(e)g(presen)m(t)i(sim)m(ulation)
32 b(results)k(using)f(t)m(w)m(o)h(partial)d(resp)s(onse)k(detection)f
(algorithms,)-165 836 y(namely)43 b(PR4)g(and)h(EPR4.)78
b(T)-8 b(o)44 b(create)h(realistic)d(w)m(a)m(v)m(eforms,)48
b(corrupted)c(b)m(y)h(media)e(noise,)j(w)m(e)f(used)-165
1001 y(an)d(e\016cien)m(t)i(sto)s(c)m(hastic)f(zig-zag)e(mo)s(del,)j
(the)f(TZ-ZT)f(mo)s(del)g([15)o(,)h(22].)74 b(These)44
b(w)m(a)m(v)m(eforms)g(are)f(then)-165 1167 y(passed)f(through)f(the)g
(detectors.)70 b(A)41 b(Lindholm)e(inductiv)m(e)i(head)g([27])g(is)g
(used)h(for)e(b)s(oth)h(writing)e(and)-165 1332 y(reading.)45
b(T)-8 b(able)33 b(1)g(presen)m(ts)j(the)e(recording)f(parameters)g(of)
g(the)h(mo)s(del.)44 b(These)35 b(recording)e(parameters)-165
1497 y(are)38 b(c)m(hosen)i(so)e(that)g(with)g(a)g(mo)s(derately)f(lo)m
(w)h(sym)m(b)s(ol)f(densit)m(y)j(p)s(er)e Fj(P)14 b(W)g
Fq(50,)38 b(w)m(e)i(ha)m(v)m(e)f(a)f(lo)m(w)g(n)m(um)m(b)s(er)-165
1663 y(of)31 b(transition)f(widths)i Fj(a)f Fq(p)s(er)h(sym)m(b)s(ol)f
(transition)f(separation.)42 b(Namely)-8 b(,)31 b(at)g(3)h(sym)m(b)s
(ols)p Fj(=P)14 b(W)g Fq(50)29 b(w)m(e)k(ha)m(v)m(e)-165
1828 y(a)38 b(transition)f(separation)g(of)h(only)g(2)p
Fj(:)p Fq(9)p Fj(a)p Fq(.)61 b(W)-8 b(e)39 b(mo)s(deled)e(the)i
(transition)e(pro\014le)h(b)m(y)h(an)f(error)h(function,)-165
1994 y(where)29 b(the)g(transition)e(width)h Fj(a)g Fq(denotes)i(the)e
(distance)h(from)e(the)i(transition)d(cen)m(ter)k(to)e(the)h(p)s(oin)m
(t)e(where)-165 2159 y(the)33 b(magnetization)d(equals)j
Fj(M)1027 2174 y Fh(r)1065 2159 y Fj(=)p Fq(2.)-19 2442
y(W)-8 b(e)42 b(write)g(the)g(sym)m(b)s(ols)f(utilizing)e(the)j
(\(0,4\))f(run)i(length)e(limited)e(co)s(de.)71 b(No)42
b(error)f(correction)h(is)-165 2608 y(applied,)31 b(so)i(the)g
(obtained)f(error)g(rates)h(are)g(not)f(bit)g(error)h(rates,)g(but)g
(\(ra)m(w\))f Fo(symb)-5 b(ol)32 b Fq(error)h(rates.)-19
2891 y(W)-8 b(e)45 b(tested)i(b)s(oth)e(the)g(PR4)g(and)g(EPR4)g
(detectors)i(using)e(the)g(follo)m(wing)d(three)k(di\013eren)m(t)f
(metric)-165 3057 y(computation)i(metho)s(ds:)76 b(the)49
b(Euclidian)e(metric)h(\(8\),)53 b(the)c(v)-5 b(ariance)48
b(dep)s(enden)m(t)j(metric)d(\(10\),)k(also)-165 3222
y(referred)41 b(to)g(as)g(the)g(C1)g(metric,)h(and)f(the)g(2)28
b Fg(\002)g Fq(2)41 b(correlation)e(sensitiv)m(e)i(metric)f(\(13\),)i
(named)f(the)g(C2)-165 3387 y(metric)e(for)h(short.)68
b(F)-8 b(or)40 b(a)g(PR4)g(target)h(resp)s(onse,)j(the)d(total)e(ISI)i
(length)f(is)g Fj(K)48 b Fq(=)42 b Fj(K)3167 3402 y Fh(l)3220
3387 y Fq(+)28 b Fj(K)3407 3402 y Fh(t)3464 3387 y Fq(+)f(1)41
b(=)h(2,)-165 3553 y(where)h(the)f(leading)e(and)i(trailing)d(ISI)k
(lengths)e(are)h Fj(K)1965 3568 y Fh(l)2035 3553 y Fq(=)h(0)f(and)g
Fj(K)2527 3568 y Fh(t)2600 3553 y Fq(=)h(1,)h(resp)s(ectiv)m(ely)-8
b(.)73 b(The)42 b(noise)-165 3718 y(correlation)33 b(length)j(for)f
(the)h(Euclidian)e(and)h(the)h(C1)g(metrics)f(is)g Fj(L)f
Fq(=)e(0,)37 b(while)d(for)i(the)g(C2)f(metric)g(the)-165
3883 y(noise)25 b(correlation)f(length)h(is)g Fj(L)j
Fq(=)f(1.)41 b(W)-8 b(e)26 b(refer)g(to)f(these)i(three)f(PR4)f
(detectors)i(as)f(PR4\(Euc\),)h(PR4\(C1\),)-165 4049
y(and)32 b(PR4\(C2\).)-19 4332 y(Similarly)k(to)k(the)h(PR4)f
(detectors,)k(w)m(e)d(tested)h(three)f(EPR4)f(detectors,)k
(EPR4\(Euc\),)f(EPR4\(C1\))-165 4497 y(and)26 b(EPR4\(C2\).)42
b(The)27 b(only)f(di\013erence)g(b)s(et)m(w)m(een)j(the)d(PR4)g
(detectors)i(and)e(the)h(EPR4)f(detectors)i(are)e(the)-165
4663 y(target)c(resp)s(onse)j(and)e(the)g(ISI)h(length,)g(whic)m(h)g
(for)f(the)g(EPR4)g(target)g(resp)s(onse)h(equals)g Fj(K)35
b Fq(=)27 b Fj(K)3397 4678 y Fh(l)3426 4663 y Fq(+)s
Fj(K)3588 4678 y Fh(t)3620 4663 y Fq(+)s(1)g(=)-165 4828
y(3,)32 b(with)g Fj(K)248 4843 y Fh(l)302 4828 y Fq(=)27
b(1)33 b(and)f Fj(K)759 4843 y Fh(t)817 4828 y Fq(=)27
b(1.)-19 5112 y(The)39 b(signal)e(obtained)h(b)m(y)h(the)g(TZ-ZT)f(mo)s
(del)f(is)g(already)h(corrupted)i(with)e(media)f(noise.)60
b(T)-8 b(o)39 b(this)p eop
%%Page: 15 15
15 14 bop -133 -101 a Fm(IEEE)32 b(T)-7 b(r)i(ansactions)35
b(on)e(Magnetics)p Fl(,)d(v)m(ol.)h(34,)h(Ma)m(y)f(1998)1805
b Fq(15)-165 289 y(signal)28 b(w)m(e)i(add)g(white)g(Gaussian)f(noise)h
(to)f(sim)m(ulate)f(the)i(head)g(and)g(electronics)g(noise)f(in)g(a)g
(real)g(system.)-165 454 y(W)-8 b(e)22 b(quote)h(the)g(p)s(o)m(w)m(er)g
(of)f(the)h(additiv)m(e)e(white)h(Gaussian)g(noise)g(as)h(the)f(signal)
f(to)h(additiv)m(e)g(white)g(Gaussian)-165 619 y(noise)32
b(ratio,)f(S\(A)-11 b(W)m(G\)NR,)33 b(whic)m(h)g(w)m(e)h(obtain)d(as)
1285 917 y(S\(A)-11 b(W)m(G\)NR)28 b(=)g(10)17 b(log)2195
850 y Fj(A)2268 813 y Fi(2)2268 874 y Fh(iso)p 2195 894
169 4 v 2227 985 a Fj(\033)2286 957 y Fi(2)2282 1010
y Fh(n)2373 917 y Fj(;)1277 b Fq(\(20\))-165 1215 y(where)31
b Fj(A)187 1230 y Fh(iso)312 1215 y Fq(is)f(the)g(mean)g(\(media)e
(noise)i(free\))h(amplitude)d(of)h(an)h(isolated)f(pulse)h(and)g
Fj(\033)3166 1179 y Fi(2)3162 1240 y Fh(n)3240 1215 y
Fq(is)f(the)i(v)-5 b(ariance)-165 1381 y(of)33 b(the)i(additiv)m(e)e
(white)h(Gaussian)g(noise.)48 b(The)35 b(noise)f(distorted)g(signal)f
(is)g(\014rst)i(passed)g(through)f(a)g(lo)m(w-)-165 1546
y(pass)39 b(\014lter)g(to)f(clean)g(out)h(the)g(noise)g(outside)g(the)g
(Nyquist)g(band.)63 b(The)39 b(signal)e(is)i(then)g(sampled)f(at)h(a)
-165 1711 y(rate)j(of)h(one)g(sample)f(p)s(er)h(sym)m(b)s(ol)f(and)h
(subsequen)m(tly)i(passed)g(through)d(a)h(partial)d(resp)s(onse)45
b(shaping)-165 1877 y(\014lter,)34 b(either)f(PR4)h(or)g(EPR4.)48
b(The)35 b(partial)d(resp)s(onse)j(shaping)f(\014lter)f(is)h(implemen)m
(ted)e(as)i(an)g(adaptiv)m(e)-165 2042 y(FIR)29 b(\014lter)h(whose)i
(tap)e(w)m(eigh)m(ts)h(are)f(adjusted)h(using)f(the)h(LMS)f(algorithm.)
40 b(Note)30 b(that)g(b)s(oth)g(\014lters)g(add)-165
2207 y(correlation)g(to)i(the)h(noise.)43 b(F)-8 b(or)31
b(the)i(C1)f(and)h(C2)f(metrics)g(in)f(\(10\))h(and)g(\(13\),)g(the)g
(RLS)g(algorithms)e(\(15\))-165 2373 y(and)e(\(16\))f(are)h(used)h(to)e
(estimate)g(the)i(noise)e(v)-5 b(ariances)28 b(and)g(co)m(v)-5
b(ariance)28 b(matrices)f(for)g(the)i(branc)m(h)f(metric)-165
2538 y(computations.)42 b(In)33 b(b)s(oth)f(cases,)i(the)f(forgetting)e
(factor)i(is)f(set)h(to)f Fj(\014)h Fq(=)28 b(0)p Fj(:)p
Fq(95.)-19 2822 y(All)j(six)h(detection)h(algorithms)d(w)m(ere)k
(tested)g(at)e(three)h(di\013eren)m(t)g(recording)f(densities.)-165
3213 y Fn(Sym)m(b)s(ol)k(separation)i(of)g(4.4)p Fj(a)p
Fn(.)49 b Fq(This)d(recording)f(densit)m(y)h(corresp)s(onds)h(to)e(a)g
(sym)m(b)s(ol)g(densit)m(y)i(of)e(2)79 3378 y(sym)m(b)s(ols)p
Fj(=P)14 b(W)g Fq(50,)30 b(see)k(T)-8 b(able)32 b(1.)79
3585 y(Figure)45 b(5)i(sho)m(ws)h(the)g(sym)m(b)s(ol)e(error)h(rate)g
(p)s(erformance)f(of)h(the)g(PR4)g(detectors)h(for)e(di\013eren)m(t)79
3751 y(additiv)m(e)c(noise)g(SNRs.)75 b(Keep)43 b(in)f(mind)g(that)h
(the)g(media)e(noise)i(is)f(em)m(b)s(edded)i(in)e(the)h(system,)79
3916 y(whic)m(h)38 b(is)f(wh)m(y)i(the)f(x-axis)g(on)f(the)i(graph)e
(is)g(lab)s(eled)g(as)h(S\(A)-11 b(W)m(G\)NR)38 b(instead)g(of)f
(simply)f(SNR.)79 4081 y(Notice)27 b(that,)h(at)f(this)h(densit)m(y)-8
b(,)29 b(the)f(PR4\(Euc\))g(and)g(PR4\(C1\))g(detectors)g(p)s(erform)f
(just)h(ab)s(out)f(the)79 4247 y(same)33 b(while)g(the)h(PR4\(C2\))g
(detector)h(outp)s(erforms)e(them)g(b)s(oth)h(b)m(y)h(ab)s(out)e(3dB.)h
(The)h(reason)f(for)79 4412 y(this)g(is)h(that)g(the)h(PR4)f(shaping)g
(\014lter)g(a)m(v)m(erages)i(noise)e(samples)g(from)f(di\013eren)m(t)h
(sym)m(b)s(ols,)h(whic)m(h)79 4577 y(masks)d(the)h(signal)e(dep)s
(enden)m(t)j(nature)e(of)g(the)h(media)e(noise.)45 b(This)34
b(is)e(wh)m(y)j(there)f(is)f(not)g(m)m(uc)m(h)h(to)79
4743 y(gain)f(b)m(y)j(using)e(PR4\(C1\))h(o)m(v)m(er)h(PR4\(Euc\).)51
b(The)36 b(PR4\(C2\))f(detector)g(p)s(erforms)g(b)s(etter)g(b)s(ecause)
79 4908 y(it)c(partially)f(remo)m(v)m(es)k(the)f(e\013ects)h(of)e
(noise)g(correlation)f(in)m(tro)s(duced)i(b)m(y)g(the)g(PR4)g(shaping)f
(\014lter.)79 5115 y(Figure)c(6)h(sho)m(ws)i(ho)m(w)f(the)g(EPR4)f
(detectors)i(p)s(erform)d(at)h(this)g(same)g(densit)m(y)h(\(sym)m(b)s
(ol)f(separation)p eop
%%Page: 16 16
16 15 bop -133 -101 a Fm(IEEE)32 b(T)-7 b(r)i(ansactions)35
b(on)e(Magnetics)p Fl(,)d(v)m(ol.)h(34,)h(Ma)m(y)f(1998)1805
b Fq(16)79 289 y(4.4)p Fj(a)p Fq(\).)50 b(Here)36 b(w)m(e)g(see)g(that)
f(the)g(EPR4\(C2\))h(has)f(the)h(b)s(est)f(p)s(erformance,)h(while)e
(EPR4\(Euc\))i(has)79 454 y(the)i(w)m(orst.)61 b(The)39
b(di\013erence)f(in)g(p)s(erformance)f(at)h(the)h(error)e(rate)h(of)g
(10)2863 418 y Fd(\000)p Fi(5)2995 454 y Fq(is)f(only)h(ab)s(out)f(0)p
Fj(:)p Fq(5dB)79 619 y(b)s(et)m(w)m(een)25 b(EPR4\(Euc\))f(and)f
(EPR4\(C2\).)40 b(This)23 b(is)g(b)s(ecause)h(the)g(media)d(noise)i(p)s
(o)m(w)m(er)h(at)f(this)f(densit)m(y)79 785 y(is)36 b(lo)m(w)g(and)h
(the)h(signal)d(is)i(w)m(ell)f(matc)m(hed)h(to)g(the)g(target)f(so)i
(the)f(EPR4)g(shaping)g(\014lter)f(do)s(es)h(not)79 950
y(in)m(tro)s(duce)32 b(unnecessary)j(noise)e(correlation.)-165
1198 y Fn(Sym)m(b)s(ol)j(separation)i(of)g(3.5)p Fj(a)p
Fn(.)49 b Fq(This)37 b(recording)g(densit)m(y)h(corresp)s(onds)g(to)f
(a)g(sym)m(b)s(ol)f(densit)m(y)i(of)f(2)p Fj(:)p Fq(5)79
1364 y(sym)m(b)s(ols)p Fj(=P)14 b(W)g Fq(50.)79 1571
y(Figure)33 b(7)h(sho)m(ws)i(the)f(p)s(erformance)g(of)f(the)h(PR4)f
(detectors)i(at)e(this)g(densit)m(y)-8 b(.)50 b(The)36
b(\014gure)f(is)f(v)m(ery)79 1736 y(similar)i(to)k(Figure)f(5,)i
(except)h(that)d(the)i(error)f(rates)g(ha)m(v)m(e)h(increased.)66
b(This)41 b(is)e(again)f(due)j(to)f(a)79 1901 y(mismatc)m(h)26
b(b)s(et)m(w)m(een)k(the)e(original)c(signal)i(and)i(the)g(PR4)f
(target)h(resp)s(onse,)i(whic)m(h)e(is)f(wh)m(y)i(the)f(PR4)79
2067 y(shaping)37 b(\014lter)f(in)m(tro)s(duces)i(correlation)e(in)h
(the)g(noise.)58 b(PR4\(C2\))38 b(clearly)e(outp)s(erforms)h(the)h(t)m
(w)m(o)79 2232 y(other)32 b(algorithms,)e(sho)m(wing)j(the)g(v)-5
b(alue)32 b(of)g(exploiting)f(the)i(correlation)d(across)k(signal)d
(samples.)79 2439 y(Figure)e(8)h(sho)m(ws)h(the)g(error)f(rates)h
(obtained)e(when)j(using)e(the)g(EPR4)h(detectors.)44
b(Due)30 b(to)g(a)g(higher)79 2604 y(densit)m(y)-8 b(,)34
b(the)f(media)f(noise)h(is)g(higher)f(than)h(in)g(the)g(previous)h
(example)e(with)h(sym)m(b)s(ol)f(separations)79 2770
y(of)25 b(4)p Fj(:)p Fq(4)p Fj(a)p Fq(.)41 b(This)27
b(is)e(wh)m(y)j(the)e(graph)g(in)g(Figure)f(8)g(has)i(mo)m(v)m(ed)g(to)
e(the)i(righ)m(t)e(b)m(y)i(2dB)f(in)g(comparison)f(to)79
2935 y(the)j(graph)g(in)g(Figure)f(6.)42 b(While)27 b(the)i(required)f
(S\(A)-11 b(W)m(G\)NR)29 b(increased,)h(the)e(margin)f(b)s(et)m(w)m
(een)j(the)79 3100 y(EPR4\(Euc\))24 b(and)f(EPR4\(C2\))g(also)f
(increased)i(from)e(ab)s(out)g(0)p Fj(:)p Fq(5dB)h(to)g(ab)s(out)f
(1dB,)i(suggesting)f(that)79 3266 y(the)31 b(correlation-sensitiv)m(e)e
(metric)h(is)h(more)f(resilien)m(t)g(to)g(densit)m(y)i(increase.)44
b(This)31 b(is)f(illustrated)f(in)79 3431 y(Figure)37
b(9)h(where)h(the)g(S\(A)-11 b(W)m(G\)NR)38 b(required)h(for)f(an)g
(error)g(rate)g(of)g(10)2838 3395 y Fd(\000)p Fi(5)2970
3431 y Fq(is)g(plotted)g(v)m(ersus)i(the)79 3596 y(linear)35
b(densit)m(y)j(for)f(the)g(three)h(EPR4)f(detectors.)59
b(F)-8 b(rom)35 b(this)i(\014gure)h(w)m(e)g(see)g(that,)g(for)f
(example,)79 3762 y(with)25 b(an)g(S\(A)-11 b(W)m(G\)NR)26
b(of)f(15dB,)g(the)h(EPR\(Euc\))h(detector)f(op)s(erates)g(at)f(a)g
(linear)f(densit)m(y)j(of)e(ab)s(out)79 3927 y(2)p Fj(:)p
Fq(2)35 b(sym)m(b)s(ols)p Fj(=P)14 b(W)g Fq(50,)34 b(while)g(the)i
(EPR4\(C2\))g(detector)g(op)s(erates)g(at)f(2)p Fj(:)p
Fq(4)g(sym)m(b)s(ols)p Fj(=P)14 b(W)g Fq(50,)34 b(th)m(us)79
4092 y(ac)m(hieving)e(a)g(gain)f(of)h(b)s(out)h(10\045)f(in)g(linear)f
(densit)m(y)-8 b(.)-165 4341 y Fn(Sym)m(b)s(ol)36 b(separation)i(of)g
(2.9)p Fj(a)p Fn(.)49 b Fq(This)d(recording)f(densit)m(y)h(corresp)s
(onds)h(to)e(a)g(sym)m(b)s(ol)g(densit)m(y)i(of)e(3)79
4506 y(sym)m(b)s(ols)p Fj(=P)14 b(W)g Fq(50.)54 b(Due)37
b(to)g(a)g(v)m(ery)h(lo)m(w)f(n)m(um)m(b)s(er)g(of)g(sym)m(b)s(ols)f(p)
s(er)h Fj(a)p Fq(,)i(this)d(is)h(the)g(densit)m(y)h(where)79
4672 y(the)e(detectors)h(signi\014can)m(tly)e(lose)g(p)s(erformance)h
(due)g(to)f(the)i(p)s(ercolation)d(of)h(magnetic)g(domains)79
4837 y(also)c(referred)j(to)e(as)h(nonlinear)e(amplitude)f(loss)j(or)f
(partial)e(signal)h(erasure.)79 5044 y(Figures)36 b(10)g(and)h(11)f
(sho)m(w)i(the)f(p)s(erformance)g(of)f(the)h(PR4)g(and)g(EPR4)g
(families)c(of)k(detectors)h(at)p eop
%%Page: 17 17
17 16 bop -133 -101 a Fm(IEEE)32 b(T)-7 b(r)i(ansactions)35
b(on)e(Magnetics)p Fl(,)d(v)m(ol.)h(34,)h(Ma)m(y)f(1998)1805
b Fq(17)79 289 y(this)37 b(densit)m(y)-8 b(.)60 b(The)38
b(detectors)h(with)f(the)g(C2)g(metric)e(outp)s(erform)h(the)h(other)g
(t)m(w)m(o)g(metrics.)58 b(The)79 454 y(error)32 b(rates)i(are)f(quite)
g(high)f(in)h(all)e(cases.)46 b(This)33 b(is)g(b)s(ecause)h(at)f(the)h
(sym)m(b)s(ol)e(separations)h(of)f(2)p Fj(:)p Fq(9)p
Fj(a)p Fq(,)79 619 y(nonlinear)24 b(e\013ects,)29 b(suc)m(h)f(as)f
(partial)d(erasure)j(due)g(to)f(p)s(ercolation)e(of)i(domains,)g(start)
h(to)f(dominate.)79 785 y(These)k(e\013ects)f(can)g(only)f(b)s(e)h
(undone)g(with)f(a)g(nonlinear)f(pulse)i(shaping)f(\014lter,)g(whic)m
(h)h(w)m(e)h(ha)m(v)m(e)f(not)79 950 y(emplo)m(y)m(ed)j(here.)-19
1340 y(In)k(conclusion,)f(the)h(exp)s(erimen)m(tal)f(evidence)h(sho)m
(ws)h(that)f(the)f(correlation)f(sensitiv)m(e)i(sequence)i(de-)-165
1506 y(tector)f(outp)s(erforms)f(the)h(correlation)e(insensitiv)m(e)h
(detectors.)57 b(W)-8 b(e)38 b(ha)m(v)m(e)g(also)d(demonstrated)i(that)
g(the)-165 1671 y(p)s(erformance)32 b(margin)e(b)s(et)m(w)m(een)35
b(the)e(correlation)e(sensitiv)m(e)i(and)g(the)g(correlation)e
(insensitiv)m(e)h(detectors)-165 1836 y(gro)m(ws)c(with)f(the)h
(recording)g(densit)m(y)-8 b(.)42 b(In)28 b(other)g(w)m(ords,)i(the)e
(p)s(erformance)f(of)g(the)i(correlation)c(insensitiv)m(e)-165
2002 y(detector)36 b(deteriorates)g(faster)g(than)g(the)g(p)s
(erformance)f(of)h(the)g(correlation)e(sensitiv)m(e)i(detector.)54
b(Quan-)-165 2167 y(titativ)m(ely)-8 b(,)38 b(this)g(margin)e(dep)s
(ends)k(on)e(the)h(amoun)m(t)e(of)h(correlation)f(in)g(the)i(noise)f
(passed)i(through)e(the)-165 2332 y(system.)43 b(Qualitativ)m(ely)-8
b(,)27 b(the)j(higher)f(the)h(correlation)e(b)s(et)m(w)m(een)j(the)f
(noise)f(samples,)h(the)g(greater)f(will)e(b)s(e)-165
2498 y(the)33 b(margin)d(b)s(et)m(w)m(een)35 b(the)e(CS-SD)f(and)h(its)
f(correlation)f(insensitiv)m(e)h(coun)m(ter)i(part.)-165
2949 y Fk(5)161 b(Conclusion)-165 3331 y Fq(W)-8 b(e)32
b(ha)m(v)m(e)i(dev)m(elop)s(ed)g(the)e(correlation)f(sensitiv)m(e)i
(adaptiv)m(e)f(sequence)k(detector)d(in)e(this)h(pap)s(er.)44
b(The)33 b(de-)-165 3496 y(tector)27 b(is)g(a)f(correlation)g(sensitiv)
m(e)i(maxim)m(um)c(lik)m(eliho)s(o)s(d)g(sequence)30
b(detector.)42 b(Because)29 b(it)d(is)h(a)g(sequence)-165
3661 y(detector,)38 b(it)e(can)h(b)s(e)g(used)h(with)e(the)h(basic)g
(arc)m(hitecture)g(of)f(an)m(y)i(Viterbi-lik)m(e)c(sequence)40
b(detector,)e(see)-165 3827 y(Figure)43 b(1.)78 b(The)45
b(basic)f(di\013erence)h(b)s(et)m(w)m(een)h(the)e(correlation-sensitiv)
m(e)f(sequence)k(detector)e(\(CS-SD\))-165 3992 y(and)39
b(the)h(con)m(v)m(en)m(tional)g(Viterbi-lik)m(e)d(sequence)43
b(detector)d(is)f(that)h(the)g(branc)m(h)g(metrics)f(of)g(the)i(CS-SD)
-165 4157 y(are)c(computed)g(taking)g(in)m(to)f(accoun)m(t)i(the)g
(correlation)e(b)s(et)m(w)m(een)j(noise)e(samples.)57
b(These)39 b(branc)m(h)f(met-)-165 4323 y(rics)i(are)g(computed)g
(using)g(noise)g(co)m(v)-5 b(ariance)40 b(matrices)g(whic)m(h)g(are)h
(adaptiv)m(ely)e(estimated)h(from)f(past)-165 4488 y(signal)f(samples)i
(using)f(an)h(RLS-t)m(yp)s(e)h(algorithm.)62 b(The)41
b(CS-SD)f(retains)g(the)g(basic)g(arc)m(hitecture)h(of)f(a)-165
4654 y(Viterbi-lik)m(e)f(algorithm.)67 b(The)43 b(only)e(visible)f
(di\013erence)i(b)s(et)m(w)m(een)i(the)e(CS-SD)g(and)f(the)h(con)m(v)m
(en)m(tional)-165 4819 y(Viterbi-lik)m(e)36 b(detector)j(is)f(that)g
(the)h(CS-SD)f(has)h(t)m(w)m(o)g(blo)s(c)m(ks)f(in)g(a)g(feedbac)m(k)i
(lo)s(op.)60 b(These)40 b(t)m(w)m(o)f(blo)s(c)m(ks)-165
4984 y(p)s(erform)26 b(t)m(w)m(o)i(tasks.)43 b(The)28
b(\014rst)g(blo)s(c)m(k)g(up)s(dates)g(the)g(noise)f(correlation)f
(statistics,)i(while)e(the)i(second)h(one)-165 5150 y(uses)37
b(these)g(statistics)e(\(the)i(co)m(v)-5 b(ariance)35
b(matrices\))g(to)h(compute)g(the)g(correlation-sensitiv)m(e)e
(tree/trellis)p eop
%%Page: 18 18
18 17 bop -133 -101 a Fm(IEEE)32 b(T)-7 b(r)i(ansactions)35
b(on)e(Magnetics)p Fl(,)d(v)m(ol.)h(34,)h(Ma)m(y)f(1998)1805
b Fq(18)-165 289 y(branc)m(h)33 b(metrics.)-19 572 y(The)38
b(c)m(haracteristics)f(of)g(the)g(CS-SD)g(mak)m(e)h(it)e(attractiv)m(e)
h(for)f(use)i(in)e(high)h(densit)m(y)h(recording)e(sys-)-165
737 y(tems,)f(where)i(correlations)c(b)s(et)m(w)m(een)k(noise)e
(samples)g(can)g(b)s(e)g(exp)s(ected.)53 b(These)37 b(correlations)c
(can)i(b)s(e)h(a)-165 903 y(result)27 b(of)g(media)e(noise,)k(fron)m
(t-end)e(equalizers,)i(and)e(media)f(and)h(MR)h(head)f(nonlinearities.)
40 b(W)-8 b(e)27 b(presen)m(t-)-165 1068 y(ed)32 b(sim)m(ulation)d
(results)j(sho)m(wing)g(ho)m(w)g(the)h(CS-SD)e(w)m(orks)i(when)g(com)m
(bined)f(with)f(t)m(w)m(o)h(partial)e(resp)s(onse)-165
1233 y(detectors,)39 b(PR4)e(and)g(EPR4,)h(in)e(a)h(magnetic)e
(recording)i(system.)57 b(W)-8 b(e)37 b(sho)m(w)m(ed)i(that)e(the)g
(CS-SD)g(out-)-165 1399 y(p)s(erforms)f(its)g(correlation-insensitiv)m
(e)f(coun)m(terparts)j(in)e(all)f(cases.)57 b(The)38
b(margin)d(of)h(this)h(p)s(erformance)-165 1564 y(di\013erence)f(is)g
(dep)s(enden)m(t)i(on)e(the)g(correlation)f(b)s(et)m(w)m(een)j(the)e
(noise)g(samples.)54 b(The)36 b(higher)g(their)g(corre-)-165
1730 y(lation,)i(the)g(larger)g(the)h(gain)e(pro)m(vided)i(b)m(y)g(the)
g(CS-SD.)g(Because)h(the)f(media)e(noise)h(samples)g(b)s(ecome)-165
1895 y(more)k(correlated)g(at)h(high)f(densities,)k(the)d(ac)m(hiev)m
(ed)h(gain)e(in)g(p)s(erformance)g(b)m(y)i(the)f(CS-SD)g(o)m(v)m(er)h
(the)-165 2060 y(correlation-insensitiv)m(e)30 b(detectors)k(increases)
f(with)g(gro)m(wing)e(densit)m(y)-8 b(.)-165 2505 y Fk(References)-117
2805 y Fq([1])49 b(S.)40 b(Nak)-5 b(aga)m(w)m(a,)42 b(K.)d(Y)-8
b(ok)m(o)m(y)m(ama,)42 b(and)e(H.)g(Kata)m(y)m(ama,)h(\\A)e(study)i(of)
e(detection)h(metho)s(ds)g(of)f(NRZ)35 2971 y(recording,")32
b Fo(IEEE)j(T)-7 b(r)i(ans.)33 b(Magn.)p Fq(,)g(v)m(ol.)f(16,)g(pp.)h
(1041{110,)e(Jan.)i(1980.)-117 3208 y([2])49 b(K.)27
b(Han)g(and)g(R.)f(Sp)s(encer,)k(\\Comparison)25 b(of)i(di\013eren)m(t)
g(detection)g(tec)m(hniques)i(for)d(digital)e(magnetic)35
3373 y(recording)32 b(c)m(hannels,")i Fo(IEEE)g(T)-7
b(r)i(ans.)34 b(Magn.)p Fq(,)e(v)m(ol.)g(31,)h(pp.)g(1128{1133,)d(Marc)
m(h)k(1995.)-117 3611 y([3])49 b(R.)c(W.)g(W)-8 b(o)s(o)s(d)44
b(and)h(D.)f(A.)h(P)m(etersen,)50 b(\\Viterbi)43 b(detection)i(of)f
(class)h(IV)g(partial)e(resp)s(onse)j(on)f(a)35 3776
y(magnetic)29 b(recording)g(c)m(hannel,")i Fo(IEEE)h(T)-7
b(r)i(ans.)31 b(Comm.)p Fq(,)e(v)m(ol.)g(COM-34,)i(pp.)f(454{461,)f(Ma)
m(y)h(1986.)-117 4014 y([4])49 b(H.)31 b(K.)g(Thapar)g(and)g(A.)g(M.)g
(P)m(atel,)h(\\A)e(class)h(of)g(partial)d(resp)s(onse)33
b(systems)f(for)e(increasing)g(storage)35 4179 y(densit)m(y)38
b(in)d(magnetic)g(recording,")i Fo(IEEE)h(T)-7 b(r)i(ans.)37
b(Magn.)p Fq(,)h(v)m(ol.)e(MA)m(G-23,)g(pp.)h(3666{3668,)f(Sept.)35
4344 y(1987.)-117 4582 y([5])49 b(J.)32 b(J.)g(Mo)s(on)g(and)g(L.)g(R.)
g(Carley)-8 b(,)32 b(\\P)m(erformance)g(comparison)f(of)g(detection)i
(metho)s(ds)e(in)h(magnetic)35 4747 y(recording,")g Fo(IEEE)j(T)-7
b(r)i(ans.)33 b(Magn.)p Fq(,)g(v)m(ol.)f(26,)g(pp.)h(3155{3170,)e(No)m
(v.)i(1990.)-117 4984 y([6])49 b(J.)36 b(G.)g(Kenney)i(and)e(R.)g(W.)h
(W)-8 b(o)s(o)s(d,)36 b(\\Multi-lev)m(el)e(decision)h(feedbac)m(k)j
(equalization:)49 b(An)37 b(e\016cien)m(t)35 5150 y(realization)30
b(of)i(FDTS/DF,")f Fo(IEEE)k(T)-7 b(r)i(ans.)34 b(Magn.)p
Fq(,)e(v)m(ol.)g(31,)g(pp.)h(1115{1120,)e(Marc)m(h)i(1995.)p
eop
%%Page: 19 19
19 18 bop -133 -101 a Fm(IEEE)32 b(T)-7 b(r)i(ansactions)35
b(on)e(Magnetics)p Fl(,)d(v)m(ol.)h(34,)h(Ma)m(y)f(1998)1805
b Fq(19)-117 289 y([7])49 b(J.)25 b(Hong,)h(Y.)e(Lee,)j(H.)e(Mutoh,)h
(Q.)f(Sun,)h(H.)f(Ueno,)h(J.)f(W)-8 b(ang,)26 b(and)f(R.)f(W.)g(W)-8
b(o)s(o)s(d,)26 b(\\An)e(exp)s(erimen)m(tal)35 454 y(MDFE)33
b(detector,")g Fo(IEEE)i(T)-7 b(r)i(ans.)33 b(Magn.)p
Fq(,)f(pp.)h(2776{2778,)e(Sept.)i(1997.)-117 702 y([8])49
b(C.)26 b(Mo)s(dlin,)f Fo(Mo)-5 b(deling,)28 b(Dete)-5
b(ction,)29 b(and)e(A)-5 b(daptive)28 b(Signal)f(Pr)-5
b(o)g(c)g(essing)27 b(for)h(Magnetic)g(Disk)f(R)-5 b(e)g(c)g(or)g(d-)35
868 y(ing)p Fq(.)43 b(PhD)33 b(thesis,)g(Stanford)f(Univ)m(ersit)m(y)-8
b(,)33 b(Stanford,)g(CA,)g(Dec.)g(1996.)-117 1116 y([9])49
b(R.)39 b(A.)f(Baugh,)j(E.)e(S.)g(Murdo)s(c)m(k,)i(and)e(B.)g(R.)f
(Natara)5 b(jan,)40 b(\\Measuremen)m(t)g(of)e(noise)h(in)f(magnetic)35
1281 y(media,")31 b Fo(IEEE)k(T)-7 b(r)i(ans.)34 b(Magn.)p
Fq(,)e(v)m(ol.)g(MA)m(G-19,)g(pp.)h(1722{1724,)e(Sept.)i(1983.)-165
1530 y([10])48 b(R.)30 b(N.)h(Belk,)g(K.)f(P)-8 b(.)31
b(George,)g(and)f(S.)h(G.)f(Mo)m(wry)-8 b(,)32 b(\\Noise)e(in)g(high)g
(p)s(erformance)g(thin-\014lm)e(longitu-)35 1695 y(dinal)g(magnetic)f
(recording)i(media,")f Fo(IEEE)k(T)-7 b(r)i(ans.)30 b(Magn.)p
Fq(,)f(v)m(ol.)g(MA)m(G-21,)g(pp.)h(1350{1355,)e(Sept.)35
1860 y(1985.)-165 2109 y([11])48 b(Y.-S.)26 b(T)-8 b(ang,)28
b(\\Explicit)c(form)m(ula)g(for)i(thin)g(\014lm)e(disk)i(noise)g(based)
h(on)g(zig-zag)d(domain)h(transitions,")35 2274 y Fo(IEEE)35
b(T)-7 b(r)i(ans.)33 b(Magn.)p Fq(,)g(v)m(ol.)f(24,)g(pp.)h(3102{3104,)
e(No)m(v.)i(1988.)-165 2523 y([12])48 b(J.-G.)41 b(Zh)m(u)g(and)h(N.)f
(H.)g(Bertram,)i(\\Recording)e(and)g(transition)f(noise)h(sim)m
(ulations)e(in)h(thin)h(\014lm)35 2688 y(media,")31 b
Fo(IEEE)k(T)-7 b(r)i(ans.)34 b(Magn.)p Fq(,)e(v)m(ol.)g(24,)g(pp.)h
(2706{2708,)e(No)m(v.)i(1988.)-165 2936 y([13])48 b(J.-G.)40
b(Zh)m(u)g(and)h(H.)f(W)-8 b(ang,)43 b(\\Noise)c(c)m(haracteristics)i
(of)f(in)m(teracting)f(transitions)g(in)h(longitudinal)35
3102 y(thin)32 b(\014lm)f(media,")g Fo(IEEE)k(T)-7 b(r)i(ans.)34
b(Magn.)p Fq(,)e(v)m(ol.)g(31,)g(pp.)h(1065{1070,)e(Marc)m(h)i(1995.)
-165 3350 y([14])48 b(J.-G.)33 b(Zh)m(u)i(and)f(X.-G.)f(Y)-8
b(e,)35 b(\\Impact)e(of)h(medium)e(noise)i(on)g(v)-5
b(arious)33 b(partial)f(resp)s(onse)k(c)m(hannels,")35
3515 y Fo(IEEE)f(T)-7 b(r)i(ans.)33 b(Magn.)p Fq(,)g(v)m(ol.)f(31,)g
(pp.)h(3087{3089,)e(No)m(v.)i(1995.)-165 3764 y([15])48
b(A.)28 b(Ka)m(v)m(\024)-46 b(ci)m(\023)g(c)27 b(and)h(J.)f(M.)h(F.)f
(Moura,)h(\\Exp)s(edien)m(t)g(media)e(noise)i(mo)s(deling:)38
b(Isolated)27 b(and)g(in)m(teracting)35 3929 y(transitions,")k
Fo(IEEE)k(T)-7 b(r)i(ans.)34 b(Magn.)p Fq(,)e(v)m(ol.)g(32,)g(pp.)h
(3875{3877,)e(Sept.)i(1996.)-165 4178 y([16])48 b(W.)32
b(Zeng)f(and)g(J.)g(Mo)s(on,)g(\\Mo)s(di\014ed)g(Viterbi)f(algorithm)e
(for)j(jitter-dominated)d(1)19 b Fg(\000)h Fj(D)3382
4141 y Fi(2)3452 4178 y Fq(c)m(hannel,")35 4343 y Fo(IEEE)35
b(T)-7 b(r)i(ans.)33 b(Magn.)p Fq(,)g(v)m(ol.)f(MA)m(G-28,)g(pp.)h
(2895{2897,)e(Sept.)i(1992.)-165 4591 y([17])48 b(I.)23
b(Lee)h(and)f(J.)g(M.)g(Cio\016,)h(\\P)m(erformance)f(analysis)f(of)h
(the)g(mo)s(di\014ed)f(maxim)m(um)e(lik)m(eliho)s(o)s(d)g(sequence)35
4757 y(detector)46 b(in)d(the)i(presence)i(of)d(data-dep)s(enden)m(t)i
(noise,")h(in)d Fo(Pr)-5 b(o)g(c.)46 b(26th)f(Asilomar)h(Confer)-5
b(enc)g(e)p Fq(,)35 4922 y(pp.)33 b(961{964,)e(Oct.)i(1992.)p
eop
%%Page: 20 20
20 19 bop -133 -101 a Fm(IEEE)32 b(T)-7 b(r)i(ansactions)35
b(on)e(Magnetics)p Fl(,)d(v)m(ol.)h(34,)h(Ma)m(y)f(1998)1805
b Fq(20)-165 289 y([18])48 b(N.)36 b(M.)f(Za)m(y)m(ed)h(and)g(L.)f(R.)g
(Carley)-8 b(,)36 b(\\Comparison)e(of)g(equalization)g(and)h(detection)
g(for)g(v)m(ery)i(high-)35 454 y(densit)m(y)26 b(magnetic)e
(recording,")i(in)f Fo(IEEE)j(INTERMA)n(G)g(Confer)-5
b(enc)g(e)p Fq(,)25 b(\(New)h(Orleans\),)h(Apr.)e(1997.)-165
702 y([19])48 b(L.)28 b(C.)g(Barb)s(osa,)g(\\T)-8 b(o)m(w)m(ards)29
b(the)f(detection)f(of)h(signals)e(in)h(presence)i(of)e(signal-dep)s
(enden)m(t)h(noise,")g(in)35 868 y Fo(Pr)-5 b(o)g(c.)72
b(SPIE:)36 b(Co)-5 b(ding)35 b(and)h(Signal)f(Pr)-5 b(o)g(c)g(essing)35
b(for)h(Information)f(Stor)-5 b(age)p Fq(,)34 b(v)m(ol.)f(2605,)h
(\(Philadel-)35 1033 y(phia\),)e(pp.)h(48{56,)e(Oct.)i(1995.)-165
1281 y([20])48 b(G.)41 b(D.)g(F)-8 b(orney)42 b(Jr.,)i(\\Maxim)m
(um-lik)m(eliho)s(o)s(d)37 b(sequence)44 b(estimation)c(of)h(digital)d
(sequences)45 b(in)c(the)35 1447 y(presence)33 b(of)d(in)m(tersym)m(b)s
(ol)f(in)m(terference,")j Fo(IEEE)h(T)-7 b(r)i(ansactions)31
b(on)i(Information)e(The)-5 b(ory)p Fq(,)31 b(v)m(ol.)f(18,)35
1612 y(pp.)j(363{378,)e(Marc)m(h)j(1972.)-165 1860 y([21])48
b(A.)30 b(Ka)m(v)m(\024)-46 b(ci)m(\023)g(c)29 b(and)h(J.)f(M.)h(F.)f
(Moura,)h(\\The)g(Viterbi)e(algorithm)e(and)k(Mark)m(o)m(v)h(noise)e
(memory)-8 b(,")29 b Fo(IEEE)35 2026 y(T)-7 b(r)i(ans.)38
b(Inform.)f(The)-5 b(ory)p Fq(,)37 b(submitted)g(No)m(v.)g(1997.)55
b(28)36 b(pages,)i(accepted)h(for)d(publication)e(in)i(Jan.)35
2191 y(2000)c(issue.)-165 2440 y([22])48 b(A.)31 b(Ka)m(v)m(\024)-46
b(ci)m(\023)g(c)30 b(and)h(J.)f(M.)h(F.)f(Moura,)h(\\Exp)s(erimen)m
(tal)e(v)-5 b(alidation)27 b(of)j(the)h(triangle)d(zig-zag)h
(transition)35 2605 y(mo)s(del,")i Fo(IEEE)k(T)-7 b(r)i(ans.)33
b(Magn.)p Fq(,)g(v)m(ol.)f(33,)g(pp.)h(2704{2706,)e(Sept.)i(1997.)-165
2853 y([23])48 b(K.)26 b(C.)h(Brac)m(k)m(en)h(and)e(L.)g(R.)g(Carley)-8
b(,)28 b(\\Adaptiv)m(e)e(con)m(tin)m(uous-time)g(equalization)e(follo)m
(w)m(ed)h(b)m(y)i(FDT-)35 3019 y(S/DF)32 b(sequence)j(detection,")e
Fo(IEEE)h(T)-7 b(r)i(ans.)34 b(Magn.)p Fq(,)e(v)m(ol.)h(31,)f(pp.)h
(1089{1094,)d(Marc)m(h)k(1995.)-165 3267 y([24])48 b(E.)29
b(Biglieri,)d(E.)j(Chiab)s(erto,)f(G.)g(P)-8 b(.)29 b(Maccone,)i(and)d
(E.)h(Viterb)s(o,)f(\\Comp)s(ensation)g(of)g(nonlinearities)35
3432 y(in)f(high-densit)m(y)h(magnetic)f(recording)g(c)m(hannels,")j
Fo(IEEE)h(T)-7 b(r)i(ans.)29 b(Magn.)p Fq(,)g(v)m(ol.)e(30,)i(pp.)f
(5079{5086,)35 3598 y(No)m(v.)33 b(1994.)-165 3846 y([25])48
b(S.)g(K.)g(Nair)e(and)i(J.)g(Mo)s(on,)j(\\Impro)m(v)m(ed)e
(equalization)c(for)j(digital)c(recording)j(using)h(nonlinear)35
4011 y(\014ltering)31 b(and)i(error)f(con\014nemen)m(t,")i
Fo(IEEE)h(T)-7 b(r)i(ans.)33 b(Magn.)p Fq(,)g(v)m(ol.)f(30,)g(pp.)h
(4221{4223,)e(No)m(v.)i(1994.)-165 4260 y([26])48 b(L.)42
b(Ljung,)i Fo(System)f(Identi\014c)-5 b(ation:)60 b(The)-5
b(ory)43 b(for)g(the)g(User)p Fq(.)71 b(Englew)m(o)s(o)s(d)41
b(Cli\013s:)61 b(Pren)m(tice-Hall,)35 4425 y(Inc.,)34
b(1987.)-165 4674 y([27])48 b(D.)25 b(A.)h(Lindholm,)f(\\Magnetic)h
(\014elds)g(of)f(\014nite)h(trac)m(k)g(width)g(heads,")i
Fo(IEEE)g(T)-7 b(r)i(ans.)27 b(Magn.)p Fq(,)g(v)m(ol.)f(13,)35
4839 y(pp.)33 b(1460{1462,)e(Sept.)i(1977.)p eop
%%Page: 21 21
21 20 bop -133 -101 a Fm(IEEE)32 b(T)-7 b(r)i(ansactions)35
b(on)e(Magnetics)p Fl(,)d(v)m(ol.)h(34,)h(Ma)m(y)f(1998)1805
b Fq(21)p 530 511 2625 4 v 530 528 V 528 648 4 121 v
545 648 V 597 612 a(P)m(arameter)p 2153 648 V 1192 w(Sym)m(b)s(ol)p
2626 648 V 214 w(V)-8 b(alue)p 3136 648 V 3153 648 V
530 652 2625 4 v 530 668 V 528 789 4 121 v 545 789 V
597 752 a(media)31 b(remanence)p 2153 789 V 992 w Fj(M)2419
767 y Fh(r)p 2626 789 V 2682 752 a Fq(450kA/m)p 3136
789 V 3153 789 V 530 792 2625 4 v 528 912 4 121 v 545
912 V 597 876 a(media)g(co)s(ercivit)m(y)p 2153 912 V
1037 w Fj(H)2414 891 y Fh(c)p 2626 912 V 2682 876 a Fq(160kA/m)p
3136 912 V 3153 912 V 530 916 2625 4 v 528 1036 4 121
v 545 1036 V 597 1000 a(media)g(thic)m(kness)p 2153 1036
V 1099 w Fj(\016)p 2626 1036 V 316 w Fq(0)p Fj(:)p Fq(02)p
Fj(\026)p Fq(m)p 3136 1036 V 3153 1036 V 530 1039 2625
4 v 528 1162 4 123 v 545 1162 V 597 1126 a(media)g(cross-trac)m(k)j
(correlation)d(width)p 2153 1162 V 263 w Fj(s)p 2626
1162 V 359 w Fq(200)2920 1108 y(\027)2920 1126 y(A)p
3136 1162 V 3153 1162 V 530 1165 2625 4 v 528 1286 4
121 v 545 1286 V 597 1250 a(head-media)g(separation)p
2153 1286 V 809 w Fj(d)p 2626 1286 V 349 w Fq(15nm)p
3136 1286 V 3153 1286 V 530 1289 2625 4 v 528 1410 4
121 v 545 1410 V 597 1373 a(head)i(\014eld)f(gradien)m(t)g(factor)p
2153 1410 V 682 w Fj(Q)p 2626 1410 V 391 w Fq(0)p Fj(:)p
Fq(8)p 3136 1410 V 3153 1410 V 530 1413 2625 4 v 528
1533 4 121 v 545 1533 V 597 1497 a(head)h(gap)f(length)p
2153 1533 V 1086 w Fj(g)p 2626 1533 V 289 w Fq(0)p Fj(:)p
Fq(135)p Fj(\026)p Fq(m)p 3136 1533 V 3153 1533 V 530
1537 2625 4 v 528 1657 4 121 v 545 1657 V 597 1621 a(trac)m(k)h(width)p
2153 1657 V 1213 w Fj(T)14 b(W)p 2626 1657 V 322 w Fq(2)p
Fj(\026)p Fq(m)p 3136 1657 V 3153 1657 V 530 1660 2625
4 v 528 1781 4 121 v 545 1781 V 597 1745 a(transition)31
b(width)h(parameter)p 2153 1781 V 613 w Fj(a)p 2626 1781
V 286 w Fq(0)p Fj(:)p Fq(019)p Fj(\026)p Fq(m)p 3136
1781 V 3153 1781 V 530 1784 2625 4 v 528 1904 4 121 v
545 1904 V 597 1868 a(p)s(ercolation)f(length)p 2153
1904 V 834 w Fj(L)d Fq(=)g(1)p Fj(:)p Fq(4)p Fj(a)p 2626
1904 V 99 w Fq(0)p Fj(:)p Fq(0266)p Fj(\026)p Fq(m)p
3136 1904 V 3153 1904 V 530 1908 2625 4 v 528 2028 4
121 v 545 2028 V 597 1992 a(50\045)k(pulse)h(width)p
2153 2028 V 949 w Fj(P)14 b(W)g Fq(50)p 2626 2028 V 170
w(0)p Fj(:)p Fq(167)p Fj(\026)p Fq(m)p 3136 2028 V 3153
2028 V 530 2031 2625 4 v 530 2048 V 743 2316 a(T)-8 b(able)33
b(1:)43 b(Recording)32 b(parameters)g(used)i(in)e(sim)m(ulations.)396
4602 y @beginspecial 35 @llx 242 @lly 574 @urx 550 @ury
3472 @rwi @setspecial
%%BeginDocument: block.epsi
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 35 242 574 550
%%BeginPreview: 540 309 1 309
% 0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000001c000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000000078000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000f8000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000001f8000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000003f0000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000001f0000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000000170000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000000320000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000018000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000180000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000001800000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000018000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000180000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000001800000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000007ffffffffffffffffffffffffffffffffffffffe000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000004000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000004000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000004000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000004000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000004000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000004000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000004000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000004000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000004000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000004000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000004000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000038000802000000000
% 0000000000000000000000000004000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000018000000000000000
% 0000000000000000000000000004000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000018000000000000000
% 00000000000000000000000000040000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000b943d9a62c7ed0000
% 000000000000000000000000000400000000000000000000000000000000000000200000000000000000000000000000000000000000000000000019b26c9a26666d0000
% 0000000000000000000000000004383180000300c038cc00000380000000000000200000000000000000000000000000000000000000000000000019a0409c26266e0000
% 00000000000000000000000000041c200000010000180400000180000000000000200000000000000000000000000000000000000000000000000019a040862626630000
% 00000000000000000000000000040c200800010000180400000180080000400000200000000000000000000000000000000000000000000000000019b264922666690000
% 00000000000000000000000000040c601800010000180400000180180000c0000020000000000000000000000000000000000000000000000000000f9e3dde73c7ef0000
% 000000000000000000000000000406438868f9f1c019c4c3401b8d08686c4363e02000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000004064188cc6118c018c58660119988cccc4231802000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000402c188fc6118c018c707e0319f88fcc04631802000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000004038188806118cf18c7040031900880804631802000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000004038188c46118c018c58620319888c4c44631802000000000000000000000000000000000000000000000180000000000000000003800
% 0040000030000000003000000004038188ec6118c018c4c7601b9d88ecec43318020000000000000000000000000000000000000000000003c0000000000000000003f00
% 00000000100000000010000000040103ce78f1f1e03deef3c01fcf0e787873e3c020000000000000000000000000000000000000000000007f0000000000000000003ff0
% 0000000010000000001000000004000000000000000000000000000000000000007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0
% 1ac3efc5903459f73f11468000040000000000000000000000000000000000000020000000000000000000000000000000000000000000003f0000000000000000003f00
% 1a464ccd9034d9993313268000040000000000000000000000000000000000000020000000000000000000000000000000000000000000003f0000000000000000003800
% 1c464cc3903839993112070000040000000000000000000000000000000000000020000000000000000000000000000000000000000000000c0000000000000000000000
% 0643ccc5900c5999311201800004000000000000000000000000000000000000002000000000000000000000000000000000000000000000040000000000000000000000
% 12420ccd9024d999331324800004000000000000000000000000000000000000002000000000000000000000000000000000000000000000040000000000000000000000
% 1ee7efcff83cfdfbbe39e7800004000000000000000000000000000000000000002000000000000000000000000000000000000000000000040000000000000000000000
% 0007e00000000000300000000004000000000000000000000000000000000000002000000000000000000000000000000000000000000000040000000000000000000000
% 0006600000000000300000000004000000000000000000000000000000000000002000000000000000000000000000000000000000000000040000000000000000000000
% 0007c00000000000380000000004000000000000000000000000000000000000002000000000000000000000000000000000000000000000040000000000000000000000
% 0000000000000000000000000004000000000000000000000000000000000000002000000000000000000000000000000000000000000000040000000000000000000000
% 0000000000000000000000000004000000000000000000000000000000000000002000000000000000000000000000000000000000000000040000000000000000000000
% 0000000000000000000000007004000000000000000000000000000000000000002000000000000000000000000000000000000000000000040000000000000000000000
% 0000000000000000000000007e04000000000000000000000000000000000000002000000000000000000000000000000000000000000000040000000000000000000000
% 0000000000000000000000007fe400000000000000000000000000000000000000200e018000001c00200000180000000030000000000000040000000000000000000000
% ffffffffffffffffffffffffffe4000000000000000000000000000000000000002006008000000c00000000080000000010000000000000040000000000000000000000
% 0000000000000000000000007e04000000000000000000000000000000000000002006008000000c00000000080000000010000000000000040000000000000000000000
% 000000000000000000000000700400000000000000000000000000000000000000202e508b72285c1a63efc5883459f71f91468000000000040000000000000000000000
% 0000000000000000000000000004000000000000000000000000000000000000002066c89b3264cc1a264ccd8834d9991993268000000000040000000000000000000000
% 000000000000000000000000000400000000000000000000000000000000000000206680873640cc1c264cc3883839991892070000000000040000000000000000000000
% 0000000000000000000000000004000000000000000000000000000000000000002066808b1c40cc0623ccc5880c59991892018000000000040000000000000000000000
% 0000000000000000000000000004000000000000000000000000000000000000002066c89b1c64cc12220ccd8824d9991993248000000000040000000000000000000000
% 000000000000000000000000000400000000000000000000000000000000000000203e79df883c7c1e77efcfdc3cfdfb9f39e78000000000040000000000000000000000
% 000000000000000000000000000400000000000000000000000000000000000000200000000800000007e000000000001800000000000000040000000000000000000000
% 000000000000000000000000000400006719c0e070e000000038c718666cc000002000000030000000066000000000001800000000000000040000000000000000000000
% 000000000000000000000000000400002308e060704000000010420c466c400000200000003000000007c000000000001c00000000000000040000000000000000000000
% 0000000000000000000000000004000021886020f04000000010020c462c6000002000000000000000000000000000000000000000000000040000000000000000000000
% 0000000000000000000000000004000021886030b040000000100206060e0000002000000000000000000000000000000000000000000000040000000000000000000000
% 000000000000000000000000000400002308c030b04001b1f010820606070000002000000000000000000000000000000000000000000000040000000000000000000000
% 00000000000000000000000000040000270f8019b0400118c01f820606078000002000000000000000000000000000000000000000000000040000000000000000000000
% 00000000000000000000000000040000200b801930400318c01082060601c000007ffffffffffffffffffffffffffffffffffffc00000000040000000000000000000000
% 000000000000000000000000000400002009801f30400318c01002060610e000002000000000000000000000000000000000000400000000040000000000000000000000
% 000000000000000000000000000400002008c00e30408318c010020c06106000002000000000000000000000000000000000000400000000040000000000000000000000
% 000000000000000000000000000400002008e00e30418198c010020c06184000002000000000000000000000000000000000000400000000040000000000000000000000
% 00000000000000000000000000040000f83e71e4f9ff01f1e07c0ff00f0fc000002000000000000000000000000000000000000400000000040000000000000000000000
% 0000000000000000000000000004000000000000000000000000000000000000002000000000000000000000000000000000000400000000040000000000000000000000
% 0000000000000000000000000004000000000000000000000000000000000000002000000000000000000000000000000000000400000000040000000000000000000000
% 0000000000000000000000000004000000000000000000000000000000000000002000000000000000000000000000000000000400000000040000000000000000000000
% 0000000000000000000000000004000000000000000000000000000000000000002000000000000000000000000000000000000400000000040000000000000000000000
% 0000000000000000000000000004000000000000000000000000000000000000002000000000000000000000000000000000000400000000040000000000000000000000
% 0000000000000000000000000004000000000000000000000000000000000000002000000000000000000000000000000000000400000000040000000000000000000000
% 0000000000000000000000000004000000000000000000000000000000000000002000000000000000000000000000000000000400000000040000000000000000000000
% 0000000000000000000000000004000000000000000000000000000000000000002000000000000000000000000000000000000400000000040000000000000000000000
% 0000000000000000000000000004000000000000000000000000000000000000002000000000000000000000000000000000000400000000040000000000000000000000
% 0000000000000000000000000004000000000000000000000000000000000000002000000000000000000000000000000000000400000000040000000000000000000000
% 0000000000000000000000000004000000000000000000000000000000000000002000000000000000000000000000000000000400000000040000000000000000000000
% 0000000000000000000000000004000000000000000000000000000000000000002000000000000000000000000000000000000400000000040000000000000000000000
% 0000000000000000000000000004000000000000000000000000000000000000002000000000000000000000000000000000000400000000040000000000000000000000
% 0000000000000000000000000004000000000000000000000000000000000000002000000000000000000000000000000000000400000000040000000000000000000000
% 0000000000000000000000000004000000000000000000000000000000000000002000000000000000000000000000000000000400000000040000000000000000000000
% 0000000000000000000000000004000000000000000000000000000000000000002000000000000000000000000000000000000400000000040000000000000000000000
% 0000000000000000000000000004000000000000000000000000000000000000002000000000000000000000000000000000000400000000040000000000000000000000
% 0000000000000000000000000004000000000000000000000000000000000000002000000000000000000000000000000000000400000000040000000000000000000000
% 0000000000000000000000000004000000000000000000000000000000000000002000000000000000000000000000000000000400000000040000000000000000000000
% 0000000000000000000000000004000000000000000000000000000000000000002000000000000000000000000000000000000400000000040000000000000000000000
% 0000000000000000000000000004000000000000000000000000000000000000002000000000000000000000000000000000000400000000040000000000000000000000
% 0000000000000000000000000004000000000000000000000000000000000000002000000000000000000000000000000000000400000000040000000000000000000000
% 0000000000000000000000000004000000000000000000000000000000000000002000000000000000000000000000000000000400000000040000000000000000000000
% 0000000000000000000000000007ffffffffffffffffffffffffffffffffffffffe000000000000000000000000000000000000400000000040000000000000000000000
% 0000000000000000000000000000000000000180000000000000000000000000000000000000000000000000000000000000000400000000040000000000000000000000
% 0000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000000400000000040000000000000000000000
% 0000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000400000000040000000000000000000000
% 0000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000400000000040000000000000000000000
% 0000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000000400000000040000000000000000000000
% 0000000000000000000000000000000000001800000000000000000000000000000000000000000000000000000000000000000400000000040000000000000000000000
% 0000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000400000000040000000000000000000000
% 000000000000000000000000000000000000200003c0ff03fc0ff03fc0ff03fc0ff83fe0ff83fe0ff83fe0ff81fe07f81fe07f85fe07f81ff47fc1ff07fc1ff07fc1f800
% 0000000000000000000000000000000000004000022022202220222022202220222022202220222022202220222022202220222422202220262022202220222022202800
% 000000000000000000000000000000000000c000020000000000000000000000000000000000000000000000000000000000000400000000040000000000000000000800
% 0000000000000000000000000000000000018000028888888888888888888888888888888888888888888888888888888888888c888888888c8888888888888888888800
% 0000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000400000000040000000000000000000000
% 0000000000000000000000000000000000020000020202020202020202020202020202020202020202020202020202020202020602020202060202020202020202020000
% 0000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000000400000000040000000000000000000000
% 00000000000000000000000000000000000c0000008888888888888888888888888888888888888888888888888888888888888c888888888c8888888888888888888000
% 0000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000000400000000040000000000000000000000
% 0000000000000000000000000000000000100000022020202020202020202020202020202020202020202020202020202020207f202020207f2020202020202020202000
% 00000000000000000000000000000000002000000200000000000380c0700001800000000000000000000000000000000000007f000000007f0000000000000000000800
% 00000000000000000000000000000000006000000288888888888988c8b8888888888888888888888888888888888888888888bf88888888bf8888888888888888888800
% 0000000000000000000000000000000000c00000020000000000018040300000800000000000000000000000000000000000003e000000003e0000000000000000000800
% 0000000000000000000000000000000000800000020202020202038242320202820202020202020202020202020202020202023e020202023e0202020202020202020800
% 000000000000000000000000000000000100000002000fe36388d1807c31b0d8980000000000000000000000000000000000001e000000001e0000000000000000000800
% 000000000000000000000000000000000300000002888eeab9999988ceb99998b88888888888888888888888888888888888889e888888889e8888888888888888888800
% 00000000000000000000000000000000060000000200046630d1f98046331980e00000000000000000000000000000000000001c000000001c0000000000000000000800
% 000000000000000000000000000000000c0000000220266632f123a066333b20e22022202220222022202220222022202220222c222022202e2022202220222022202800
% 0000000000000000000000000000000008000000000004663061898046331988b00000000000000000000000000000000000000c000000000c0000000000000000000000
% 000000000000000000000000000000001000000000888cebb8e9d988ceb999d8988888888888888888888888888888888888888c888888888c8888888888888888888000
% 000000000000000000000000000000003000000000000ef3e060f3c07c79f0f1de00000000000000000000000001fffffffffffffffffffffffffffffffff00000000000
% 0000000000000000000000000000000060000000020202020202020202020202020202020202020202020202020302020202020202020202020202020202120202020000
% 0000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000100000000000
% 0000000000000000000000000000000080000000028888888888888888888888888888888888888888888888888988888888888888888888888888888888988888888000
% 0000000000000000000000000000000100000000020000000000000000000000000000000000000000000000000100000000000000000000000000000000100000000800
% 0000000000000000000000000000000300000000022020202020202020202020202020202020202020202020202120202020202020202020202020202020302020202800
% 0000000000000000000000000000000600000000020000000000000000000000000000000000000000000000000100000000000000000000000000000000100000000800
% 0000000000000000000000000000000400000000028888888888888888888888888888888888888888888888888988888888888888888888888888888888988888888800
% 0000000000000000000000000000000800000000020000000000000000000000000000000000000000000000000100000000000000000000000000000000100000000800
% 0000000000000000000000000000001800000000020202020202020202020202020202020202020202020202020302020202020202020202020202020202120202020800
% 0000000000000000000000000000003000000000020000000000000000000000000000000000000000000000000100000000000000000000000000000000100000000800
% 0000000000000000000000000000006000000000028888888888888888888888888888888888888888888888888988888888888888888888888888888888988888888800
% 0000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000100000000000
% 0000000000000000000000000000008000000000022022202220222022202220222022202220222022202220222122202221a22022202220622032202220322022202000
% 0000000000000000000000000000018000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000100000000000
% 0000000000000000000000000000030000000000008888888888888888888888888888888888888888888888888988888888888888898888888c88888888988888888000
% 0000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000100000000000000030018000c00000000100000000000
% 00000000000000000000000000000400000000000202020202020202020202020202020202020202020202020203020fe3639b1a03b30f8ae6c673b36202120202020000
% 0000000000000000000000000000080000000000020000000000000000000000000000000000000000000000000100066231993301910988664433332000100000000800
% 00000000000000000000000000001800000000000288888888888888888888888888888888888888888888888889888ceeb99cbf89c98b88ef8cbb8b8888988888888800
% 00000000000000000000000000003000000000000200000000000000000000000000000000000000000000000001000466318f2000f10d8863c43201e000100000000800
% 0000000000000000000000000000200000000000022020202020202020202020202020202020202020202020202120246631b331213139a864e433326020302020202800
% 0000000000000000000000000000200000000000020000000000000000000000000000000000000000000000000100046331913b01111bc8644433b22000100000000800
% 00000000000000000000000000002000000000000288888888888888888888888888888888888888888888888889888efbebdf9e89f9dfceffcff9ebe888988888888800
% 0000000000000000000000000000200000000000020000000000000000000000000000000000000000000000000100000000000000000000000000000000100000000800
% 0000000000000000000000000000200000000000020202020202020202020202020202020202020202020202020302020202020202020202020202020202120202020800
% 0000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000100000000000
% 0000000000000000000000000000200000000000008888888888888888888888888888888888888888888888888988888888888888888888888888888888988888888000
% 0000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000100000000000
% 0000000000000000000000000000200000000000022022202220222022202220222022202220222022202220222122202220222022202220222022202220322022202000
% 0000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000100000000000
% 0000000000000000000000000000200000000000028888888888888888888888888888888888888888888888888988888888888888888888888888888888988888888000
% 0000000000000000000000000000200000000000020000000000000000000000000000000000000000000000000100000000000000000000000000000000100000000800
% 0000000000000000000000000000200000000000020202020202020202020202020202020202020202020202020302020202020202020202020202020202120202020800
% 0000000000000000000000000000200000000000020000000000000000000000000000000000000000000000000100000000000000000000000000000000100000000800
% 0000000000000000000000000000200000000000028888888888888888888888888888888888888888888888888988888888888888888888888888888888988888888800
% 0000000000000000000000000000200000000000020000000000000000000000000000000000000000000000000100000000000000000000000000000000100000000800
% 0000000000000000000000000000200000000000022020202020202020202020202020202020202020202020202120202020202020203820202020202020302020202800
% 0000000000000000000000000000200000000000020000000000000000000000000000000000000000000000000100000000000000000800000000000000100000000800
% 000000000000000000000000000020000000000002888888888888888888888888888888888888888888888888898888888888c888888888888888888888988888888800
% 000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000010000000000c000000800000000000000100000000000
% 00000000000000000000000000002000000000000202020202020202020202020202020202020202020202020203020202020247cf8f8b869f0202020202120202020000
% 0000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000100000000004309998b0ccc0000000000100000000000
% 000000000000000000000000000020000000000000888888888888888888888888888888888888888888888888898888888888cb8b988e8fcc8888888888988888888000
% 000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000010000000000430d900e080c0000000000100000000000
% 000000000000000000000000000020000000000002202220222022202220222022202220222022202220222022212220222022633bb8ab2c6e2022202220322022202000
% 000000000000000000000000000020000000000002000000000000000000000000000000000000000000000000010000000000431bdd898ecc0000000000100000000800
% 000000000000000000000000000020000000000002888888888888888888888888888888888888888888888888898888888888ff9fcf9def9e8888888888988888888800
% 0000000000000000000000000000200000000000020000000000000000000000000000000000000000000000000100000000000000000000000000000000100000000800
% 0000000000000000000000000000200000000000020202020202020202020202020202020202020202020202020302020202020202020202020202020202120202020800
% 0000000000000000000000000000200000000000020000000000000000000000000000000000000000000000000100000000000000000000000000000000100000000800
% 000000000000000000000000000020000000000002888fffffffffffffffffffffffffff8888888888888888888988888888888888888888888888888888988888888800
% 0000000000000000000000000000200000000000020004000000000000000000000000008000000000000000000100000000000000000000000000000000100000000800
% 000000000000000000000000000020000000000002202420202020202020202020202020a020202020202020202120202020202020202020202020202020302020202800
% 0000000000000000000000000000200000000000000004000000000000000000000000008000000000000000000100000000000000000000000000000000100000000000
% 000000000000000000000000000020000000000000888c888888888888888888888888888888888888888888888988888888888888888888888888888888988888888000
% 0000000000000000000000000000200000000000000004000000000000000000000000008000000000000000000100000000000000000000000000000000100000000000
% 0000000000000000000000000000200000000000020206020202020202020202020202028202020202020202020302020202020202020202020202020202120202020000
% 0000000000000000000000000000200000000000000004000000000000000600000000008000000000000000000100000000000000000000000000000000100000000000
% 000000000000000000000000000020000000000002888c888888888888888888888888888888888888888888888988888888888888888888888888888888988888888000
% 0000000000000000000000000000200000000000020004000000000000200000000000008000000000000000000100000000000000000000000000000000100000000800
% 000000000000000000000000000020000000000002202620222022202260222022202220a220222022202220222122202220222022202220222022202220322022202800
% 00000000000000000000000000002000000000000200040000000fde1a23ee360000000080000000000000000001fffffffffffffffffffffffffffffffff00000000800
% 000000000000000000000000000020000000000002888c8888888eeebba98eee88888888888888888888888888888888888888888888c888888888888888888888888800
% 000000000000000000000000000020000000000002000400000004663f218660000000008000000000000000000000000000000000004000000000000000000000000800
% 0000000000000000000000000000200000000000020206020202066622238642020202028202020202020202020202020202020202024202020202020202020202020800
% 0000000000000000000000000000200000000000020004000000046631218662000000008000000000000000000000000000000000004000000000000000000000000800
% 000000000000000000000000000020000000000002888c8888888ceebba98efe88888888888888888888888888888888888888888888c888888888888888888888888800
% 00000000000000000000000000002000000000000000040000000ef71e3bcf3c000000008000000000000000000000000000000000004000000000000000000000000800
% 000000000000000000000000000020000000000000202420202020202020202020202020a020202020202020202020202020202020206020202020202020202020202000
% 0000000000000000000000000000200000000000000004000000000000000000000000008000000000000000000000000000000000004000000000000000000000000000
% 000000000000000000000000000020000000000000888c88888888888888888888888888888888888888888888888888888888888888c888888888888888888888888000
% 0000000000000000000000000000200000000000000004000000000000000000000000008000000000000000000000000000000000004000000000000000000000000000
% 0000000000000000000000000000200000000000020206020202020202020202020202028202020202020202020202020202020202024202020202020202020202020000
% 0000000000000000000000000000200000000000020004000000000000000000000000008000000000000000000000000000000000004000000000000000000000000800
% 000000000000000000000000000020000000000002888c88888888888888888888888888888888888888888888888888888888888888c888888888888888888888888800
% 0000000000000000000000000000200000000000020004000000000000000000000000008000000000000000000000000000000000004000000000000000000000000800
% 000000000000000000000000000020000000000002202620222022202220222022202220a220222022202220222022202220222022206220222022202220222022202800
% 0000000000000000000000000000200000000000020004000000000000000000000000008000000000000000000000000000000000004000000000000000000000000800
% 000000000000000000000000000020000000000002888c88888888888888888888888888888888888888888888888888888888888888c888888888888888888888888800
% 0000000000000000000000000000200000000000020004000000000000000000000000008000000000000000000000000000000000004000000000000000000000000800
% 0000000000000000000000000000200000000000020206020202020202020202020202028202020202020202020202020202020202024202020202020202020202020800
% 0000000000000000000000000000200000000000000004000000000000000000000000008000000000000000000000000000000000004000000000000000000000000800
% 000000000000000000000000000020000000000000888c888888888888888888e8888888888888888888888888888888888888888888c888888888888888888888888000
% 0000000000000000000000000000200000000000000004000000000000000000000000008000000000000000000000000000000000004000000000000000000000000000
% 000000000000000000000000000020000000000000202420202020202021202820202020a020202020202020202020202020202020206020202020202020202020202000
% 0000000000000000000000000000200000000000000004000000000000030018000000008060000000000000000000000000000000004000000000000000000000000000
% 000000000000000000000000000020000000000000888c8bebebff8fceb98f88ebebf8888be888888888888888888888888888888888c888888888888888888888888000
% 0000000000000000000000000000200000000000020004066231998462310988623198008fe0000000000000000000000000000000004000000000000000000000000800
% 00000000000000000000000000002000000000000202060606331b866233038a66331a02bfe2020202020202020202020202020202024202020202020202020202020800
% 00000000000000000000000000007ffffffffffffffffc040631198462310d8866311800bfffffffffffffffffffffffffffffffffffc000000000000000000000000800
% 000000000000000000000000000000000000000002888c8eaeb9998ceab99988eeb998888fe8888888888888888888888888888888888888888888888888888888888800
% 0000000000000000000000000000000000000000020004076331198663711bc86331180080e0000000000000000000000000000000000000000000000000000000000800
% 000000000000000000000000000000000000000002202623e3e3bfe7e3f9ffeef3e3be20a220222022202220222022202220222022202220222022202220222022202800
% 0000000000000000000000000000000000000000020004000000000400000000000000008000000000000000000000000000000000000000000000000000000000000800
% 000000000000000000000000000000000000000002888c888888888c88888888888888888888888888888888888888888888888888888888888888888888888888888800
% 0000000000000000000000000000000000000000000004000000000400000000000000008000000000000000000000000000000000000000000000000000000000000800
% 0000000000000000000000000000000000000000020206020202020f02020202020202028202020202020202020202020202020202020202020202020202020202020000
% 0000000000000000000000000000000000000000000004000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000888c888888888888888888888888888888888888888888888888888888888888888888888888888888888888888000
% 0000000000000000000000000000000000000000000004000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000202420202020202020202020202020a020202020202020202020202020202020202020202020202020202020202000
% 0000000000000000000000000000000000000000020004000000000000000000000000008000000000000000000000000000000000000000000000000000000000000800
% 000000000000000000000000000000000000000002888c888888888888888888888888888888888888888888888888888888888888888888888888888888888888888800
% 0000000000000000000000000000000000000000020004000000000000000000000000008000000000000000000000000000000000000000000000000000000000000800
% 0000000000000000000000000000000000000000020206020202020202020202020202028202020202020202020202020202020202020202020202020202020202020800
% 0000000000000000000000000000000000000000020004000000000000000000000000008000000000000000000000000000000000000000000000000000000000000800
% 000000000000000000000000000000000000000002888c888888888888888888888888888888888888888888888888888888888888888888888888888888888888888800
% 0000000000000000000000000000000000000000020004000000000000700000000000008000000000000000000000000000000000000000000000000000000000000800
% 000000000000000000000000000000000000000002202620222022202230222022202220a220222022202220222022202220222022202220222022202220222022202800
% 0000000000000000000000000000000000000000000004000000000000300200000000008000000000000000000000000000000000000000000000000000000000000800
% 000000000000000000000000000000000000000000888c888888888888b88e88888888888888888888888888888888888888888888888888888888888888888888888000
% 000000000000000000000000000000000000000000000400000018cfc371f21a000000008000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000202060202020ac662333233020202028202020202020202020202020202020202020202020202020202020202020000
% 000000000000000000000000000000000000000000000400000008c46630723f000000008000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000888c88888888cceeb9baa8888888888888888888888888888888888888888888888888888888888888888888888000
% 000000000000000000000000000000000000000002000400000008c466333231000000008000000000000000000000000000000000000000000000000000000000000800
% 00000000000000000000000000000000000000000220242020202de663737a3b20202020a020202020202020202020202020202020202020202020202020202020202800
% 00000000000000000000000000000000000000000200040000000fe7c3fbfb9e000000008000000000000000000000000000000000000000000000000000000000000800
% 000000000000000000000000000000000000000002888c888888888c88888888888888888888888888888888888888888888888888888888888888888888888888888800
% 0000000000000000000000000000000000000000020004000000000400000000000000008000000000000000000000000000000000000000000000000000000000000800
% 0000000000000000000000000000000000000000020206020202020602020202020202028202020202020202020202020202020202020202020202020202020202020800
% 0000000000000000000000000000000000000000020004000000000f00000000000000008000000000000000000000000000000000000000000000000000000000000800
% 000000000000000000000000000000000000000002888c888888888888888888888888888888888888888888888888888888888888888888888888888888888888888800
% 0000000000000000000000000000000000000000000004000000000000000000000000008000000000000000000000000000000000000000000000000000000000000800
% 000000000000000000000000000000000000000002202620222022202220222022202220a220222022202220222022202220222022202220222022202220222022202000
% 0000000000000000000000000000000000000000000004000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000888c888888888888888888888888888888888888888888888888888888888888888888888888888888888888888000
% 0000000000000000000000000000000000000000000007ffffffffffffffffffffffffff8000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020000
% 0000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000800
% 0000000000000000000000000000000000000000028888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888800
% 0000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000800
% 0000000000000000000000000000000000000000022020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202800
% 0000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000800
% 0000000000000000000000000000000000000000028888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888800
% 0000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000800
% 0000000000000000000000000000000000000000020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020800
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000800
% 0000000000000000000000000000000000000000008888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888000
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000022022202220222022202220222022202220222022202220222022202220222022202220222022202220222022202000
% 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000008888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888000
% 0000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000800
% 0000000000000000000000000000000000000000020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020800
% 0000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000800
% 0000000000000000000000000000000000000000028888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888800
% 0000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000800
% 000000000000000000000000000000000000000003c1ff07fc1ff07fc1ff07fc0ff03fc0ff03fc0ff03fc0ff83fe0ff83fe0ff83fe0ff81fe07f81fe07f81fe07f81f800
%%EndImage
%%EndPreview
/InitDictCount countdictstack def
gsave
save
mark
newpath
/showpage {} def
%!PS-Adobe-3.0
%%BoundingBox: 35 242 574 550
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 { } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	
	
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 612 792 0 1 2 FMDOCUMENT
0 0 /Times-Roman FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "1" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 0 0 0 1 1 1]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
J
200.5 411.5 566.5 411.5 566.5 242.5 200.5 242.5 4 Y
5 X
0 0 0 1 0 0 0 K
V
J
200.5 411.5 566.5 411.5 566.5 242.5 200.5 242.5 4 Y
J
200.5 407.75 200.5 411.5 204.25 411.5 3 L
0.5 H
2 Z
0 X
N
[7.542 6.536] 7.542 I
204.25 411.5 562.74 411.5 2 L
N
J
562.74 411.5 566.5 411.5 566.5 407.75 3 L
N
[7.547 6.54] 7.547 I
566.5 407.75 566.5 246.25 2 L
N
J
566.5 246.25 566.5 242.5 562.75 242.5 3 L
N
[7.542 6.536] 7.542 I
562.75 242.5 204.26 242.5 2 L
N
J
204.26 242.5 200.5 242.5 200.5 246.25 3 L
N
[7.547 6.54] 7.547 I
200.5 246.25 200.5 407.75 2 L
N
J
280.75 542.5 290.49 549.51 285.95 538.4 283.35 540.45 4 Y
V
148.5 301.5 148.5 369.5 283.36 540.44 3 L
N
143.5 419.5 300.5 504.5 R
7 X
V
0 X
N
564.97 480.31 576.5 477 564.97 473.69 564.97 477 4 Y
V
300.5 477 564.97 477 2 L
N
0 18 Q
(V) 149.31 477.5 T
(iterbi-like detector) 161.22 477.5 T
300.5 447 447.5 447 2 L
N
(PRML or FDTS) 163.49 442.5 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
131.96 465.31 143.5 462 131.96 458.69 131.96 462 4 Y
V
35.5 462 131.96 462 2 L
N
401.5 328.68 533.5 390.68 R
N
(noise statistics) 415.25 367.5 T
(tracker) 442.52 343.5 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
215.99 263 322.99 340 R
N
(metric) 246.5 322.32 T
(computation) 224.49 297.32 T
(update) 245.5 272.32 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
467.5 328.5 467.5 301.5 2 L
N
334.04 298.19 322.5 301.5 334.04 304.81 334.04 301.5 4 Y
V
334.04 301.5 467.5 301.5 2 L
N
215.5 301.5 148.5 301.5 2 L
N
450.81 402.04 447.5 390.5 444.19 402.04 447.5 402.04 4 Y
V
447.5 446.5 447.5 402.04 2 L
N
490.81 402.04 487.5 390.5 484.19 402.04 487.5 402.04 4 Y
V
487.5 476.5 487.5 402.04 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(novel block) 214.5 390.5 T
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 15 Q
(signal samples) 37.5 470.5 T
(delayed signal samples) 307.5 454.5 T
(decisions) 509.5 484.5 T
[8.501 7.368] 0 I
90 450 2.59 2.59 487.5 476.5 G
90 450 2.59 2.59 487.5 476.5 A
0 0 0 1 0 0 0 K
J
FMENDPAGE
%%EndPage: "1" 1
%%Trailer
%%BoundingBox: 35 242 574 550
%%PageOrder: Descend
%%Pages: 1
%%DocumentFonts: Times-Roman
%%EOF
countdictstack InitDictCount sub { end } repeat
cleartomark
restore
grestore

%%EndDocument
 @endspecial -118 4914 a(Figure)f(1:)44 b(Blo)s(c)m(k)32
b(diagram)e(of)i(the)h(Viterbi-lik)m(e)e(correlation-sensitiv)m(e)g
(sequence)k(detector)e(\(CS-SD\).)p eop
%%Page: 22 22
22 21 bop -133 -101 a Fm(IEEE)32 b(T)-7 b(r)i(ansactions)35
b(on)e(Magnetics)p Fl(,)d(v)m(ol.)h(34,)h(Ma)m(y)f(1998)1805
b Fq(22)256 2124 y @beginspecial 77 @llx 432 @lly 482
@urx 643 @ury 3808 @rwi @setspecial
%%BeginDocument: symbols.epsi
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 77 432 482 643
%%BeginPreview: 406 212 1 212
% 000000001f87ff0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000cc34933000000600018000600018000600018000600018000600018000c0001800060001800060001800060000c00
% 000000000c434831000000b0002c000e0002c000b0002c000b00038000b0002c00160002c000e0002c000e0002c000b0001600
% 000000000cc3081810000190006400060006400190006400190001800190006400320006400060006400060006400190003200
% 000000000fc3080e30000118004600060004600118004600118001800118004600230004600060004600060004600118002300
% 000000000c43080700000118004600060004600118004600118001800118004600230004600060004600060004600118002300
% 000000000c63082300000118004600060004600118004600118001800118004600230004600060004600060004600118002300
% 000000000c63083310000198006600060006600198006600198001800198006600330006600060006600060006600198003300
% 000000001fc79e3e30000190006400060006400190006400190001800190006400320006400060006400060006400190003200
% 0000000000000000000000f0003c000f0003c000f0003c000f0003c000f0003c001e0003c000f0003c000f0003c000f0001e00
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000004000100004000100004000100004000100004000100004000100004000100004000100004000100004
% 000000000000000000004000100004000100004000100004000100004000100004000100004000100004000100004000100004
% 000000000000000000004000100004000100004000100004000100004000100004000100004000100004000100004000100004
% 000000000000000000004000100004000100004000100004000100004000100004000100004000100004000100004000100004
% 000000000000000000004000100004000100004000100004000100004000100004000100004000100004000100004000100004
% 000000000000000000004000100004000100004000100004000100004000100004000100004000100004000100004000100004
% 000000000000000000004000100004000100004000100004000100004000100004000100004000100004000100004000100004
% 0000000000000000000040001000041c0100004000100004000100004000100004000100004000100004000100004000100004
% 0000000000000000000040001000041c0100004000100004000100004000100004000100004000100004000100004000100004
% 00000000000000000000400010000431c100004000100004000100004000100004000100004000100004000100004000100004
% 000000000000000000004000100004306100004000100004000100004000100004000100004000100004000100004000100004
% 00000000000000000000400010000420c100004000100004000100004000100004000100004000100004000100004000100004
% 000000000000000000004000100004608100004000100004000100004000100004000100004000100004000100004000100004
% 000000000000000000004000100004004100004000100004000100004000100004000100004000100004000100004000100004
% 00000000000000000000400010000402c100004000100004000100004000100004000100004000100004000100004000100004
% 000000000000000000004000100004038100004000100004000100004000100004000100004000100004000100004000100004
% 000000000000000000004000100004000100004000100004000100004000100004000100004000100004000100004000100004
% 000000000000000000004000100004000100004000100004000100004000100004000100004000100004000100004000100004
% 000000000000000000004000100004000100004000100004000100004000100004000100004000100004000100004000100004
% 000000000000000000004000100004000100004000100004000100004000100004000100004000100004000100004000100004
% 000000000000000000004000100004060103804000100004000100004000100004000100004000100004000100004000100004
% 0000000000000000000040001000043f010380400010000400010000400010000400010000407f100004000100004000100004
% 000000000000000000004000100004c7e1060c4000100004000100004000100004000100004071d00004000100004000100004
% 0000000000000000000040001000070f1d061c40001000040001000040001000040001000040e0300004000100004000100004
% 0000000000000000000040001000060007041840001000040001000040001000040001000041f0100004000100004000100004
% 00000000000000000000400010000400030c284000100004000100004000100004000100004200180004000100004000100004
% 00000000000000000000400010000c000180fc4000100004000100004000100004000100004200140004000100004000100004
% 00000000000000000000400010000c0001c0184000100004000100004000100004000100004400140004000100004000100004
% 000000000000000000004000100014000160104000100004000100004000100004000100004400120004000100004000100004
% 000000000000000000004000100014000120004000100004000100004000100004000100004c00120004000100004000100004
% 000000000000000000004000100024000130004000100004000100004000100004000100004800130004000100004000100004
% 000000000000000000004000100024000110004000100004000100004000100004000100004800110004000100004000100004
% 000000000000000000004000100024000118004000100004000100004000100004000100005000118004000100004000100004
% 000000000000000000004000100044000108004000100004000100004000100004000100005000108004000100004000100004
% 000000000000000000004000100044000104004000100004000100004000100004000100005000108004000100004000100004
% 000000000000000000004000100044000104004000100004000100004000100004000100005000104004000100004000100004
% 000000000000000000004000100044000102004000100004000100004000100004000100006000104004000100004000100004
% 00000000000000000000400011c044000102004000100004000100004000100004000100006000102004000100004000100004
% 00000000000000000000400011c044000101404000100004000100004000100004000100006000102004000100004000100004
% 000000000000000000004000131c84000101c04000100004000100004000100004000100006000102004000100004000100004
% 000000000000000000004000132684000101c04000100004000100004000100004000100006000101804000100004000100004
% 000000000000000000004000120684000103c04000100004000100004000100004000100006000101c04000100004000100004
% 000000000000000000004000160c84000100404000100004000100004000100004000100006000101804000100004000100004
% 000000000000000000004000100884000100404000100004000100004000100004000100004000103c04000100004000100004
% 000000000000000000004000103584000100204000100004000100004000100004000100004000100804000100004000100004
% 000000000000000000004000107d04000100304000100004000100004000100004000100004000100804000100004000100004
% 000000000000000000004000100104000100104000100004000100004000100004000100004000100804000100004000100004
% 000000000000000000004000100104000100084000100004000100004000100004000100004000100804000100004000100004
% 0000000000000000000040001001040001000c4000100004000100004000100004000100004000100404000100004000100004
% 000000000000000000004000100104000100044000100004000100004000100004000100004000100404000100004000100004
% 000000000000000000004000100204000100024000100004000100004000100004000100004000100404000100004000100004
% 00000000000000000000400010020400010003400010000400010000400010000400010000c000100404000100004000100004
% 00000000000000000000400010020400010001c00010000400010000400010000400010000c000100204000100004000100004
% 00000000000000000000400010020400010000c00010000400010000400010000400010000c000100204000100004000100004
% 00000000000000000000400010020400010000600010000400010000400010000400010000c000100204000100004000100004
% 00000000000000000000400010040400010000700010000400010000400010000400010000c000100204000100004000100004
% 00000000000000000000400010040400010000580010000400010000400010000400010000c000100304000100004000100004
% 000000000000000000004000100404000100004c0010000400010000400010000400010000c000100104000100004000100004
% 000000000000000000004000100404000100004210100004000100004000100004000100014000100104000100004000100004
% 0000000000000000000040001008040001000041f0100004000100004000100004000100014000100104000100004000100004
% 000000000000000000004000100804000100004070100004000100004000100004000100014000100104000100004000100004
% 000000000000000000004000100c040001000040fc100004000100004000100004000100014000100104000100004000100004
% 000000000000000000004000101c04000100004003100004000100004000100004000100014000100084000100004000100004
% 000000000000000000004000101c04000100004000f00004000100004000100004000100014000100084000100004000100004
% 000000000000000000004000103c040001000040003f9804000100004000100004000100024000100084000100004000100004
% 000000000000000000004000103004000100004000107fc4000100004000100004000100024000100084000100004000100004
% 00000000000000000000407010200400010000400010183fc00100004000100004000100024000100084000100004000100004
% 078107077e787f0f00004070104004000100004000103c04700100004000100004000100024000100084000100004000100004
% 1983030632303133000040c31040040001000040001000041d0100004000100004000100024000100044000100004000100004
% 1883838e33303031000040c3108004000100004000100004070100004000100004000100044000100044000100004000100004
% 0c03838e3330301810004083118004000100004000100004070100004000100004000100044000100044000100004000100004
% 0704829636303e0e300041821100040001000040001000040f0100004000100004000100044000100044000100004000100004
% 0384c2d63030320700004002130004000100004000100004010100004000100004000100044000100044000100004000100004
% 118cc2d63030302300004006120004000100004000100004008100004000100004000100044000100044000100004000100004
% 19886266303030331000400614000400010000400010000400c100004000100004000100084000100024000100004000100004
% 1f1cf72f787f7f3e30004000180004000100004000100004006100004000100004000100084000100024000100004000100004
% 000000000000000000004000100004000100004000100004002100004000100004000100084000100024000100004000100004
% 000000000000000000004000300004000100004000100004002100004000100004000100084000100024000100004000100004
% 000000000000000000004000d00004000100004000100004002100004000100004000100104000100024000100004000100004
% 000000000000000000004003900004000100004000100004001100004000100004000100104000100024000100004000100004
% 000000000000000000004016100004000100004000100004001100004000100004000100204000100014000100004000100004
% 0000000000000000000040f8100004000100004000100004001100004000100004000100204000100014000100004000100004
% 0000000000000000000043f0100004000100004000100004001100004000100004000100404000100014000100004000100004
% 00000000000000000001fe50100004000100004000100004000900004000100004000100404000100014000100004000100004
% 0000000000000000000e4000100004000100004000100004000900004000100004000100c04000100014000100004000100004
% 000000000000000000004000100004000100004000100004000900004000100004000100804000100014000100004000100004
% 000000000000000000004000100004000100004000100004000900004000100004000100c0400010000c000100004000100004
% 000000000000000000004000100004000100004000100004000900004000100004000101c0400010000c000100004000100004
% 000000000000000000004000100004000100004000100004000900004000100004000101c0400010000c000100004e0011c004
% 000000000000000000004000100004000100004000100004000500004000100004000103c0400010000c000100004e0011c004
% 00000000000000000000400010000400010000400010000400050000400010000400010600400010000c000100005863d30c7c
% 00000000000000000000400010000400010000400010000400050000400010000400010c00400010000c000100005860d30c4c
% 000000000000000000004000100004000100004000100004000500004000100004000108004000100004000100005060920c74
% 000000000000000000004000100004000100004000100004000500004000100004000110004000100004000100007041960864
% 000000000000000000004000100004000100004000100004000500004000100004000120004000100004000100004041100894
% 0000000000000000000040001000040001000040001000040005000040001000040001c00040001000040001000040c2101894
% 0000000000000000000040001000040001000040001000040005000040001000040001800040001000040001000040c21018f4
% 000000000000000000004000100004000100004000100004000500004000100004000300004000100004000100004000100004
% 000000000000000000004000100004000100004000100004000500004000100004000d00004000100006000100004000100004
% 000000000000000000004000100004000100004000100004000500004000100004067100004000100006000100004000100004
% 00000000000000000000400010000400010000400010000400030000400010000407c100004000100006000100004000100404
% 000000000000000000004000100004000100004000100004000300004000101805fe0100004000100006000100004010101c04
% 000000000000000000004000100004000100004000100004000300004000101ffe0f010000400010000600010000407ffffffc
% 00000000000000000000400010000400010000400010000400030000400013f8040001000040001000060001000043f0103c04
% 0000000000000000000040001000040001000040001000040003000040001c3c04000100004000100005000100005cf0100004
% 000000000000000000004000100004000100004000100004000300004000f0000400010000400010000500010000e000100004
% 000000000000000000004000100004000100004000100004000300004003100004000100004000100005000100034000100004
% 0000000000000000000040001000040001000040001000040003000040041000040001000040001000050001000c4000100004
% 000000000000000000004000100004000100004000100004000300004018100004000100004000100005000100184000100004
% 000000000000000000004000100004000100004000100004000300004070100004000100004000100005000100304000100004
% 000000000000000000004000100004000100004000100004000300004070100004000100004000100005800100c04000100004
% 0000000000000000000040001000040001000040001000040001000040e0100004000100004000100004800101804000100004
% 0000000000000000000040001000040001000040001000040001000041f0100004000100004000100004800101c04000100004
% 000000000000000000004000100004000100004000100004000100004100100004000100004000100004800103804000100004
% 000000000000000000004000100004000100004000100004000100004200100004000100004000100004800103c04000100004
% 000000000000000000004000100004000100004000100004000100004600100004000100004000100004400106004000100004
% 000000000000000000004000100004000100004000100004000100004400100004000100004000100004400104004000100004
% 000000000000000000004000100004000100004000100004000100004c00100004000100004000100004400108004000100004
% 000000000000000000004000100004000100004000100004000100004800100004000100004000100004600108004000100004
% 000000000000000000004000100004000100004000100004000100004800100004000100004000100004200110004000100004
% 000000000000000000004000100004000100004000100004000180005000100004000100004000100004200110004000100004
% 000000000000000000004000100004000100004000100004000180005000100004000100004000100004200130004000100004
% 0000000000000000000040001000040001000040001000040001c0006000100004000100004000100004100120004000100004
% 000000000000000000004000100004000100004000100004000140006000100004000100004000100004100160004000100004
% 000000000000000000004000100004000100004000100004000140004000100004000100004000100004100140004000100004
% 00000000000000000000400010000400010000400010000400012000c0001000040001000040001000040801c0004000100004
% 00000000000000000000400010000400010000400010000400013001c0001000040001000040001000040e0180004000100004
% 000000000000000000004000100004000100004000100004000118434000100004000100004000100004070300004000100004
% 00000000000000000000400010000400010000400010000400010ffe4000100004000100004000100004073d00004000100004
% 000000000000000000004000100004000100004000100004000101c040001000040001000040001000040fc100004000100004
% 000000000000000000004000100004000100004000100004000103c04000100004000100004000100004000100004000100004
% 000000000000000000004000100004000100004000100004000100004000100004000100004000100004000100004000100004
% 000000000000000000004000100004000100004000100004000100004000100004000100004000100004000100004000100004
% 000000000000000000004000100004000100004000100004000100004000100004000100004000100004000100004000100004
% 000000000000000000004000100004000100004000100004000100004000100004000100004000100004000100004000100004
% 000000000000000000004000100004000100004000100004000100004000100004000100004000100004000100004000100004
% 000000000000000000004000100004000100004000100004000100004000100004000100004000100004000100004000100004
% 000000000000000000004000100004000100004000100004000100004000100004000100004000100004000100004000100004
% 000000000000000000004000100004000100004000100004000100004000100004000100004000100004000100004000100004
% 000000000000000000004000100004000100004000100004000100004000100004000100004000100004000100004000100004
% 000000000000000000004000100004000100004000100004000100004000100004000100004000100004000100004000100004
% 000000000000000000004000100004000100004000100004000100004000100004000100004000100004000100004000100004
% 000000000000000000004000100004000100004000100004000100004000100004000100004000100004000100004000100004
% 000000000000000000004000100004000100004000100004000100004000100004000100004000100004000100004000100004
% 000000000000000000004000100004000100004000100004000100004000100004000100004000100004000100004000100004
% 000000000000000000004000100004000100004000100004000100004000100004000100004000100004000100004000100004
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000078000f00000001e0003c000f0003c000000078001e00078001e00000001e00000000f0003c000f00
% 3de7383bf038780f0000038e0071c001000e7801d70075c01d700000038e00e38038e00e38001000e7800000071c01c70071c0
% ccc2183198c4303300000202004040010008480111004440111000000202008080202008080010008480000004040101004040
% c4641c718986303100000201004020010008440110804420110800000201008040201008040010008440000004020100804020
% 60781c719983301810000401008020010010440210808420210800000401010040401010040010010440000008020200808020
% 383814b1f983300e300007ff80fff03ff01ffe03ffc0fff03ffc0ffc07ff81ffe07ff81ffe03fe01ffe01ff00fff03ffc0fff0
% 1c1016b18983300700000401008020010010440210808420210800000401010040401010040010010440000008020200808020
% 8c1016b18d8230230000060100c02001001844031080c42031080000060101804060101804001001844000000c02030080c020
% cc1013318cc63033100002030040600100084c01118044601118000002030080c02030080c00100084c0000004060101804060
% f838397bf87c7f3e300003060060c001000c5801930064c019300000030600c18030600c18001000c5800000060c01830060c0
% 0000000000000000000000fc001f80000003f0007e001f8007e0000000fc003f000fc003f00000003f00000001f8007e001f80
% 000000000000000000000020000400000000800010000400010000000020000800020000800000000800000000400010000400
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000030000c00060000c00000000000000000000000000000000000000000000000000000000030000c00
% 000000000000000000000030000c00060000c00000000000000000000000000000000000000000000000000000000030000c00
% 000000000000000000000078001e000f0001e00000000000000000000000000000000000000000000000000000000078001e00
% 000000000000000000000078001e000f0001e00000000000000000000000000000000000000000000000000000000078001e00
% 000000000000000000000078001e000f0001e00000000000000000000000000000000000000000000000000000000078001e00
% 0000000000000000000000fc003f001f8003f000000000000000000000000000000000000000000000000000000000fc003f00
% 000000000000000000000010000400020000400000000000000000000000000000000000000000000000000000000010000400
% 000000000000000000000010000400020000400000000000000000000000000000000000000000000000000000000010000400
% 000000000000000000000010000400020000400000000000000000000000000000000000000000000000000000000010000400
% 000000000000000000000010000400020000400000000000000000000000000000000000000000000000000000000010000400
% 000000000000000000000010000400020000400000000000000000000000000000000000000000000000000000000010000400
% 000000000000000000000010000400020000400000000000000000000000000000000000000000000000000000000010000400
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000001e00078003c0007800000000000000000000000000000000000000000000000000000000f0003c000
% 00000000000000000000036000d8006c000d800000000000000000000000000000000000000000000000000000001b0006c000
% 000000000000000000000640019000c800190000000000000000000000000000000000000000000000000000000032000c8000
% 0000000000000000000006430191c0c8e019060000000000000000000000000000000000000000000000000000003219ec8678
% 0000000000000000000004e3013a609c30138e000000000000000000000000000000000000000000000000000000271869c648
% 00000000000000000000076301d860ec601d8c0000000000000000000000000000000000000000000000000000003b184ec670
% 0000000000000000000000020000c0004000140000000000000000000000000000000000000000000000000000000010c00460
% 0000000000000000000000020000800020007e0000000000000000000000000000000000000000000000000000000010800490
% 0000000000000000000000060003400160000c0000000000000000000000000000000000000000000000000000000031000c90
% 0000000000000000000000060007c001c000080000000000000000000000000000000000000000000000000000000031000cf0
%%EndImage
%%EndPreview
/InitDictCount countdictstack def
gsave
save
mark
newpath
/showpage {} def
%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 { } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	
	
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 612 792 0 1 3 FMDOCUMENT
0 0 /Times-Italic FMFONTDEFINE
1 0 /Times-Roman FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "1" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 0 0 0 1 1 1]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
175.75 626.62 175.75 482.62 2 L
0.5 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
193.75 626.62 193.75 482.62 2 L
N
211.75 626.62 211.75 482.62 2 L
N
229.75 626.62 229.75 482.62 2 L
N
247.75 626.62 247.75 482.62 2 L
N
265.75 626.62 265.75 482.62 2 L
N
283.75 626.62 283.75 482.62 2 L
N
301.75 626.62 301.75 482.62 2 L
N
319.75 626.62 319.75 482.62 2 L
N
337.75 626.62 337.75 482.62 2 L
N
355.75 626.62 355.75 482.62 2 L
N
373.75 626.62 373.75 482.62 2 L
N
391.75 626.62 391.75 482.62 2 L
N
409.75 626.62 409.75 482.62 2 L
N
427.75 626.62 427.75 482.62 2 L
N
445.75 626.62 445.75 482.62 2 L
N
463.75 626.62 463.75 482.62 2 L
N
481.75 626.62 481.75 482.62 2 L
N
153 543.76 M
 204 543.76 177.75 606.51 202 606.51 D
N
202 606.51 M
 227.25 606.51 211.75 561.51 265.5 561.76 D
N
265.75 561.76 M
 294 562.01 273.75 498.76 293.25 498.76 D
N
338 525.76 M
 389 525.76 362.75 606.76 387 606.76 D
N
293.75 498.76 M
 312.25 498.76 295.5 525.51 337.75 525.76 D
N
386.75 606.51 M
 408.63 606.85 408.16 498.76 421 498.76 D
N
421.5 498.76 M
 440 498.76 423.25 525.51 465.5 525.76 D
N
463.5 525.76 481.75 525.76 2 L
N
165.25 544.51 167.75 547.01 1.25 RR
V
N
183.5 563.76 186 566.26 1.25 RR
V
N
201.5 605.26 204 607.76 1.25 RR
V
N
219.5 586.76 222 589.26 1.25 RR
V
N
273.5 556.76 276 559.26 1.25 RR
V
N
237.5 566.51 240 569.01 1.25 RR
V
N
291.5 497.51 294 500.01 1.25 RR
V
N
255.5 561.01 258 563.51 1.25 RR
V
N
309.5 516.01 312 518.51 1.25 RR
V
N
381.5 604.26 384 606.76 1.25 RR
V
N
363.5 538.76 366 541.26 1.25 RR
V
N
327.5 524.01 330 526.51 1.25 RR
V
N
345.75 526.01 348.25 528.51 1.25 RR
V
N
399.5 585.01 402 587.51 1.25 RR
V
N
435.5 514.01 438 516.51 1.25 RR
V
N
417.5 499.26 420 501.76 1.25 RR
V
N
453.5 523.51 456 526.01 1.25 RR
V
N
471.5 524.51 474 527.01 1.25 RR
V
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
157.75 626.62 157.75 482.62 2 L
N
0 14 Q
(r) 163.75 556.05 T
0 11.2 Q
(1) 169.2 552.55 T
0 14 Q
(r) 177.75 585.05 T
0 11.2 Q
(2) 183.2 581.55 T
0 14 Q
(r) 216.75 602.05 T
0 11.2 Q
(4) 222.2 598.55 T
0 14 Q
(r) 197.75 615.05 T
0 11.2 Q
(3) 203.2 611.55 T
0 14 Q
(r) 446.75 534.05 T
0 11.2 Q
(17) 452.2 530.55 T
0 14 Q
(r) 465.75 534.05 T
0 11.2 Q
(18) 471.2 530.55 T
1 14 Q
(0) 163.75 632.62 T
(0) 181.75 632.62 T
(1) 199.75 632.62 T
(0) 217.75 632.62 T
(0) 235.75 632.62 T
(0) 253.75 632.62 T
(0) 271.75 632.62 T
(1) 289.75 632.62 T
(0) 307.75 632.62 T
(0) 325.75 632.62 T
(0) 342.75 632.62 T
(0) 361.75 632.62 T
(1) 379.75 632.62 T
(0) 397.75 632.62 T
(1) 415.75 632.62 T
(0) 433.75 632.62 T
(0) 451.75 632.62 T
(0) 470.75 632.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(BITS:) 112.41 633.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
90 450 5.4 5.4 167.88 466.56 A
164.36 466.56 171.39 466.56 2 L
N
221.63 470.08 221.63 463.05 2 L
N
90 450 5.4 5.4 221.63 466.56 A
218.11 466.56 225.14 466.56 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
204 470.08 204 463.05 2 L
N
200.49 466.56 207.52 466.56 2 L
N
290.49 466.56 297.52 466.56 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
383.88 470.08 383.88 463.05 2 L
N
380.36 466.56 387.39 466.56 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
416.61 466.56 423.64 466.56 2 L
N
90 450 5.4 5.4 186.5 466.56 A
182.99 466.56 190.02 466.56 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
90 450 5.4 5.4 312 466.56 A
308.49 466.56 315.52 466.56 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
90 450 5.4 5.4 330 466.56 A
326.49 466.56 333.52 466.56 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
90 450 5.4 5.4 348 466.56 A
344.49 466.56 351.52 466.56 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
90 450 5.4 5.4 366 466.56 A
362.49 466.56 369.52 466.56 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
90 450 5.4 5.4 438.38 466.56 A
434.86 466.56 441.89 466.56 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
90 450 5.4 5.4 474.5 466.56 A
470.99 466.56 478.02 466.56 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
240.25 470.08 240.25 463.05 2 L
N
90 450 5.4 5.4 240.25 466.56 A
236.74 466.56 243.77 466.56 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
258.25 470.08 258.25 463.05 2 L
N
90 450 5.4 5.4 258.25 466.56 A
254.74 466.56 261.77 466.56 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
276.25 470.08 276.25 463.05 2 L
N
90 450 5.4 5.4 276.25 466.56 A
272.74 466.56 279.77 466.56 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
401.75 470.08 401.75 463.05 2 L
N
90 450 5.4 5.4 401.75 466.56 A
398.24 466.56 405.27 466.56 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
90 450 5.4 5.4 456.25 466.56 A
452.74 466.56 459.77 466.56 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(a) 161.63 435 T
0 11.2 Q
(1) 168.63 431.5 T
0 14 Q
(a) 179.63 435 T
0 11.2 Q
(2) 186.63 431.5 T
0 14 Q
(a) 197 435 T
0 11.2 Q
(3) 204 431.5 T
0 14 Q
(a) 215.63 435 T
0 11.2 Q
(4) 222.63 431.5 T
0 14 Q
(a) 446.75 435 T
0 11.2 Q
(17) 453.75 431.5 T
0 14 Q
(a) 464.75 435 T
0 11.2 Q
(18) 471.75 431.5 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
164.88 450.43 167.88 455.62 170.88 450.43 167.88 450.43 4 Y
V
167.88 445 167.88 450.43 2 L
N
182.88 450.43 185.88 455.62 188.88 450.43 185.88 450.43 4 Y
V
185.88 445 185.88 450.43 2 L
N
200.25 450.43 203.25 455.62 206.25 450.43 203.25 450.43 4 Y
V
203.25 445 203.25 450.43 2 L
N
218.88 450.43 221.88 455.62 224.88 450.43 221.88 450.43 4 Y
V
221.88 445 221.88 450.43 2 L
N
470.63 450.43 473.63 455.62 476.63 450.43 473.63 450.43 4 Y
V
473.63 445 473.63 450.43 2 L
N
453 450.43 456 455.62 459 450.43 456 450.43 4 Y
V
456 445 456 450.43 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 14 Q
(SYMBOLS:) 76.62 462.5 T
(SAMPLES:) 79.73 552.5 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1" 1
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Descend
%%Pages: 1
%%DocumentFonts: Times-Italic
%%+ Times-Roman
%%EOF
countdictstack InitDictCount sub { end } repeat
cleartomark
restore
grestore

%%EndDocument
 @endspecial 389 2435 a(Figure)32 b(2:)43 b(Sample)31
b(signal)g(w)m(a)m(v)m(eform,)j(its)e(samples)g(and)h(written)f(sym)m
(b)s(ols.)1033 4646 y @beginspecial 123 @llx 506 @lly
260 @urx 646 @ury 1941 @rwi @setspecial
%%BeginDocument: trellis.epsi
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 123 506 260 646
%%BeginPreview: 138 141 1 141
% 000003c0000000000000000000f000000000
% 000004c00000000000000000013000000000
% 00000cc00000000000000000033000000000
% 000018c20000000000000000063080018000
% 000019800000000000000000066000008000
% 00001be0000000000000000006f800018000
% 00000ec6000000000000000003b182010000
% 000000060000000000000000000182010000
% 00000006000000000000000000019f830000
% 000000040000000000000000000106020000
% 0000000e0000000000000000000382020000
% 0000000e00000000000000000003820f0000
% 000000000000000000000000000000000000
% 000000000000007f04004000000000000000
% 000000000000003108002000000000000000
% 000000000000003011f81000000000000000
% 000000000000003010f81000000000000000
% 000000000000003e30c01000000000000000
% 000000000000003230811000000000000000
% 000000000000003031801000000000000000
% 000000000000003031801000000000000000
% 000000000000007f11031000000000000000
% 000000000000000018032000000000000000
% 00000000000000000c034000000000000000
% 000000000000000000020000000000000000
% 020000000000000000070000000000000000
% 020000000000000000070000000000000800
% 020000800000000000000000000020000800
% 020001c00000000000000000000070000800
% 020003e000004000000000000000f8000800
% 3fe007e00000c000000000000001f801ff00
% 020003f800004000000000000003f0000800
% 020001e70000400000000000000fe0000800
% 02000031c000400000000010003f80000800
% 00000018380040000000003000ff00000800
% 000000080e0040000000001001ff00000000
% 000000040180e0000000001000fe00000000
% 00000002007000000000001001fe00000000
% 00000003000c000000000010033c00000000
% 000000018003800000000010063c00000000
% 00000000c000e000000000380c6c00000000
% 0000000040001c000000000030c000000000
% 000000002000070000000000618000000000
% 00000000100000e000000000c30000000000
% 000000001800003800000001820000000000
% 000000018c00000700000006040000000000
% 0000000146000001c000000c080000000000
% 000000036200000038000018180000000000
% 00000002210000000e000030300000000000
% 000000022080000001c000c0600000000000
% 0000000220c0000000700180400000000000
% 0000000340600000000e0300800000000000
% 000000014030000000038601000000000000
% 000000000010000000006803000000000000
% 000000000008000000003c06000000000000
% 00000000000400000000630c000000000000
% 00000000000600000000c0e8000000000000
% 000000000003000000010038000000000000
% 000000000001800000060027000000000000
% 000000000000c000000c0061c0c000000000
% 0f00000000004000001800c038e000000000
% 71c0000000002000002001800ff000003c00
% 424000000000300000c0010001fc0001cf00
% 42200080000018000180020003fe20010900
% 822001c000000c000300040003ff70010880
% 823003e00000060004000c0003fff8020880
% bfe007fffffffffffffffffffffff803ffc0
% c22003e0000001003000300003f0f0020880
% 426001b00000008060006000c38060030880
% 62c00018000000c080004000a00000010980
% 1f8000060000006300008001b00000018b00
% 040000030000003600018001100000007e00
% 000000018000001c00030001100000001000
% 00000000c000001800060001100000000000
% 0000000030000064000c0001a00000000000
% 00000000180000c600080000a00000000000
% 000000000c00018300100000000000000000
% 000000000600020180200000000000000000
% 0000000001800c0080600000000000000000
% 0000000000c0180040c00000000000000000
% 000000000060300021800000000000000000
% 000000000030400031000000000000000000
% 00000000000980001a000000000000000000
% 00000000000700000c000000000000000000
% 00000000000700000c000000000000000000
% 00000000000980001a000000000000000000
% 000000000030400031000000000000000000
% 000000000060300021800000000000000000
% 0000000000c0180040c00000000000000000
% 0000000001800c0080600000000000000000
% 000000000600020180200000000000000000
% 000000000c00018300100000c00000000000
% 00000000180000c600080000a00000000000
% 0000000030000064000c0001b00000000000
% 00000000c000001800060001100000000000
% 000000018000001c00030001100000000000
% 0f0000030000003600018001100000000000
% 71c000060000006300008001a00000003c00
% 40400018000000c080004000a0000001c700
% 402000b00000008060006000038020010100
% 802001e0000001003000300003f070010080
% 803003e0000002001800180003fff8020080
% bfe007fffffffffffffffffffffff803ffc0
% c02003c000000c000300040003fff0020080
% 40600180000018000180020003fe60030080
% 60c000000000300000c0010001fc00010180
% 1f80000000002000002001800ff000018300
% 0400000000004000001800c038e000007e00
% 000000000000c000000c0061c0c000001000
% 000000000001800000060027000000000000
% 000000000003000000010038000000000000
% 00000000000600000000c0e8000000000000
% 00000000000400000000630c000000000000
% 000000000008000000003c06000000000000
% 000000018010000000006803000000000000
% 000000014030000000038601000000000000
% 0000000360600000000e0300800000000000
% 0000000220c0000000700180400000000000
% 000000022080000001c000c0600000000000
% 00000002210000000e000030300000000000
% 000000034200000038000018180000000000
% 0000000146000001c000000c080000000000
% 000000000c00000700000006040000000000
% 000000001800003800000001820000000000
% 00000000100000e000000000c30000000000
% 000000002000070000000010618000000000
% 0000000040001c000000003030c000000000
% 00000000c000e000000000100c6c00000000
% 000000018003800000000010063c00000000
% 00000003000c000000000010033c00000000
% 00000002007000000000071001fe00000000
% 00000004018008000000001000fe00000000
% 000000080e0018000000003801ff00000000
% 00000018380008000000000000ff00000000
% 00000031c000080000000000003f80000000
% 000000e70000080000000000000fa0000000
% 000001f800038800000000000003f0000000
% 000003e000000800000000000000f8000000
% 3fe007e000001c00000000000001f801ff00
% 000003c000000000000000000000f0000000
% 000001800000000000000000000060000000
%%EndImage
%%EndPreview
/InitDictCount countdictstack def
gsave
save
mark
newpath
/showpage {} def
%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 { } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	
	
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 612 792 0 1 4 FMDOCUMENT
0 0 /Times-Roman FMFONTDEFINE
1 0 /Times-Italic FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "1" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 0 0 0 1 1 1]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
125.61 508.06 132.64 508.06 2 L
0.5 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
129.13 619.58 129.13 612.54 2 L
N
125.61 616.06 132.64 616.06 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
90 450 5.4 5.4 129.13 543.81 A
125.61 543.81 132.64 543.81 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
129.13 583.33 129.13 576.29 2 L
N
90 450 5.4 5.4 129.13 579.81 A
125.61 579.81 132.64 579.81 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
251.36 507.56 258.39 507.56 2 L
N
254.88 619.08 254.88 612.04 2 L
N
251.36 615.56 258.39 615.56 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
90 450 5.4 5.4 254.88 543.56 A
251.36 543.56 258.39 543.56 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
254.88 583.08 254.88 576.04 2 L
N
90 450 5.4 5.4 254.88 579.56 A
251.36 579.56 258.39 579.56 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
90 450 2.25 2.25 147 544 G
90 450 2.25 2.25 147 544 A
90 450 2.25 2.25 147 508 G
90 450 2.25 2.25 147 508 A
90 450 2.25 2.25 147 580 G
90 450 2.25 2.25 147 580 A
90 450 2.25 2.25 147 616 G
90 450 2.25 2.25 147 616 A
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
90 450 2.25 2.25 237 544 G
90 450 2.25 2.25 237 544 A
90 450 2.25 2.25 237 508 G
90 450 2.25 2.25 237 508 A
90 450 2.25 2.25 237 580 G
90 450 2.25 2.25 237 580 A
90 450 2.25 2.25 237 616 G
90 450 2.25 2.25 237 616 A
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
227.51 587.36 236.99 580.01 225.06 581.22 226.28 584.29 4 Y
V
147 616 226.29 584.28 2 L
N
232.15 518.98 237 508 227.07 514.75 229.61 516.86 4 Y
V
147 616 229.62 516.86 2 L
N
225.46 583.31 237 580 225.46 576.69 225.46 580 4 Y
V
147 580 225.46 580 2 L
N
230.06 517.79 237 508 225.93 512.62 227.99 515.21 4 Y
V
147 580 227.99 515.21 2 L
N
225.46 547.31 237 544 225.46 540.69 225.46 544 4 Y
V
147 544 225.46 544 2 L
N
225.93 611.38 237 616 230.06 606.21 227.99 608.79 4 Y
V
147 544 227.99 608.79 2 L
N
225.06 542.79 236.99 544.01 227.51 536.65 226.28 539.72 4 Y
V
147 508 226.29 539.72 2 L
N
227.07 609.26 237 616 232.15 605.02 229.61 607.14 4 Y
V
147 508 229.62 607.14 2 L
N
0 12 Q
(1) 170 609 T
(0) 218 570 T
(0) 153 593 T
(-1) 208 513 T
(1) 212 605 T
(0) 218 547 T
(0) 153 524 T
(-1) 169 507 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 18 Q
(a) 142 639 T
1 14.4 Q
(i) 151 634.5 T
1 18 Q
(a) 224 639 T
1 14.4 Q
(i+1) 233 634.5 T
0 14 Q
(E\050) 180 624 T
1 18 Q
(r) 193.22 624 T
1 14.4 Q
(i) 200.22 619.5 T
0 14 Q
(\051) 204.22 624 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1" 1
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Descend
%%Pages: 1
%%DocumentFonts: Times-Roman
%%+ Times-Italic
%%EOF
countdictstack InitDictCount sub { end } repeat
cleartomark
restore
grestore

%%EndDocument
 @endspecial 1100 4957 a(Figure)g(3:)43 b(One)33 b(cell)f(of)g(a)g(PR4)
g(trellis.)p eop
%%Page: 23 23
23 22 bop -133 -101 a Fm(IEEE)32 b(T)-7 b(r)i(ansactions)35
b(on)e(Magnetics)p Fl(,)d(v)m(ol.)h(34,)h(Ma)m(y)f(1998)1805
b Fq(23)283 2122 y @beginspecial 138 @llx 520 @lly 402
@urx 660 @ury 3741 @rwi @setspecial
%%BeginDocument: path.epsi
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 138 520 402 660
%%BeginPreview: 265 141 1 141
% 0000000000000000000780000000000f000000000000f00000000000000000000000
% 00000000000000000009800000000013000000000001300000000000000000000000
% 00000000000000000019840000000033080018000003300000000000000000000000
% 00000000000000000031800000000063000008000006308007800000000000000000
% 00000000000000000033000000000066000018000006600004c00000000000000000
% 00000000000000000037cc000000006f982010000006f80008c00000000000000000
% 0000000000000000001d8c000000003b182010000003b18200c00000000000000000
% 000000000000000000000c000000000019f830000000018201800000000000000000
% 00000000000000000000080000000000106020000000019f83000000000000000000
% 000000000000000000001c0000000000382020000000010602000000000000000000
% 000000000000000000001c00000000003820f000000003820c800000000000000000
% 0000000000000000000000000000000000000000000003821f800000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000
% 02000000000000000000000000000000000000000000000000000000000000000000
% 02000080000000000002000000000000080000000000002000000000000080001000
% 020001c00000000000070000000000001c00000000000070000000000001c0001000
% 020002600000000000098000000000003e0000000000009800000000000260001000
% 3fe006600000000000198000000000007e0000000000019800000000000660001000
% 020003c000000000000f0000000000007e000000000000f0000000000003c003fe00
% 02000180000000000006000000000000fe0000000000006000000000000180001000
% 02000000000000000000000000000000ef0000000000000000000000000000001000
% 02000000000000000000000000000001cf0000000000000000000000000000001000
% 00000000000000000000000000000003c78000000000000000000000000000001000
% 00000000000000000000000000000007878000000000000000000000000000000000
% 0000000000000000000000000000000703c000000000000000000000000000000000
% 0000000000000000000000000000000e03c000000000000000000000000000000000
% 0000000000000000000000000000001e01e000000000000000000000000000000000
% 0000000000000000000000000000003c01e000000000000000000000000000000000
% 0000000000000000000000000000003800f000000000000000000000000000000000
% 0000000000000000000000000000007000f000000000000000000000000000000000
% 000000000000000000000000000000f0007800000000000000000000000000000000
% 000000000000000000000000000001e0007800000000000000000000000000000000
% 000000000000000000000000000001c0003c00000000000000000000000000000000
% 00000000000000000000000000000380003c00000000000000000000000000000000
% 00000000000000000000000000000780001e00000000000000000000000000000000
% 00000000000000000000000000000f00001e00000000000000000000000000000000
% 00000000000000000000000000000e00000f00000000000000000000000000000000
% 00000000000000000000000000001c00000f00000000000000000000000000000000
% 00000000000000000000000000003c00000780000000000000000000000000000000
% 00000000000000000000000000007800000780000000000000000000000000000000
% 000000000000000000000000000070000003c0000000000000000000000000000000
% 0000000000000000000000000000e0000003c0000000000000000000000000000000
% 0000000000000000000000000001e0000001e0000000000000000000000000000000
% 0000000000000000000000000003c0000001e0000000000000000000000000000000
% 000000000000000000000000000380000000f0000000000000000000000000000000
% 000000000000000000000000000700000000f0000000000000000000000000000000
% 000000000000000000000000000f0000000078000000000000000000000000000000
% 000000000000000000000000001e0000000078000000000000000000000000000000
% 0f0000000000000000000000001c000000003c000000000000000000000000000000
% 73c0000000000000000000000038000000003c000000000000000000000000007800
% 4240008000000000000200000078000008001e000000002000000000000080039e00
% 422001c0000000000007000000f000001c001e0000000070000000000001c0021200
% 82200260000000000009800000e0000026000f000000009800000000000260021100
% bff00660000000000019800001c0000066000f000000019800000000000660041100
% 822003c000000000000f000003c000003c000780000000f0000000000003c007ff80
% c2200180000000000006000007800000180007800000006000000000000180041100
% 42600000000000000000000007000000000003c00000000000000000000000061100
% 62c0000000000000000000000e000000000003c00000000000000000000000021300
% 1f80000000000000000000001e000000000001e00000000000000000000000031600
% 0400000000000000000000003c000000000001e0000000000000000000000000fc00
% 00000000000000000000000038000000000000f00000000000000000000000002000
% 00000000000000000000000070000000000000f0000000000000c070000000000000
% 000000000000000000000000f00000000000007800000000000160d8000000000000
% 000000000000000000000001e0000018030000780fc0000000032088000000000000
% 000000000000000000000001c000002c0d80003c07c00001fe023008000000000000
% 00000000000000000000000387e0006408c0003c0600000000023018000000000000
% 00000000000000000000000783e1fe4608c0001e0408001800723010000000000000
% 00000000000000000000000f030000460cc0001e0c000009fe033020000000000000
% 00000000000000000000000e0204004607c0000f0c0000180003224c000000000000
% 00000000000000000000001c0601fe660180000f081820100001e6f8000000000000
% 00000000000000000000003c06000064410000078018201000000000000000000000
% 000000000000000000000078040c003cce0000078019f83000000000000000000000
% 000000000000000000000070000c000000000003c010602000000000000000000000
% 0000000000000000000000e0000c000000000003c038202000000000000000000000
% 0000000000000000000001e00008000000000001e03820f000000000000000000000
% 0000000000000000000003c0001c000000000001e000000000000000000000000000
% 000000000000000000000380001c000000000000f000000000000000000000000000
% 0000000000000000000007000000000000000000f000000000000000000000000000
% 000000000000000000000f0000000000000000007800000000000000000000000000
% 000000000000000000001e0000000000000000007800000000000000000000000000
% 000000000000000000001c0000000000000000003c00000000000000000000000000
% 00000000000000000000380000000000000000003c00000000000000000000000000
% 00000000000000000000780000000000000000001e00000000000000000000000000
% 00000000000000000000f00000000000000000001e00000000000000000000000000
% 0f000000000000000000e00000000000000000000f00000000000000000000000000
% 71c00000000000000001c00000000000000000000f00000000000000000000007800
% 40400080000000000003c00000000000080000000780002000000000000080038e00
% 402001c00000000000078000000000001c00000007800070000000000001c0020200
% 8020026000000000000f8000000000002600000003c0009800000000000260020100
% bff0066000000000001f8000000000006600000003c0019800000000000660040100
% 802003c000000000000f0000000000003c00000001e000f0000000000003c007ff80
% c02001800000000000060000000000001800000001e0006000000000000180040100
% 406000000000000000c00000000000000000000000f0000000000000000000060100
% 60c000000000000001800000000000000000000000f0000000000000000000020300
% 1f800000000000000200000000000000000000000078000000000000000000030600
% 0400000000000000000000000000000000000000007800000000000000000000fc00
% 0000000000000000300000000000000000000000003c000000000000000000002000
% 0000000000000000600000000000000000000000003c000000000000000000000000
% 0000000000000000000000000000000000000000001e000000000000000000000000
% 0000000000000000000000000000000000000000001e000000000000000000000000
% 000000000000000c000000000000000000000000000f000000000000000000000000
% 0000000000000018000000000000000000000000000f000000000000000000000000
% 00000000000000000000000000000000000000000007800000000000000000000000
% 00000000000000000000000000000000000000000007800000000000000000000000
% 00000000000001000000000000000000000000000003c00000000000000000000000
% 00000000000000000000000000000000000000000003c00000000000000000000000
% 00000000000000000000000000000000000000000001e000000c0000000000000000
% 00000000000000000000000000000000000000000001e00000000000000000000000
% 00000000000000000000000000000000000000000000f00000000000000000000000
% 00000000000000000000000000000000000000000000f00000400000000000000000
% 00000000000000000000000000000000000000000000780000800000000000000000
% 00000000000000000000000000000000000000000000780001000000000000000000
% 000000000000000000000000000000000000000000003c0000000000000000000000
% 000000000000000000000000000000000000000000003c0000000000000000000000
% 000000000000000000000000000000000000000000001e0008000000000000000000
% 000000000000000000000000000000000000000000001e0010000000000000000000
% 000000000000000000000000000000000000000000000f0020000000000000000000
% 000000000000000000000000000000000000000000000f0000000000000000000000
% 00000000000000000000000000000000000000000000078000000000000000000000
% 00000000000000000000000000000000000000000000078100000000000000000000
% 0000000000000000000000000000000000000000000003c200000000000000000000
% 0000000000000000000000000000000000000000000003c400000000000000000000
% 0000008000000000000200000000000008000000000001e000000000000080000000
% 000001c00000000000070000000000001c000000000001f0000000000001c0000000
% 0000026000000000000980000000000026000000000000f800000000000260000000
% 3fe0066000000000001980000000000066000000000001f800000000000660000000
% 000003c000000000000f0000000000003c000000000000f0000000000003c003fe00
% 00000180000000000006000000000000180000000000006000000000000180000000
%%EndImage
%%EndPreview
/InitDictCount countdictstack def
gsave
save
mark
newpath
/showpage {} def
%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 { } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	
	
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 612 792 0 1 4 FMDOCUMENT
0 0 /Times-Italic FMFONTDEFINE
1 0 /Times-Roman FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "1" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 0 0 0 1 1 1]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
140.61 521.81 147.64 521.81 2 L
0.5 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
144.13 633.33 144.13 626.29 2 L
N
140.61 629.81 147.64 629.81 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
90 450 5.4 5.4 144.13 557.56 A
140.61 557.56 147.64 557.56 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
144.13 597.08 144.13 590.04 2 L
N
90 450 5.4 5.4 144.13 593.56 A
140.61 593.56 147.64 593.56 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
393.24 520.69 400.27 520.69 2 L
N
396.75 632.2 396.75 625.17 2 L
N
393.24 628.69 400.27 628.69 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
90 450 5.4 5.4 396.75 556.69 A
393.24 556.69 400.27 556.69 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
396.75 596.2 396.75 589.17 2 L
N
90 450 5.4 5.4 396.75 592.69 A
393.24 592.69 400.27 592.69 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
90 450 2.25 2.25 162 557.75 A
90 450 2.25 2.25 162 521.75 A
90 450 2.25 2.25 162 593.75 A
90 450 2.25 2.25 162 629.75 A
90 450 2.25 2.25 216.38 557.75 G
90 450 2.25 2.25 216.38 557.75 A
90 450 2.25 2.25 216.38 521.75 A
90 450 2.25 2.25 216.38 593.75 A
90 450 2.25 2.25 216.38 629.75 A
0 18 Q
(a) 212 653.38 T
0 14.4 Q
(i) 221 648.88 T
0 18 Q
(a) 259 653.38 T
0 14.4 Q
(i+1) 268 648.88 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
90 450 2.25 2.25 270 557.88 A
90 450 2.25 2.25 270 521.88 A
90 450 2.25 2.25 270 593.88 A
90 450 2.25 2.25 270 629.88 G
90 450 2.25 2.25 270 629.88 A
90 450 2.25 2.25 324.25 558 A
90 450 2.25 2.25 324.25 522 G
90 450 2.25 2.25 324.25 522 A
90 450 2.25 2.25 324.25 594 A
90 450 2.25 2.25 324.25 630 A
90 450 2.25 2.25 378.5 557.5 A
90 450 2.25 2.25 378.5 521.5 A
90 450 2.25 2.25 378.5 593.5 A
90 450 2.25 2.25 378.5 629.5 A
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 18 Q
(a) 311.38 652.88 T
0 14.4 Q
(i+2) 320.38 648.38 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
216 558 270 630 2 L
2 H
N
270 630 324 522 2 L
N
J
324 522 343.5 541.5 2 L
J
324 522 325.24 523.24 2 L
0.5 H
N
[2.957 3.802] 2.957 I
325.24 523.24 342.26 540.26 2 L
N
J
342.26 540.26 343.5 541.5 2 L
N
J
216 558 192.5 542.5 2 L
J
216 558 214.54 557.04 2 L
N
[3.027 3.892] 3.027 I
214.54 557.04 193.96 543.46 2 L
N
J
193.96 543.46 192.5 542.5 2 L
N
0 18 Q
(r) 238 575 T
0 14.4 Q
(i) 245 570.5 T
1 18 Q
(=) 249.01 575 T
1 14 Q
(0.9) 259.16 575 T
0 18 Q
(r) 301 577 T
0 14.4 Q
(i+1) 308 572.5 T
1 18 Q
(=) 328.92 577 T
1 14 Q
(-0.2) 339.08 577 T
0 0 0 1 0 0 0 K
J
FMENDPAGE
%%EndPage: "1" 1
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Descend
%%Pages: 1
%%DocumentFonts: Times-Italic
%%+ Times-Roman
%%EOF
countdictstack InitDictCount sub { end } repeat
cleartomark
restore
grestore

%%EndDocument
 @endspecial 970 2434 a(Figure)31 b(4:)44 b(Detected)33
b(path)g(in)e(a)i(PR4)f(trellis.)855 4641 y @beginspecial
42 @llx 185 @lly 545 @urx 606 @ury 2370 @rwi @setspecial
%%BeginDocument: pr4two0.epsi
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 42 185 545 606
%%BeginPreview: 504 422 1 422
% 000000000000000000000ff03fc00000000000000000000000000000000000000c00001800000000000000000600000c00007f83860c000000000000000000
% 000000000000000000000ff83ff00600000000030000c00000000c00000000000c00001800c3e000000000000600000c00067fc3870c1fc1f0200000000000
% 000000000000000000000c1c30300600000300030000c00001f60c00000000000c0000180187f000000000000600000c000660e1870c1fc3f8300000000000
% 000000000000000000000c0c30100e00000300070001c00007fe0800000000000c000018018e3000000000000600000c000460618f1c180318300000000000
% 000000000000000000000c0c30101e001f87c00f0003c0000f9e1803e1863f3c0fc0f818030c1801f0c31f9e07e07c0c3e0c60618f18180718100000000000
% 000000000000000000000c0c303036001dc7c01b0006c0001e0c1807e1c63ffc0fe1fc1803001803f0e31ffe07f0fe0c7e0c60618d981f060c180000000000
% 000000000000000000000c1c3070360018c3001b0006c0001c0c100630c631c60c318c1803003003186318e30618c60c630860e0cd981fc60c180000000000
% 000000000000000000000ff83fe0660000c30033000cc000380c100600cc31860c33061803006003006618c30619830c60087fc0d99818c60c180000000000
% 000000000000000000000ff03ff0c6000fc300630018c00038183007c0cc31860c3306180301c003e06618c30619830c7c187f80d8b000e60c180000000000
% 000000000000000000000c003070ff801cc3007fc01ff00030183000f0e831860c33061803078000787418c30619830c0f186000d0f000660c180000000000
% 000000000000000000000c003030ff8038c3007fc01ff00030182000307831860c33061803060000183c18c30619830c03106000f0f0306318180000000000
% 000000000000000000000c003030060031c300030000c00018396006307831860c338c18030c0003183c18c30619c60c6330600070f038c338180000000000
% 000000000000000000000c00301006003be380030300c0001cff6007f07031860fe1fc18030ff803f83818c307f0fe0c7f30600070701fc3f8180000000000
% 000000000000000000000c00301806001fe3c0030300c00007de4007e03031860fc0f818030ff803f01818c307e07c0c7e20600060601f81f0100000000000
% 000000000000000000000000000000000000000000000000000000000030000000000000010000000018000000000000000000000000000000100000000000
% 000000000000000000000000000000000000000000000000000000000060000000000000018000000030000000000000000000000000000000300000000000
% 0000000000000000000000000000000000000000000000000000000000e0000000000000008000000070000000000000000000000000000000200000000000
% 0000000000000000000000000000000000000000000000000000000000c000000000000000c000000060000000000000000000000000000000600000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000001c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000001c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000403000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000c0f870400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000001c0cc0040ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% 000003c08c00408000000000000000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 000000c18400408000000000000000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 000000c18400008000000000000000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 000000c18400008000000000000000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 000000c18400008000000000000000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 000000c1840000f46231188c46231188d46231188c46231188c46231188c46231188c4e231188c46231188c46231188c46231188c46a31188c46231188c467
% 000000c08c00008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000c0f800008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000c07800008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 000000000000008000000000000000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 00000000000000f46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c467
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 00000000000000f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000fe00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008fc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000f47a31188c46231188d46231188c46231188c46231188c46231188c4e231188c46231188c46231188c46231188c46a31188c46231188c467
% 00000000000000800f000000000000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 000000000000008003e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 0000000000000080005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000038000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000800000f000000000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 000000000000008000001e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000f4623119ec46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c467
% 00000000000000800000001c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000007800000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 000000000000008000000000f00000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 0000000000000080000000000e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000800000000001c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000003800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000700001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 0000000000000080000000000000f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000800000000000001e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000f46231188c46231388c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c467
% 000000000000008000000000000000781000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 000000000000008000000000000000079000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 00000000000000800000000000000000f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000001c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 0000000000000080000000000000000010f0000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 00000000000000800000000000000000001c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000003800000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 0000000000000080000000000000000010001c0000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 00000000000000f46231188c46231188d46233988c46231188c46231188c46231188c4e231188c46231188c46231188c46231188c46a31188c46231188c467
% 000000000000008000000000000000000000007000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000180000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000001000000070000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 00000000000000800000000000000000000000001e000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000001c00000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000380000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 0000000000000080000000000000000010000000001e0000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 00000000000000800000000000000000100000000003c000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 000000000000008000000000000000000000000000003800000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000700000000000000000000000000000000000000000000000000000000000000000000000000000001
% 0000000000000080000000000000000000000000000003c0000000000000000000000000000000000000000000000000000000000000000000000000000001
% 0000000000000080000000000000000010000000000000f8000400000000000000000080000000000000000020000000000000000008000000000000000001
% 000000000000008000000000000000000000000000000007000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000f46231188c46231188c46231188c462311e8c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c467
% 0000000000000080000000000000000000000000000000007c0000000000000000000000000000000000000000000000000000000000000000000000000001
% 0000000000000080000000000000000010000000000000001f0400000000000000000080000000000000000020000000000000000008000000000000000001
% 00000000000000800000000000000000100000000000000002e400000000000000000080000000000000000020000000000000000008000000000000000001
% 000000000000008000000000000000000000000000000000001c00000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000b00000000000000000000000000000000000000000000000000000000000000000000000001
% 0000000000000080000000000000000000000000000000000007e0000000000000000000000000000000000000000000000000000000000000000000000001
% 0000000000000080000000000000000010000000000000000004dc000000000000000080000000000000000020000000000000000008000000000000000001
% 000000000000008000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000f80000000000000000000000000000000000000000000000000000000000000000000001
% 0000000000000080000000000000000010000000000000000004001f0000000000000080000000000000000020000000000000000008000000000000000001
% 00000000000000800000000000000000100000000000000000040000e000000000000080000000000000000020000000000000000008000000000000000001
% 000000000000008000000000000000000000000000000000000000001800000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000001f00000000000000000000000000000000000000000000000000000000000000000001
% 0000000000000080000000000000000000000000000000000000000007c0000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000001000000000000000000400000038000000000080000000000000000020000000000000000008000000000000000001
% 000000000000008400000000000000000000000000000000000000000007000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008300000000000000000000000000000000000000000003c00000000000000000000000000000000000000000000000000000000000000001
% 0000000000000080c0000000000000000000000000000000000000000000f80000000000000000000000000000000000000000000000000000000000000001
% 00000000000000f46231188c46231188d46231188c46231188c46231188c56231188c4e231188c46231188c46231188c46231188c46a31188c46231188c467
% 00000000000000800600000000000000100000000000000000040000000001c000000080000000000000000020000000000000000008000000000000000001
% 000000000000008000000000000000000000000000000000000000000000007000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000001e00000000000000000000000000000000000000000000000000000000000001
% 0000000000000080003000000000000000000000000000000000000000000007c0000000000000000000000000000000000000000000000000000000000001
% 0000000000000080000c0000000000001000000000000000000400000000000030000080000000000000000020000000000000000008000000000000000001
% 00000000000000800002000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000007800000000000000000000000000000000000000000000000000000000001
% 000000000000008000003000000000000000000000000000000000000000000000f00000000000000000000000000000000000000000000000000000000001
% 0000000000000080000000000000000010000000000000000004000000000000000e0080000000000000000020000000000000000008000000000000000001
% 000000000000008000000100000000001000000000000000000400000000000000018080000000000000000020000000000000000008000000000000000001
% 0000000000000080000000c000000000000000000000000000000000000000000000f000000000000000000000000000000000000000000000000000000001
% 000000000000008000000030000000000000000000000000000000000000000000001c00000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000380000000000000000000000000000000000000000000000000000001
% 0000000000000080000000018000000010000000000000000004000000000000000000f0000000000000000020000000000000000008000000000000000001
% 00000000000000800000000000000000000000000000000000000000000000000000001c000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000007800000000000000000000000000000000000000000000000000001
% 0000000000000080000000000c0000000000000000000000000000000000000000000001700000000000000000000000000000000000000000000000000001
% 0000000000000080000000000300000010000000000000000004000000000000000000800c0000000000000020000000000000000008000000000000000001
% 000000000000008000000000008000001000000000000000000400000000000000000080038000000000000020000000000000000008000000000000000001
% 00000000000000800000000000000000000000000000000000000000000000000000000003f000000000000000000000000000000000000000000000000001
% 000000000000008000000000000c00000000000000000000000000000000000000000000006c00000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000001380000000000000000000000000000000000000000000000001
% 000000000000008000000000000040001000000000000000000400000000000000000080000070000000000020000000000000000008000000000000000001
% 00000000000000800000000000003000000000000000000000000000000000000000000000004c000000000000000000000000000000000000000000000001
% 00000000000000800000000000000c00000000000000000000000000000000000000000000003b800000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000006700000000000000000000000000000000000000000000001
% 000000000003c080000000000000006010000000000000000004000000000000000000800000000c0000000020000000000000000008000000000000000001
% 000000000006608000000000000000001000000000000000000400000000000000000080000000038000000020000000000000000008000000000000000001
% 0000000000062080000000000000000000000000000000000000000000000000000000000000000c6000000000000000000000000000000000000000000001
% 000000000000608000000000000000030000000000000000000000000000000000000000000000039c00000000000000000000000000000000000000000001
% 000000806000c0800000000000000000c000000000000000000000000000000000000000000000004380000000000000000000000000000000000000000001
% 000c0181f0e3808000000000000000003000000000000000000400000000000000000080000000000060000020000000000000000008000000000000000001
% c30c0381980700800000000000000000000000000000000000000000000000000000000000000000011c000000000000000000000000000000000000000001
% c30c078118060080000000000000000003000000000000000000000000000000000000000000000000c3800000000000000000000000000000000000000001
% c30c01830807e08000000000000000000000000000000000000000000000000000000000000000000038600000000000000000000000000000000000000001
% c30c0183080000fc6231188c46231188d47231188c46231188c46231188c46231188c4e231188c4623119cc46231188c46231188c46a31188c46231188c47f
% c30c0183080000800000000000000000100c000000000000000400000000000000000080000000000000038020000000000000000008000000000000000001
% c30c01830800008000000000000000000003000000000000000000000000000000000000000000000000306000000000000000000000000000000000000001
% c30c018308000080000000000000000000000000000000000000000000000000000000000000000000000c1c00000000000000000000000000000000000001
% fffc01811800008000000000000000000000100000000000000000000000000000000000000000000000030380000000000000000000000000000000000001
% fffc0181f00000f46231188c46231188d46231188c46231188c46231188c46231188c4e231188c46231188c46231188c46231188c46a31188c46231188c467
% 00000180f00000800000000000000000000000000000000000000000000000000000000000000000000000001c000000000000000000000000000000000001
% 000000000000008000000000000000000000018000000000000000000000000000000000000000000000000703000000000000000000000000000000000001
% 0000000000000080000000000000000000000060000000000000000000000000000000000000000000000000c0e00000000000000000000000000000000001
% 000000000000008000000000000000001000001800000000000400000000000000000080000000000000000020180000000000000008000000000000000001
% c00000000000008000000000000000001000000000000000000400000000000000000080000000000000000020060000000000000008000000000000000001
% c0000000000000f46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c462b1d88c46231188c46231188c46231188c467
% c00000000000008000000000000000000000000000000000000000000000000000000000000000000000000000603000000000000000000000000000000001
% c000000000000080000000000000000000000000080000000000000000000000000000000000000000000000001c0e00000000000000000000000000000001
% fffc00000000008000000000000000001000000004000000000400000000000000000080000000000000000020000180000000000008000000000000000001
% fffc00000000008000000000000000000000000003000000000000000000000000000000000000000000000000000060000000000000000000000000000001
% c00000000000008000000000000000000000000000c0000000000000000000000000000000000000000000000000181c000000000000000000000000000001
% c00000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000603000000000000000000000000000001
% c0000000000000f46231188c46231188d46231188c46231188c46231188c46231188c4e231188c46231188c46231198ce6231188c46a31188c46231188c467
% c00000000000008000000000000000001000000000000000000400000000000000000080000000000000000020000000180000000008000000000000000001
% 000000000000008000000000000000000000000000004000000000000000000000000000000000000000000000000000060000000000000000000000000001
% 001c0000000000800000000000000000000000000000300000000000000000000000000000000000000000000000000381c000000000000000000000000001
% 00fc00000000008000000000000000000000000000000c00000000000000000000000000000000000000000000000000603000000000000000000000000001
% 07f000000000008000000000000000001000000000000000000400000000000000000080000000000000000020000000100e00000008000000000000000001
% 7fc000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000180000000000000000000000001
% f8c000000000008000000000000000000000000000000060000000000000000000000000000000000000000000000000004060000000000000000000000001
% e0c00000000000f46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46331d88c46231188c46231188c467
% 3fc000000000008000000000000000001000000000000002000400000000000000000080000000000000000020000000000e03000008000000000000000001
% 1fe000000000008000000000000000001000000000000001800400000000000000000080000000000000000020000000000000e00008000000000000000001
% 03fc00000000008000000000000000000000000000000000600000000000000000000000000000000000000000000000000000180000000000000000000001
% 007c0000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000c060000000000000000000001
% 00040000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000301c000000000000000000001
% 000000000000008000000000000000001000000000000000030400000000000000000080000000000000000020000000000000c03008000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e00000000000000000001
% 000000000000008000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000180000000000000000001
% 00040000000000f46231188c46231188c46231188c46231188cc6231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c467
% 7efc0000000000800000000000000000100000000000000000070000000000000000008000000000000000002000000000000000701c000000000000000001
% 67f00000000000800000000000000000100000000000000000040000000000000000008000000000000000002000000000000000080b000000000000000001
% c3c000000000008000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000e00000000000000001
% c180000000000080000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000001c0000000000000001
% c18000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000018030000000000000001
% c18000000000008000000000000000001000000000000000000400c0000000000000008000000000000000002000000000000000000e00e000000000000001
% c18000000000008000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000001001800000000000001
% c18000000000008000000000000000000000000000000000000000180000000000000000000000000000000000000000000000000000000700000000000001
% fffc000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e0000000000001
% fffc00000000008000000000000000001000000000000000000400008000000000000080000000000000000020000000000000000008060018000000000001
% 00000000000000f46231188c46231188d46231188c46231188c46231188c46231188c4e231188c46231188c46231188c46231188c46a31988f46231188c467
% 000000000000008000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000006000e00000000001
% 000000000000008000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000180000000001
% 000000000000008000000000000000000000000000000000000000000180000000000000000000000000000000000000000000000000000000070000000001
% 00000000000000800000000000000000100000000000000000040000004000000000008000000000000000002000000000000000000800008000c000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060003800000001
% 000000000000008000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000018000700000001
% 0000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000c0000001
% 000000000000008000000000000000001000000000000000000400000000400000000080000000000000000020000000000000000008000000000038000001
% 000000000000008000000000000000001000000000000000000400000000300000000080000000000000000020000000000000000008000000000006000001
% 0004000000000080000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000001c0001c00001
% 7efc00000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000030000380001
% 67f000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060001
% c3c00000000000800000000000000000100000000000000000040000000000600000008000000000000000002000000000000000000800000000000001c001
% c18000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003001
% c1800000000000f46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188ce67
% c180000000000080000000000000000000000000000000000000000000000001800000000000000000000000000000000000000000000000000000c00001c1
% c18000000000008000000000000000001000000000000000000400000000000060000080000000000000000020000000000000000008000000000020000031
% c1800000000000ffffffffffffffffffffffffffffffffffffffffffffffffe00000008000000000000000002000000000000000000800000000000000000f
% fffc0000000000c000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000001
% fffc0000000000c000000000000000000000000000000000000000000000002003000000000000000000000000000000000000000000000000000000c00001
% 00000000000000c000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000300001
% 00000000000000c0000000000000000000000000000000000000000000000020001000800000000000000000200000000000000000080000000000000c0001
% 00000000000000c0000000000000000000000000000000000000000000000020000c0000000000000000000000000000000000000000000000000000000001
% 00000000000000c000000000000000000000000000000000000000000000002000030000000000000000000000000000000000000000000000000000000001
% 00000000000000c000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000001001
% 0fe00000000000c000000000000000000000000000000000000000000000002000001080000000000000000020000000000000000008000000000000000c01
% 3ff00000000000c000000000000000000070000000000000000000000000002000001080000000000000000020000000000000000008000000000000000301
% 70380000000000c0000000000000000001f81c0000000000100000000000002000000000000000000000000000000000000000000000000000000000000081
% 601c0000000000c00000000000000000039c3e0000000080100000000000002000000080000000000000000000000000000000000000000000000000000001
% c00c0000000000c00000000000000000030c330000000080000000000000002000000060000000000000000000000000000000000000000000000000000001
% c00c0000000000c00000000000000000020463003980e08180e000000000002000000090000000000000000020000000000000000008000000000000000003
% c00c0000000000c0000000000000000006006300ffc1f1e791f800000000002000000008000000000000000000000000000000000000000000000000000001
% c00c0000000000c0000000000000000006006300ce619886119800000000002000000000000000000000000000000000000000000000000000000000000001
% c00c0000000000c0fe0380fffc0703f806000300cc631884110800000000002000000001800000000000000000000000000000000000000000000000000001
% 60180000000000c00000000000000000060006008c631884130000000000002000000080000000000000000020000000000000000008000000000000000001
% 78780000000000c0000000000000000006040e008c63f88413000000000000231188c4e231188c46231188c46231188c46231188c46a31188c46231188c467
% 3ff00000000000c00000000000000000020438008c630084130000000000002000000000080000000000000000000000000000000000000000000000000001
% 0fc00000000000c00000000000000000030c30008c630884130800000000002000000000060000000000000000000000000000000000000000000000000001
% 00000000000000c00000000000000000030c60008c611884111800000000002000000000010000000000000000000000000000000000000000000000000001
% 00000000000000c0000000000000000001987f008c61b8c4119800000000002000000080008000000000000020000000000000000008000000000000000001
% 00000000000000c0000000000000000001f87f008c61f0e411f000000000002000000000000000000000000000000000000000000000000000000000000001
% 00040000000000c000000000000000000000000000000000000000000000002000000000000800000000000000000000000000000000000000000000000001
% 7efc0000000000c000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000001
% 67f00000000000c000000000000000000000000000000000000000000000002000000080000000000000000020000000000000000008000000000000000001
% c3c00000000000c0000000000000000000000000000000000000000000000020000000800000c0000000000020000000000000000008000000000000000001
% c1800000000000c000000000000000000000000000000000000000000000002000000000000020000000000000000000000000000000000000000000000001
% c1800000000000c000000000000000000000000000000000000000000000002000000000000018000000000000000000000000000000000000000000000001
% c1800000000000c000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000001
% c1800000000000c000000000000000000000000000000000000000000000002000000080000000000000000020000000000000000008000000000000000001
% c1800000000000c000000000000000000000000000000000000000000000002000000000000000800000000000000000000000000000000000000000000001
% fffc0000000000c000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000001
% fffc0000000000c000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000001
% 00000000000000c0000000000000000000000000000000000000000000000020000000800000000c0000000020000000000000000008000000000000000001
% 00000000000000c000000000000000000000000000000000000000000000002000000080000000020000000020000000000000000008000000000000000001
% 00000000000000c000000000000000000000000000000000000000000000002000000000000000018000000000000000000000000000000000000000000001
% 00000000000000c000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000001
% 00040000000000c000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000001
% 7efc0000000000c000000000000000000000000000000000000000000000002000000080000000000800000020000000000000000008000000000000000001
% 67f000000003c0c000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000001
% c3c00000000660c000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000001
% c1800000000660c0000000000000000000000000000000000000000000000020000000000000000000c0000000000000000000000000000000000000000001
% c1800000000040c0000000000000000000e0000000000000000000000000002000000080000000000020000020000000000000000008000000000000000001
% c18000806001c0c0000000000000000003f0080000000000200000000000002000000080000000000018000020000000000000000008000000000000000001
% c1800181f0e060c000000000000000000738180000000080200000000000002000000000000000000000000000000000000000000000000000000000000001
% c1800381980420c000000000000000000618180000000080000000000000002000000000000000000000000000000000000000000000000000000000000001
% fffc0781180660c00000000000000000040878003981c08301c000000000002000000000000000000000800000000000000000000000000000000000000001
% fffc01830803c0c000000000000000000c007800ffc3e1ef23f000000000002000000080000000000000000020000000000000000008000000000000000001
% 00000183080000c000000000000000000c001800ce63308c233000000000002000000000000000000000000000000000000000000000000000000000000001
% 00000183080000c000000000000000000c001800cc6630882210000000000020000000000000000000000c0000000000000000000000000000000000000001
% 00000183080000c0f81ff03fe07fe0f80c0018008c663088260000000000002000000000000000000000020000000000000000000000000000000000000001
% 00000183080000c000000000000000000c0818008c67f08826000000000000231188c4e231188c46231189c46231188c46231188c46a31188c46231188c47f
% 000c0181180000c00000000000000000040818008c660088260000000000002000000080000000000000000020000000000000000008000000000000000001
% c30c0181f00000c00000000000000000061818008c661088261000000000002000000000000000000000000000000000000000000000000000000000000001
% c30c0180f00000c00000000000000000061818008c623088223000000000002000000000000000000000000800000000000000000000000000000000000001
% c30c0000000000c00000000000000000033018008c6370c8233000000000002000000000000000000000000000000000000000000000000000000000000001
% c30c0000000000c0000000000000000003f018008c63e0e823e0000000000020000000800000000000000000a0000000000000000008000000000000000001
% c30c0000000000c00000000000000000000000000000000000000000000000231188c46231188c46231188c46231188c46231188c46231188c46231188c467
% c30c0000000000c000000000000000000000000000000000000000000000002000000000000000000000000020000000000000000000000000000000000001
% c30c0000000000c000000000000000000000000000000000000000000000002000000000000000000000000018000000000000000000000000000000000001
% fffc0000000000c000000000000000000000000000000000000000000000002000000080000000000000000020000000000000000008000000000000000001
% fffc0000000000c000000000000000000000000000000000000000000000002000000080000000000000000020000000000000000008000000000000000001
% 00000000000000c000000000000000000000000000000000000000000000002000000000000000000000000000800000000000000000000000000000000001
% 00000000000000c00000000000000000000000000000000000000000000000231188c46231188c46231188c462b1188c46231188c46231188c46231188c467
% 00000000000000c000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000001
% 00000000000000c000000000000000000000000000000000000000000000002000000080000000000000000020000000000000000008000000000000000001
% 00000000000000c000000000000000000000000000000000000000000000002000000000000000000000000000080000000000000000000000000000000001
% 00000000000000c000000000000000000000000000000000000000000000002000000000000000000000000000040000000000000000000000000000000001
% 00000000000000c000000000000000000000000000000000000000000000002000000000000000000000000000030000000000000000000000000000000001
% 00000000000000c00000000000000000000000000000000000000000000000231188c4e231188c46231188c46231188c46231188c46a31188c46231188c467
% 00000000000000c000000000000000000000000000000000000000000000002000000080000000000000000020000000000000000008000000000000000001
% 00000000000000c000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000001
% 00000000000000c000000000000000000000000000000000000000000000002000000000000000000000000000001000000000000000000000000000000001
% 00000000000000c000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000001
% 00000000000000c000000000000000000000000000000000000000000000002000000080000000000000000020000000000000000008000000000000000001
% 00000000000000c000000000000000000000000000000000000000000000002000000000000000000000000000000100000000000000000000000000000001
% 00000000000000c000000000000000000000000000000000000000000000002000000000000000000000000000000080000000000000000000000000000001
% 00000000000000c00000000000000000000000000000000000000000000000231188c46231188c46231188c4623118ec46231188c46231188c46231188c467
% 00000000000000c0000000000000000003f8000062062000000000001002002000000080000000000000000020000000000000000008000000000000000001
% 00000000000000c0000000000000000003f8000062062000000000001002002000000080000000000000000020000000000000000008000000000000000001
% 00000000000000c000000000000000000200000060060000000000001000002000000000000000000000000000000000000000000000000000000000000001
% 00000000000000c000000000000000000200461e627e23c17005de1e3ca23c2000000000000000000000000000000002000000000000000000000000000001
% 00000000000000c000000000000000000200463f627e27e1f007fe3e3ce27e2000000000000000000000000000000000000000000000000000000000000001
% 00000000000000c0000000000000000003f0463362c62621980662231082662000000080000000000000000020000000000000000008000000000000000001
% 00000000000000c0000000000000000003f0466362c62021180462631082c62000000000000000000000000000000000200000000000000000000000000001
% 00000000000000c000000000000000000200466062c621e11804627f1082c02000000000000000000000000000000000100000000000000000000000000001
% 00000000000000c0fffffffffffffff80200466062c627e11804627f1082c0231188c46231188c46231188c46231188c4e231188c46231188c46231188c467
% 00000000000000c000000000000000000200466362c62621180462601082c62000000080000000000000000020000000020000000008000000000000000001
% 00000000000000c000000000000000000200462362c62661180462231082462000000080000000000000000020000000000000000008000000000000000001
% 00000000000000c0000000000000000003f86e3362ee26e1180462361082662000000000000000000000000000000000000000000000000000000000000001
% 00000000000000c0000000000000000003f87e3e627e27b11804623e1c827c2000000000000000000000000000000000006000000000000000000000000001
% 00000000000000c000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000001
% 00000000000000c000000000000000000000000000000000000000000000002000000080000000000000000020000000000000000008000000000000000001
% 00000000000000c000000000000000000000000000000000000000000000002000000000000000000000000000000000000400000000000000000000000001
% 00000000000000c000000000000000000000000000000000000000000000002000000000000000000000000000000000000200000000000000000000000001
% 00000000000000c000000000000000000000000000000000000000000000002000000000000000000000000000000000000180000000000000000000000001
% 00000000000000c000000000000000000000000000000000000000000000002000000080000000000000000020000000000040000008000000000000000001
% 00000000000000c000000000000000000000000000000000000000000000002000000080000000000000000020000000000000000008000000000000000001
% 00000000000000c00000000000000000000000000000000000000000000000231188c46231188c46231188c46231188c46231188c46231188c46231188c467
% 00000000000000c00000000000000000000000000000000000000000000000200000000000000000000000000000000000000c000000000000000000000001
% 00000000000000c000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000001
% 00000000000000c000000000000000000000000000000000000000000000002000000080000000000000000020000000000000000008000000000000000001
% 00000000000000c000000000000000000000000000000000000000000000002000000000000000000000000000000000000000800000000000000000000001
% 00000000000000c000000000000000000000000000000000000000000000002000000000000000000000000000000000000000400000000000000000000001
% 00000000000000ffffffffffffffffffffffffffffffffffffffffffffffffe000000000000000000000000000000000000000300000000000000000000001
% 000000000000008000000000000000001000000000000000000400000000000000000080000000000000000020000000000000080008000000000000000001
% 000000000000008000000000000000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000001
% 000000000000008000000000000000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000800000000000000000001
% 00000000000000f46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c66231188c46231188c467
% 000000000000008000000000000000001000000000000000000400000000000000000080000000000000000020000000000000000108000000000000000001
% 000000000000008000000000000000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000001
% 000000000000008000000000000000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000800000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000001
% 000000000000008000000000000000001000000000000000000400000000000000000080000000000000000020000000000000000008100000000000000001
% 000000000000008000000000000000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000001000000000000000000400000000000000000080000000000000000020000000000000000008001000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c00000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000001
% 000000000000008000000000000000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 00000000000000f46231188c46231188d46231188c46231188c46231188c46231188c4e231188c46231188c46231188c46231188c46a31188c46231188c467
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001800000000001
% 000000000000008000000000000000001000000000000000000400000000000000000080000000000000000020000000000000000008000000400000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000300000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000001000000000000000000400000000000000000080000000000000000020000000000000000008000000018000000001
% 000000000000008000000000000000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000800000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000001
% 000000000000008000000000000000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000100000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000001
% 000000000000008000000000000000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 000000000000008000000000000000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000800001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000180001
% 000000000000c08000000000000000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 000000000000c08000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000001c08000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008001
% 000000000003c08000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000806006c08000000000000000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 00000181f0e6c08000000000000000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000c01
% 000003819807e08000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000201
% 000007811800c08000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000181
% 000001830800c08000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000001830800008000000000000000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 000001830800008000000000000000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000009
% 000001830800008000000000000000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 000001830800008000000000000000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 000001811800008000000000000000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 00000181f00000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% 00000180f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000040300000000000000008040000000000000002018000000000000000806000000000000000200400000000000000000
% 0000000000000000000000000000000c0f800000000000000180c000000000000000607c00000000000000181f000000000000000600c00000000000000000
% 0000000000000000000000000000001c0cc00000000000000381c000000000000000e046000000000000003811800000000000000e00c00000000000000000
% 0000000000000000000000000000003c08c00000000000000783c000000000000001e0c2000000000000007811800000000000001e03c00000000000000000
% 0000000000000000000000000000000c18400000000000000180c00000000000000060c2000000000000001811800000000000000603c00000000000000000
% 0000000000000000000000000000000c18400000000000000180c0000000000000006006000000000000001807000000000000000602c00000000000000000
% 0000000000000000000000000000000c18400000000000000180c000000000000000600c000000000000001807800000000000000604c00000000000000000
% 0000000000000000000000000000000c18400000000000000180c000000000000000603800000000000000180180000000000000060cc00000000000000000
% 0000000000000000000000000000000c18400000000000000180c000000000000000606000000000000000183080000000000000060fe00000000000000000
% 0000000000000000000000000000000c08c00000000000000180c00000000000000060c000000000000000183080000000000000060fe00000000000000000
% 0000000000000000000000000000000c0f800000000000000180c00000000000000060fe00000000000000181f800000000000000600c00000000000000000
% 0000000000000000000000000000000c07800000000000000180c00000000000000060fe00000000000000180f000000000000000600c00000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000007c0000c0e18300f8000c040ff000700c3f81e00000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000fe0180e0e1c303fc040e040ffc00600c3fe0600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000001870301e061c3078e060e040c0c00600c30e0600000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000018303036063c70703060f040c0400600c3060600000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000018006036063c60e03020f840c040061ec3060600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000001c006033063660c00030d840c0c0063fc3060600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000fc06073033660c00030dc40c1c00631c3fc0600000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000001f06073036660c1f830ce40ff800660c3fe0600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000078607f8362c0c1f830c640ffc00660c30f0600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000003018607f8343c0e01830c740c1c00660c3030600000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000381860e183c3c0603830c3c0c0c00660c3030600000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000183860c1c1c3c0707830c1c0c0c00671c3070600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000001ff060c0c1c1c03ff830c1c0c040063fc3fe0600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000fe061c0c181801f9820c0c0c060063ec3fe0600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000200000000000002000000000060000000600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000300000000000006000000000060000000600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000100000000000004000000000060000000600000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000018000000000000c000000000070000001e00000000000000000000000000000000000000
%%EndImage
%%EndPreview
/InitDictCount countdictstack def
gsave
save
mark
newpath
/showpage {} def
%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 { } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	
	
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 612 792 0 1 6 FMDOCUMENT
0 0 /Helvetica FMFONTDEFINE
1 0 /Bookman-LightItalic FMFONTDEFINE
2 0 /Helvetica-Narrow FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "1" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 0 0 0 1 1 1]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 54 199 544 598 490 399 60 196.5 FMBEGINEPSF
%%BeginDocument: /home/kavcic/tex/papers/TransMAG97/p4two0.epsi
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 54 199 544 598
save
countdictstack
mark
newpath
/showpage {} def
%!PS-Adobe-2.0 
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: pr4two0.ps
%%CreationDate: 04/28/97  01:31:58
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Pages: (atend)
%%BoundingBox: (atend)
%%EndComments

%%BeginProlog

% MathWorks dictionary
/MathWorks 150 dict begin

% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef

% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
/rm /rmoveto ldef
/rl /rlineto ldef
/s /show ldef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef

% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef

% orientation switch
/portraitMode 	0 def
/landscapeMode 	1 def

% coordinate system mappings
/dpi2point 0 def

% font control
/FontSize 0 def
/FMS {
	/FontSize xstore		%save size off stack
	findfont
	[FontSize 0 0 FontSize neg 0 0]
	makefont
	setfont
	}bdef

/reencode {
exch dup where
{pop load} {pop StandardEncoding} ifelse
exch
dup 3 1 roll
findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def
  currentdict
end
definefont pop
} bdef

/isroman {
findfont /CharStrings get
/Agrave known
} bdef

/FMSR {
3 1 roll 1 index
dup isroman
{reencode} {pop pop} ifelse
exch FMS
} bdef

/csm {
	1 dpi2point div -1 dpi2point div scale
	neg translate
	landscapeMode eq {90 rotate} if
	} bdef

% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4 dpi2point mul] 0 setdash } bdef

% macros for lines and objects
/L {
	lineto
	stroke
	} bdef
/MP {
	3 1 roll moveto
	1 sub {rlineto} repeat
	} bdef
/AP {
	{rlineto} repeat
	} bdef
/PP {
	closepath fill
	} bdef
/DP {
	closepath stroke
	} bdef
/MR {
	4 -2 roll moveto
	dup  0 exch rlineto
	exch 0 rlineto
	neg  0 exch rlineto
	closepath
	} bdef
/FR {
	MR stroke
	} bdef
/PR {
	MR fill
	} bdef
/L1i {
	{ currentfile picstr readhexstring pop } image
	} bdef

/tMatrix matrix def
/MakeOval {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 0 360 arc
	tMatrix setmatrix
	} bdef
/FO {
	MakeOval
	stroke
	} bdef
/PO {
	MakeOval
	fill
	} bdef

/PD {
	2 copy moveto lineto stroke
	} bdef


currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    51   197   550   604
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: graph1 1
bplot

/dpi2point 12 def
portraitMode 0216 7344 csm

  406    92  5979  4884 MR c np
76 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

1 j
c1
   0    0 6914 5187 PR
6 w
DO
4 w
c0
 898 4615 mt  898  389 L
 898  389 mt  898  389 L
1791 4615 mt 1791  389 L
1791  389 mt 1791  389 L
2684 4615 mt 2684  389 L
2684  389 mt 2684  389 L
3577 4615 mt 3577  389 L
3577  389 mt 3577  389 L
4470 4615 mt 4470  389 L
4470  389 mt 4470  389 L
5363 4615 mt 5363  389 L
5363  389 mt 5363  389 L
6256 4615 mt 6256  389 L
6256  389 mt 6256  389 L
 898 4615 mt 6256 4615 L
6256 4615 mt 6256 4615 L
 898 3206 mt 6256 3206 L
6256 3206 mt 6256 3206 L
 898 1798 mt 6256 1798 L
6256 1798 mt 6256 1798 L
 898  389 mt 6256  389 L
6256  389 mt 6256  389 L
 898 4615 mt  898  389 L
 898  389 mt 6256  389 L
 898 4615 mt  898  389 L
 898  389 mt 6256  389 L
 898 4615 mt  898  389 L
 898  389 mt 6256  389 L
SO
6 w
 898 4615 mt 6256 4615 L
 898  389 mt 6256  389 L
6256 4615 mt 6256  389 L
 898 4615 mt  898  389 L
6256 4615 mt 6256 4615 L
 898 4615 mt  898 4615 L
 898 4615 mt 6256 4615 L
 898 4615 mt  898  389 L
 898 4615 mt  898 4615 L
 898 4615 mt  898 4561 L
 898  389 mt  898  443 L
 858 4784 mt 
(9) s
1791 4615 mt 1791 4561 L
1791  389 mt 1791  443 L
1711 4784 mt 
(10) s
2684 4615 mt 2684 4561 L
2684  389 mt 2684  443 L
2604 4784 mt 
(11) s
3577 4615 mt 3577 4561 L
3577  389 mt 3577  443 L
3497 4784 mt 
(12) s
4470 4615 mt 4470 4561 L
4470  389 mt 4470  443 L
4390 4784 mt 
(13) s
5363 4615 mt 5363 4561 L
5363  389 mt 5363  443 L
5283 4784 mt 
(14) s
6256 4615 mt 6256 4561 L
6256  389 mt 6256  443 L
6176 4784 mt 
(15) s
 898 4615 mt  925 4615 L
6256 4615 mt 6229 4615 L
DO
 898 4615 mt 6256 4615 L
6256 4615 mt 6256 4615 L
SO
 898 4615 mt  952 4615 L
6256 4615 mt 6202 4615 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 594 4668 mt 
(10) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

 754 4579 mt 
(-4) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 898 4191 mt  925 4191 L
6256 4191 mt 6229 4191 L
DO
 898 4191 mt 6256 4191 L
6256 4191 mt 6256 4191 L
SO
 898 3943 mt  925 3943 L
6256 3943 mt 6229 3943 L
DO
 898 3943 mt 6256 3943 L
6256 3943 mt 6256 3943 L
SO
 898 3767 mt  925 3767 L
6256 3767 mt 6229 3767 L
DO
 898 3767 mt 6256 3767 L
6256 3767 mt 6256 3767 L
SO
 898 3630 mt  925 3630 L
6256 3630 mt 6229 3630 L
DO
 898 3630 mt 6256 3630 L
6256 3630 mt 6256 3630 L
SO
 898 3519 mt  925 3519 L
6256 3519 mt 6229 3519 L
DO
 898 3519 mt 6256 3519 L
6256 3519 mt 6256 3519 L
SO
 898 3425 mt  925 3425 L
6256 3425 mt 6229 3425 L
DO
 898 3425 mt 6256 3425 L
6256 3425 mt 6256 3425 L
SO
 898 3343 mt  925 3343 L
6256 3343 mt 6229 3343 L
DO
 898 3343 mt 6256 3343 L
6256 3343 mt 6256 3343 L
SO
 898 3271 mt  925 3271 L
6256 3271 mt 6229 3271 L
DO
 898 3271 mt 6256 3271 L
6256 3271 mt 6256 3271 L
SO
 898 3206 mt  925 3206 L
6256 3206 mt 6229 3206 L
DO
 898 3206 mt 6256 3206 L
6256 3206 mt 6256 3206 L
SO
 898 3206 mt  952 3206 L
6256 3206 mt 6202 3206 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 594 3259 mt 
(10) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

 754 3170 mt 
(-3) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 898 2782 mt  925 2782 L
6256 2782 mt 6229 2782 L
DO
 898 2782 mt 6256 2782 L
6256 2782 mt 6256 2782 L
SO
 898 2534 mt  925 2534 L
6256 2534 mt 6229 2534 L
DO
 898 2534 mt 6256 2534 L
6256 2534 mt 6256 2534 L
SO
 898 2358 mt  925 2358 L
6256 2358 mt 6229 2358 L
DO
 898 2358 mt 6256 2358 L
6256 2358 mt 6256 2358 L
SO
 898 2222 mt  925 2222 L
6256 2222 mt 6229 2222 L
DO
 898 2222 mt 6256 2222 L
6256 2222 mt 6256 2222 L
SO
 898 2110 mt  925 2110 L
6256 2110 mt 6229 2110 L
DO
 898 2110 mt 6256 2110 L
6256 2110 mt 6256 2110 L
SO
 898 2016 mt  925 2016 L
6256 2016 mt 6229 2016 L
DO
 898 2016 mt 6256 2016 L
6256 2016 mt 6256 2016 L
SO
 898 1934 mt  925 1934 L
6256 1934 mt 6229 1934 L
DO
 898 1934 mt 6256 1934 L
6256 1934 mt 6256 1934 L
SO
 898 1862 mt  925 1862 L
6256 1862 mt 6229 1862 L
DO
 898 1862 mt 6256 1862 L
6256 1862 mt 6256 1862 L
SO
 898 1798 mt  925 1798 L
6256 1798 mt 6229 1798 L
DO
 898 1798 mt 6256 1798 L
6256 1798 mt 6256 1798 L
SO
 898 1798 mt  952 1798 L
6256 1798 mt 6202 1798 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 594 1851 mt 
(10) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

 754 1762 mt 
(-2) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 898 1374 mt  925 1374 L
6256 1374 mt 6229 1374 L
DO
 898 1374 mt 6256 1374 L
6256 1374 mt 6256 1374 L
SO
 898 1126 mt  925 1126 L
6256 1126 mt 6229 1126 L
DO
 898 1126 mt 6256 1126 L
6256 1126 mt 6256 1126 L
SO
 898  950 mt  925  950 L
6256  950 mt 6229  950 L
DO
 898  950 mt 6256  950 L
6256  950 mt 6256  950 L
SO
 898  813 mt  925  813 L
6256  813 mt 6229  813 L
DO
 898  813 mt 6256  813 L
6256  813 mt 6256  813 L
SO
 898  702 mt  925  702 L
6256  702 mt 6229  702 L
DO
 898  702 mt 6256  702 L
6256  702 mt 6256  702 L
SO
 898  607 mt  925  607 L
6256  607 mt 6229  607 L
DO
 898  607 mt 6256  607 L
6256  607 mt 6256  607 L
SO
 898  526 mt  925  526 L
6256  526 mt 6229  526 L
DO
 898  526 mt 6256  526 L
6256  526 mt 6256  526 L
SO
 898  453 mt  925  453 L
6256  453 mt 6229  453 L
DO
 898  453 mt 6256  453 L
6256  453 mt 6256  453 L
SO
 898  389 mt  925  389 L
6256  389 mt 6229  389 L
DO
 898  389 mt 6256  389 L
6256  389 mt 6256  389 L
SO
 898  389 mt  952  389 L
6256  389 mt 6202  389 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 594  442 mt 
(10) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

 754  353 mt 
(-1) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 898  389 mt 6256  389 L
 898 4615 mt 6256 4615 L
 898 4615 mt  898  389 L
6256 4615 mt 6256  389 L
 898  389 mt  898  389 L
6256  389 mt 6256  389 L
gs 898 389 5359 4227 MR c np
893 342 893 372 893 336 893 345 893 321 893 289 898 571 7 MP stroke
DA
893 438 893 382 893 374 893 335 893 339 893 275 898 581 7 MP stroke
DD
893 575 893 731 893 588 893 475 893 471 893 447 898 1304 7 MP stroke

gr 
DD
2345  274 mt 
(PR4 at 4.4 a/symbol \(2 symbols/pw50\)) s
 540 2963 mt  -90 rotate
(ERROR RATE) s
90 rotate
3209 4944 mt 
(S\(AWG\)NR) s
gs 898 389 5359 4227 MR c np
714 0 1077 2646 2 MP stroke

gr 
1970 2699 mt 
(C2 metric) s
gs 898 389 5359 4227 MR c np
DA
714 0 1077 2958 2 MP stroke

gr 
DA
1970 3011 mt 
(C1 metric) s
gs 898 389 5359 4227 MR c np
SO
714 0 1077 3271 2 MP stroke

gr 
SO
1970 3324 mt 
(Euclidian metric) s

end

eplot
%%EndObject graph 1

epage
end

showpage

%%Trailer
%%BoundingBox:    51   197   550   604
%%Pages: 001
%%EOF
cleartomark
countdictstack exch sub { end } repeat
restore

%%EndDocument
FMENDEPSF
0 0 0 0 1 1 1 K
92 172 556 222 R
7 X
V
3 H
2 Z
N
133 582 506 615 R
V
N
0 0 0 1 0 0 0 K
0 21 Q
0 X
0 0 0 1 0 0 0 K
(PR4 at 4.4) 125 592 T
1 23 Q
(a) 230.06 592 T
0 21 Q
(/ symbol \0502 symbols/PW50\051) 250.62 592 T
(S\050A) 244 188 T
(WG\051NR [dB]) 278.23 188 T
0 18 Q
(1) 238 208 T
(1) 246.68 208 T
(10) 163 208 T
(12) 312 208 T
(13) 386 208 T
(14) 460 208 T
0 0 0 0 1 1 1 K
47 211 94 624 R
7 X
0 0 0 0 1 1 1 K
V
N
0 0 0 1 0 0 0 K
0 X
0 0 0 1 0 0 0 K
(10) 62 452.8 T
0 14.4 Q
(-2) 82.02 460 T
0 18 Q
(10) 62 338.74 T
0 14.4 Q
(-3) 82.02 345.95 T
0 21 Q
(ERROR RA) 0 -270 56 331 TF
(TE) 0 -270 56 440.28 TF
0 0 0 0 1 1 1 K
99 290 291.8 396 R
7 X
0 0 0 0 1 1 1 K
V
0.5 H
N
0 0 0 1 0 0 0 K
99 290 291.8 396 R
0 X
0 0 0 1 0 0 0 K
N
J
106.56 380 166.29 380 2 L
J
106.56 380 112.31 380 2 L
N
[13.695 7.741 1.786 7.741] 13.695 I
112.31 380 160.54 380 2 L
N
J
160.54 380 166.29 380 2 L
N
J
106.56 344 166.29 344 2 L
J
106.56 344 110.31 344 2 L
N
[8.077 7] 8.077 I
110.31 344 162.54 344 2 L
N
J
162.54 344 166.29 344 2 L
N
J
106.56 308 166.29 308 2 L
N
2 F
(C2 metric) 174.61 372 T
(C1 metric) 173.85 337 T
2 20 Q
(Euclidian metric) 174.61 303 T
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 18 Q
(10) 62 222.57 T
0 14.4 Q
(-4) 82.02 229.77 T
0 18 Q
(10) 63 567.8 T
0 14.4 Q
(-1) 83.02 575 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1" 1
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Descend
%%Pages: 1
%%DocumentFonts: Helvetica
%%+ Bookman-LightItalic
%%+ Helvetica-Narrow
%%EOF
countdictstack InitDictCount sub { end } repeat
cleartomark
restore
grestore

%%EndDocument
 @endspecial 817 4953 a(Figure)f(5:)44 b(PR4)32 b(detection)h(results)g
(at)f(4)p Fj(:)p Fq(4)p Fj(a=)p Fq(sym)m(b)s(ol.)p eop
%%Page: 24 24
24 23 bop -133 -101 a Fm(IEEE)32 b(T)-7 b(r)i(ansactions)35
b(on)e(Magnetics)p Fl(,)d(v)m(ol.)h(34,)h(Ma)m(y)f(1998)1805
b Fq(24)855 2121 y @beginspecial 42 @llx 185 @lly 545
@urx 606 @ury 2370 @rwi @setspecial
%%BeginDocument: epr4two0.epsi
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 42 185 545 606
%%BeginPreview: 504 422 1 422
% 000000000000000000000ff83fc0ff00000000000000000000000000000000000000300000600000000000000000180000300001fe0e183000000000000000
% 000000000000000000000ff83fe0ffc018000000000c00030000000030000000000030000060030f800000000000180000300019ff0e1c307f03e080000000
% 000000000000000000000c003070c0c01800000c000c0003000007d830000000000030000060061fc0000000000018000030001983861c307f07f0c0000000
% 000000000000000000000c003030c0403800000c001c000700001ff8200000000000300000600638c0000000000018000030001181863c70600630c0000000
% 000000000000000000000c003030c04078007e1f003c000f00003e78600f8618fcf03f03e0600c306007c30c7e781f81f030f83181863c60600e3040000000
% 000000000000000000000c003030c0c0d800771f006c001b00007830601f8718fff03f87f0600c00600fc38c7ff81fc3f831f831818636607c0c1860000000
% 000000000000000000000ff83070c1c0d800630c006c001b000070304018c318c71830c630600c00c00c618c638c186318318c21838336607f0c1860000000
% 000000000000000000000ff83fe0ff819800030c00cc00330000e03040180330c61830cc18600c01800c0198630c18660c318021ff036660630c1860000000
% 000000000000000000000c003fc0ffc318003f0c018c00630000e060c01f0330c61830cc18600c07000f8198630c18660c31f061fe0362c0038c1860000000
% 000000000000000000000c003000c1c3fe00730c01ff007fc000c060c003c3a0c61830cc18600c1e0001e1d0630c18660c303c61800343c0018c1860000000
% 000000000000000000000c003000c0c3fe00e30c01ff007fc000c0608000c1e0c61830cc18600c18000060f0630c18660c300c418003c3c0c1863060000000
% 000000000000000000000c003000c0c01800c70c000c0003000060e58018c1e0c61830ce30600c30000c60f0630c186718318cc18001c3c0e3067060000000
% 000000000000000000000ffc3000c0401800ef8e000c0c03000073fd801fc1c0c6183f87f0600c3fe00fe0e0630c1fc3f831fcc18001c1c07f07f060000000
% 000000000000000000000ffc3000c06018007f8f000c0c0300001f79001f80c0c6183f03e0600c3fe00fc060630c1f81f031f881800181807e03e040000000
% 00000000000000000000000000000000000000000000000000000000000000c000000000000004000000006000000000000000000000000000000040000000
% 00000000000000000000000000000000000000000000000000000000000001800000000000000600000000c0000000000000000000000000000000c0000000
% 00000000000000000000000000000000000000000000000000000000000003800000000000000200000001c000000000000000000000000000000080000000
% 000000000003c00000000000000000000000000000000000000000000000030000000000000003000000018000000000000000000000000000000180000000
% 000000000006600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000006200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000806000c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000181f0e3800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000003819807000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000007811806000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000001830807e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000001830800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000001830800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000183080000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% 000001830800008003000000000000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 000001811800008000c00000000000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 00000181f000008000300000000000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 00000180f00000f46239188c46231188d46231188c46231188c46231188c46231188c4e231188c46231188c46231188c46231188c46a31188c46231188c467
% 000000000000008000060000000000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 000000000000008000018000000000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 000000000000008000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000001800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000f662311e8c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c467
% 000000000000009980000100000000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 0000000000000084400000c0000000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 000000000000008000000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000800600000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000f46a31188f46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c467
% 000000000000008006200000c00000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 000000000000008001980000300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000060000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000060000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000020000018000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 00000000000000f46231988c46631188d46231188c46231188c46231188c46231188c4e231188c46231188c46231188c46231188c46a31188c46231188c467
% 000000000000008000006000001800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000001180000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000060000180000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000010000040001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 000000000000008000000060000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000800000001980000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000f46231188e46231388c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c467
% 000000000000008000000000080000c01000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 000000000000008000000000060000301000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 0000000000000080000000000980000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000070000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000008800018000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000800007000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 000000000000008000000000000000001800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000f46231188c46237188c66231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c467
% 0000000000000080000000000000d0000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000800000000000003c0010c0000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 000000000000008000000000000000001030000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 00000000000000800000000000000040000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000400003000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000340000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 0000000000000080000000000000000f1000600000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 00000000000000800000000000000002c000180000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000002000060000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000f46231188c46231188de6231d88c46231188c46231188c46231188c4e231188c46231188c46231188c46231188c46a31188c46231188c467
% 000000000000008000000000000000001300003000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 0000000000000080000000000000000000b0000c00000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000800000000000000000000c000200000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000003000180000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000001000000060000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 000000000000008000000000000000000001900018000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000600006000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000110001000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000800000000000000000100000c000c00000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 000000000000008000000000000000001000003000300000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 0000000000000080000000000000000000000048000c0000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000003000020000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000c80018000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000001000000200006000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 00000000000000800000000000000000000000000c001800000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000f46231188c46231188c46231188f46271188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c467
% 00000000000000800000000000000000000000000cc00300000000000000000000000000000000000000000000000000000000000000000000000000000001
% 0000000000000080000000000000000010000000030000c0000400000000000000000080000000000000000020000000000000000008000000000000000001
% 000000000000008000000000000000001000000000840030000400000000000000000080000000000000000020000000000000000008000000000000000001
% 00000000000000800000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000004002000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000003001800000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000001000000000018c00600400000000000000000080000000000000000020000000000000000008000000000000000001
% 000000000000008000000000000000000000000000006200180000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000001000040000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000020030000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000800000000000000000100000000000000000c400000000000000000080000000000000000020000000000000000008000000000000000001
% 000000000000008000000000000000001000000000000043003400000000000000000080000000000000000020000000000000000008000000000000000001
% 000000000000008000000000000000000000000000000030c00c00000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000800000000000000000000000000000000c300200000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000003c08000000000000000000000000000000000000180000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000006608000000000000000001000000000000000010440000000000000000080000000000000000020000000000000000008000000000000000001
% 000000000006608000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000000000000001
% 0000000000004080000000000000000000000000000000000c100c000000000000000000000000000000000000000000000000000000000000000000000001
% 000000806001c08000000000000000000000000000000000020c02000000000000000000000000000000000000000000000000000000000000000000000001
% 00000181f0e0608000000000000000001000000000000000018601800000000000000080000000000000000020000000000000000008000000000000000001
% 000003819804208000000000000000001000000000000000000500600000000000000080000000000000000020000000000000000008000000000000000001
% 000007811806608000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000001
% 000001830803c080000000000000000000000000000000000002000c0000000000000000000000000000000000000000000000000000000000000000000001
% 000001830800008000000000000000000000000000000000000110030000000000000000000000000000000000000000000000000000000000000000000001
% 0000018308000080000000000000000010000000000000000004c0008000000000000080000000000000000020000000000000000008000000000000000001
% 00000183080000fc6231188c46231188c46231188c46231188c46231788c46231188c46231188c46231188c46231188c46231188c46231188c46231188c47f
% 000001830800008000000000000000000000000000000000000001801000000000000000000000000000000000000000000000000000000000000000000001
% 000001811800008000000000000000000000000000000000000000400c00000000000000000000000000000000000000000000000000000000000000000001
% 00000181f000008000000000000000001000000000000000000400200300000000000080000000000000000020000000000000000008000000000000000001
% 00000180f00000f46231188c46231188d46231188c46231188c462b1188c46231188c4e231188c46231188c46231188c46231188c46a31188c46231188c467
% 000000000000008000000000000000000000000000000000000000600060000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000110018000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000090004000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000001000000000000000000400000003000000000080000000000000000020000000000000000008000000000000000001
% 00000000000000f46231188c46231188c46231188c46231188c46231188cc6231188c46231188c46231188c46231188c46231188c46231188c46231188c467
% 000000000000008000000000000000000000000000000000000000000800200000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000003600180000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000001000000000000000000400000900040000000080000000000000000020000000000000000008000000000000000001
% 000000000000008000000000000000001000000000000000000400000600030000000080000000000000000020000000000000000008000000000000000001
% 00000000000000f46231188c46231188c46231188c46231188c46231188c46e31188c46231188c46231188c46231188c46231188c46231188c46231188c467
% 000000000000008000000000000000000000000000000000000000000030002000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000001800000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000001000000000000000000400000008000600000080000000000000000020000000000000000008000000000000000001
% 000000000000008000000000000000000000000000000000000000000005000100000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000003c000c0000000000000000000000000000000000000000000000000000000000001
% 00000000000000f46231188c46231188c46231188c46231188c46231188ce6233188c46231188c46231188c46231188c46231188c46231188c46231188c467
% 000000000000008000000000000000001000000000000000000400000000000008000080000000000000000020000000000000000008000000000000000001
% 000000000000008000000000000000001000000000000000000400000000000006000080000000000000000020000000000000000008000000000000000001
% 000000000000008000000000000000000000000000000000000000000000030001000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000020000c00000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000010000300000000000000000000000000000000000000000000000000000000001
% 000c0000000000800000000000000000100000000000000000040000000000e000080080000000000000000020000000000000000008000000000000000001
% c30c0000000000f46231188c46231188c46231188c46231188c46231188c463b118ec46231188c46231188c46231188c46231188c46231188c46231188c467
% c30c00000000008000000000000000000000000000000000000000000000000400018000000000000000000000000000000000000000000000000000000001
% c30c00000000008000000000000000000000000000000000000000000000000200004000000000000000000000000000000000000000000000000000000001
% c30c00000000008000000000000000001000000000000000000400000000000000003080000000000000000020000000000000000008000000000000000001
% c30c00000000008000000000000000001000000000000000000400000000000080000880000000000000000020000000000000000008000000000000000001
% c30c00000000008000000000000000000000000000000000000000000000000060000600000000000000000000000000000000000000000000000000000001
% c30c00000000008000000000000000000000000000000000000000000000000010000180000000000000000000000000000000000000000000000000000001
% fffc00000000008000000000000000000000000000000000000000000000000008000040000000000000000000000000000000000000000000000000000001
% fffc0000000000f46231188c46231188d46231188c46231188c46231188c46231388c4f231188c46231188c46231188c46231188c46a31188c46231188c467
% 000000000000008000000000000000000000000000000000000000000000000000800008000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000400006000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000300001000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000001000000000000000000400000000000000080080c00000000000000020000000000000000008000000000000000001
% c00000000000008000000000000000001000000000000000000400000000000000060080200000000000000020000000000000000008000000000000000001
% c00000000000008000000000000000000000000000000000000000000000000000000000180000000000000000000000000000000000000000000000000001
% c00000000000008000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000001
% c00000000000008000000000000000000000000000000000000000000000000000002000030000000000000000000000000000000000000000000000000001
% fffc00000000008000000000000000001000000000000000000400000000000000001880008000000000000020000000000000000008000000000000000001
% fffc00000000008000000000000000000000000000000000000000000000000000000c00006000000000000000000000000000000000000000000000000001
% c0000000000000f46231188c46231188c46231188c46231188c46231188c46231188c76231188c46231188c46231188c46231188c46231188c46231188c467
% c000000000000080000000000000000000000000000000000000000000000000000000c0000400000000000000000000000000000000000000000000000001
% c00000000000008000000000000000001000000000000000000400000000000000000080000300000000000020000000000000000008000000000000000001
% c000000000000080000000000000000010000000000000000004000000000000000000e0000080000000000020000000000000000008000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000001
% 001c00000000008000000000000000000000000000000000000000000000000000000002000010000000000000000000000000000000000000000000000001
% 00fc0000000000800000000000000000000000000000000000000000000000000000000500000c000000000000000000000000000000000000000000000001
% 07f000000000008000000000000000001000000000000000000400000000000000000082800002000000000020000000000000000008000000000000000001
% 7fc000000000008000000000000000000000000000000000000000000000000000000001e00001800000000000000000000000000000000000000000000001
% f8c000000000008000000000000000000000000000000000000000000000000000000000400000400000000000000000000000000000000000000000000001
% e0c000000000008000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000001
% 3fc000000000008000000000000000001000000000000000000400000000000000000080000000080000000020000000000000000008000000000000000001
% 1fe0000000000080000000000000000010000000000000000004000000000000000000800d0000060000000020000000000000000008000000000000000001
% 03fc00000000008000000000000000000000000000000000000000000000000000000000008000010000000000000000000000000000000000000000000001
% 007c0000000000800000000000000000000000000000000000000000000000000000000000600000c000000000000000000000000000000000000000000001
% 000400000000008000000000000000000000000000000000000000000000000000000000009000002000000000000000000000000000000000000000000001
% 00000000000000f46231188c46231188d46231188c46231188c46231188c46231188c4e231588c463b1188c46231188c46231188c46a31188c46231188c467
% 000000000000008000000000000000000000000000000000000000000000000000000000002000000400000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000001000000300000000000000000000000000000000000000000001
% 000400000000008000000000000000000000000000000000000000000000000000000000000800000080000000000000000000000000000000000000000001
% 7efc00000000008000000000000000001000000000000000000400000000000000000080000060000060000020000000000000000008000000000000000001
% 67f000000000008000000000000000001000000000000000000400000000000000000080000010000018000020000000000000000008000000000000000001
% c3c000000000008000000000000000000000000000000000000000000000000000000000000088000004000000000000000000000000000000000000000001
% c18000000000008000000000000000000000000000000000000000000000000000000000000004000003000000000000000000000000000000000000000001
% c18000000000008000000000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000001
% c18000000000008000000000000000001000000000000000000400000000000000000080000008000000600020000000000000000008000000000000000001
% c18000000000008000000000000000000000000000000000000000000000000000000000000004000000100000000000000000000000000000000000000001
% c180000000000080000000000000000000000000000000000000000000000000000000000000021000000c0000000000000000000000000000000000000001
% fffc00000000008000000000000000000000000000000000000000000000000000000000000001080000020000000000000000000000000000000000000001
% fffc00000000008000000000000000001000000000000000000400000000000000000080000000060000018020000000000000000008000000000000000001
% 000000000000008000000000000000001000000000000000000400000000000000000080000000000000004020000000000000000008000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000100000003000000000000000000000000000000000000001
% 000000000000c08000000000000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000001
% 000000000000c08000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000001
% 000000000001c08000000000000000001000000000000000000400000000000000000080000000010800000120000000000000000008000000000000000001
% 000000000003c080000000000000000000000000000000000000000000000000000000000000000086000000c0000000000000000000000000000000000001
% 000000000006c08000000000000000000000000000000000000000000000000000000000000000004100000020000000000000000000000000000000000001
% 0000008060e6c08000000000000000000000000000000000000000000000000000000000000000002080000010000000000000000000000000000000000001
% 00000181f007e08000000000000000001000000000000000000400000000000000000080000000000000000028000000000000000008000000000000000001
% 000003819800c08000000000000000001000000000000000000400000000000000000080000000000000000024000000000000000008000000000000000001
% 000407811800c08000000000000000000000000000000000000000000000000000000000000000000200000003000000000000000000000000000000000001
% 7efc01830800008000000000000000000000000000000000000000000000000000000000000000000002000000800000000000000000000000000000000001
% 67f00183080000fc6231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46271188c46231188c46231188c46231188c47f
% c3c001830800008000000000000000001000000000000000000400000000000000000080000000000000800020200000000000000008000000000000000001
% c18001830800008000000000000000000000000000000000000000000000000000000000000000000020600000100000000000000000000000000000000001
% c18001830800008000000000000000000000000000000000000000000000000000000000000000000018000000080000000000000000000000000000000001
% c1800181180000f46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231588c46235188c46231188c46231188c46231188c467
% c1800181f000008000000000000000001000000000000000000400000000000000000080000000000000000020020000000000000008000000000000000001
% c1800180f000008000000000000000001000000000000000000400000000000000000080000000000000010020010000000000000008000000000000000001
% fffc00000000008000000000000000000000000000000000000000000000000000000000000000000000008000008000000000000000000000000000000001
% fffc00000000008000000000000000000000000000000000000000000000000000000000000000000000406000006000000000000000000000000000000001
% 00000000000000f46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188d46231188c46231188c46231188c46231188c467
% 000000000000008000000000000000001000000000000000000400000000000000000080000000000000000020000800000000000008000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000040000000400000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000020000000200000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000010000000100000000000000000000000000000001
% 0fe00000000000f46231188c46231188d46231188c46231188c46231188c46231188c4e231188c46231188c46231188c46231188c46a31188c46231188c467
% 3ff000000000008000000000000000001000000000000000000400000000000000000080000000000000000030000040000000000008000000000000000001
% 703800000000008000000000000000000000000000000000000000000000000000000000000000000000000008000020000000000000000000000000000001
% 601c00000000008000000000000000000000000000000000000000000000000000000000000000000000000804000010000000000000000000000000000001
% c00c0000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000001
% c00c00000000008000000000000000001000000000000000000400000000000000000080000000000000000020000002000000000008000000000000000001
% c00c0000000000f46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c4e231188d46231188c46231188c46231188c467
% c00c00000000008000000000000000000000000000000000000000000000000000000000000000000000000040000000800000000000000000000000000001
% c00c00000000008000000000000000000000000000000000000000000000000000000000000000000000000020200000400000000000000000000000000001
% 601800000000008000000000000000001000000000000000000400000000000000000080000000000000000030100000200000000008000000000000000001
% 787800000000008000000000000000001000000000000000000400000000000000000080000000000000000020080000100000000008000000000000000001
% 3ff000000000008000000000000000000000000000000000000000000000000000000000000000000000000000040000080000000000000000000000000001
% 0fc000000000008000000000000000000000000000000000000000000000000000000000000000000000000001000000040000000000000000000000000001
% 00000000000000f46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46331188c46231188c46231188c46231188c467
% 000000000000008000000000000000001000000000000000000400000000000000000080000000000000000020000000018000000008000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000001
% 000400000000008000000000000000000000000000000000000000000000000000000000000000000000000000101000002000000000000000000000000001
% 7efc00000000008000000000000000000000000000000000000000000000000000000000000000000000000000080800001000000000000000000000000001
% 67f000000000008000000000000000001000000000000000000400000000000000000080000000000000000020040400000800000008000000000000000001
% c3c000000000008000000000000000001000000000000000000400000000000000000080000000000000000020020200000400000008000000000000000001
% c18000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000001
% c1800000000000f46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c467
% c18000000000008000000000000000000000000000000000000000000000000000000000000000000000000000002000000080000000000000000000000001
% c18000000000008000000000000000001000000000000000000400000000000000000080000000000000000020002000000040000008000000000000000001
% c18000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000008000030000000000000000000000001
% fffc00000000008000000000000000000000000000000000000000000000000000000000000000000000000000000404000008000000000000000000000001
% fffc00000000008000000000000000000000000000000000000000000000000000000000000000000000000000000202000004000000000000000000000001
% 0000000000000080000000000003ffffffffffffffffffffffffffffffffffffffffffffffffffc00000000020000101000002000008000000000000000001
% 000000000000008000000000000200000000000000000000000000000000000000000000000000400000000020000080000001000008000000000000000001
% 000000000000008000000000000200000000000000000000000000000000000000000000000000400000000000000040000000800000000000000000000001
% 000000000000008000000000000200000000000000000000000000000000000000000000000000400000000000000000000000400000000000000000000001
% 000400000000008000000000000200000000000000000000000000000000000000000000000000400000000000000000000000200000000000000000000001
% 7efc0000000000f46231188c46220000000000000000000000000000000000000000000000000046231188c46231188c4e231198c46a31188c46231188c467
% 67f0000000000080000000000002000000000000000000000000000000000000000000000000004000000000000000000400000c0000000000000000000001
% c3c000000000008000000000000200000000000000000000000000000000000000000000000000400000000000000000020000020000000000000000000001
% c18000000000008000000000000200000000000000000000000000000000000000000000000000400000000000000000010000010000000000000000000001
% c18000000000008000000000000200000000000000000000380000000000000000000000000000400000000020000000c08000008008000000000000000001
% c18000000000008000000000000200000000000000000000fc0e00000000000800000000000000400000000020000000200000004008000000000000000001
% c18000000000008000000000000200000000000000000001ce1f00000000400800000000000000400000000000000000100000002000000000000000000001
% c18000000000008000000000000200000000000000000001861980000000400000000000000000400000000000000000000000001000000000000000000001
% fffc000000000080000000000002000000000000000000010231801cc07040c070000000000000400000000000000000000400000800000000000000000001
% fffc000000000080000000000002000000000000000000030031807fe0f8f3c8fc000000000000400000000020000000000200000408000000000000000001
% 0000000000000080000000000002000000000000000000030031806730cc4308cc000000000000400000000000000000010100000200000000000000000001
% 000000000000008000000000000207f81c03fff80e03fc0300018066318c420884000000000000400000000000000000000080000180000000000000000001
% 00000000000000800000000000020000000000000000000300030046318c420980000000000000400000000000000000000040000040000000000000000001
% 0000000000000080000000000002000000000000000000030207004631fc420980000000000000400000000020000000000000000028000000000000000001
% 000c00000000008000000000000200000000000000000001021c00463180420980000000000000400000000020000000001000000018000000000000000001
% c30c00000000008000000000000200000000000000000001861800463184420984000000000000400000000000000000000800000008000000000000000001
% c30c0000000000f46231188c46220000000000000000000186300046308c42088c00000000000046231188c46231188c46271388c46631188c46231188c467
% c30c00000000008000000000000200000000000000000000cc3f804630dc6208cc000000000000400000000000000000000001000002000000000000000001
% c30c00000000008000000000000200000000000000000000fc3f804630f87208f8000000000000400000000020000000000000800009000000000000000001
% c30c00000000008000000000000200000000000000000000000000000000000000000000000000400000000000000000000000400000800000000000000001
% c30c00000000008000000000000200000000000000000000000000000000000000000000000000400000000000000000000020000000400000000000000001
% c30c00000000008000000000000200000000000000000000000000000000000000000000000000400000000000000000000000000000200000000000000001
% fffc00000000008000000000000200000000000000000000000000000000000000000000000000400000000020000000000000000008100000000000000001
% fffc00000000008000000000000200000000000000000000000000000000000000000000000000400000000020000000000004000008080000000000000001
% 000000000000008000000000000200000000000000000000000000000000000000000000000000400000000000000000000002000000040000000000000001
% 000000000000008000000000000200000000000000000000000000000000000000000000000000400000000000000000000001010000020000000000000001
% 000000000000008000000000000200000000000000000000000000000000000000000000000000400000000000000000000000808000010000000000000001
% 000000000000008000000000000200000000000000000000000000000000000000000000000000400000000020000000000000404008008000000000000001
% 000000000000008000000000000200000000000000000000000000000000000000000000000000400000000000000000000000002000004000000000000001
% 000000000000008000000000000200000000000000000000000000000000000000000000000000400000000000000000000000000000002000000000000001
% 0000000000000080000000000002000000000000000000000000000000000000000000000000004000000000000000000000000c0000001000000000000001
% 000000000000008000000000000200000000000000000000000000000000000000000000000000400000000020000000000000000008000800000000000001
% 000000000000008000000000000200000000000000000000000000000000000000000000000000400000000020000000000000000008000400000000000001
% 000000000003e08000000000000200000000000000000000000000000000000000000000000000400000000000000000000000008080000200000000000001
% 000000000002008000000000000200000000000000000000000000000000000000000000000000400000000000000000000000004040000100000000000001
% 000000000006008000000000000200000000000000000000000000000000000000000000000000400000000000000000000000002020000080000000000001
% 000000000007c08000000000000200000000000000000000000000000000000000000000000000400000000020000000000000001018000040000000000001
% 000000000006e08000000000000200000000000000000000000000000000000000000000000000400000000000000000000000000000000020000000000001
% 0000008060e0608000000000000200000000000000000000000000000000000000000000000000400000000000000000000000000000000010000000000001
% 00000181f004608000000000000200000000000000000000700000000000000000000000000000400000000000000000000000000100000008000000000001
% 000003819806e08000000000000200000000000000000001f80400000000001000000000000000400000000020000000000000000108000006000000000001
% 000007811803c080000000000002000000000000000000039c0c00000000801000000000000000400000000020000000000000000008c00001000000000001
% 0000018308000080000000000002000000000000000000030c0c00000000800000000000000000400000000000000000000000000000200000800000000001
% 00000183080000fc6231188c462200000000000000000002043c001cc0e08180e000000000000046231188c46231188c46231188c47231188c46231188c47f
% 000001830800008000000000000200000000000000000006003c007fe1f1e791f8000000000000400000000000000000000000000008080000200000000001
% 000001830800008000000000000200000000000000000006000c0067319886119800000000000040000000002000000000000000000c000000100000000001
% 000001830800008000000000000200000000000000000006000c00663318841108000000000000400000000000000000000000000002000000080000000001
% 00000181180000f46231188c462207e07fc07fc07fc0fc06000c0046331884130000000000000046231188c46231188c46231188c46231188c46231188c467
% 00000181f000008000000000000200000000000000000006040c004633f8841300000000000000400000000000000000000000000000000000020000000001
% 00000180f000008000000000000200000000000000000002040c00463300841300000000000000400000000020000000000000000008204000010000000001
% 0000000000000080000000000002000000000000000000030c0c00463308841308000000000000400000000020000000000000000008002000008000000001
% 00000000000000f46231188c4622000000000000000000030c0c0046311884111800000000000046231188c46231188c46231188c46231188c46631188c467
% 000000000000008000000000000200000000000000000001980c004631b8c41198000000000000400000000000000000000000000000040800002000000001
% 000000000000008000000000000200000000000000000001f80c004631f0e411f0000000000000400000000000000000000000000000020400001000000001
% 000000000000008000000000000200000000000000000000000000000000000000000000000000400000000020000000000000000008010000000800000001
% 000000000000008000000000000200000000000000000000000000000000000000000000000000400000000000000000000000000000008000000400000001
% 00000000000000f46231188c46220000000000000000000000000000000000000000000000000046231188c46231188c46231188c46231588c46231188c467
% 000000000000008000000000000200000000000000000000000000000000000000000000000000400000000000000000000000000000000020000100000001
% 000000000000008000000000000200000000000000000000000000000000000000000000000000400000000020000000000000000008000010000080000001
% 000000000000008000000000000200000000000000000000000000000000000000000000000000400000000020000000000000000008000c08000040000001
% 000000000000008000000000000200000000000000000000000000000000000000000000000000400000000000000000000000000000000004000020000001
% 000000000000008000000000000200000000000000000000000000000000000000000000000000400000000000000000000000000000000000000010000001
% 00000000000000f46231188c46220000000000000000000000000000000000000000000000000046231188c46231188c46231188c46231188c46231988c467
% 000000000000008000000000000200000000000000000000000000000000000000000000000000400000000020000000000000000008000040000004000001
% 000000000000008000000000000200000000000000000000000000000000000000000000000000400000000000000000000000000000000020000002000001
% 000000000000008000000000000200000000000000000000000000000000000000000000000000400000000000000000000000000000000018000001000001
% 000000000000008000000000000200000000000000000000000000000000000000000000000000400000000000000000000000000000000000100000800001
% 000000000000008000000000000200000000000000000000000000000000000000000000000000400000000020000000000000000008000000080000400001
% 000000000000008000000000000200000000000000000000000000000000000000000000000000400000000020000000000000000008000000040000200001
% 00000000000000f46231188c46220000000000000000000000000000000000000000000000000046231188c46231188c46231188c46231188c46231198c467
% 000000000000008000000000000200000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000080001
% 000000000000008000000000000200000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000040001
% 000000000000008000000000000200000000000000000000000000000000000000000000000000400000000020000000000000000008000000100000020001
% 000000000000008000000000000200000000000000000000000000000000000000000000000000400000000000000000000000000000000000080000010001
% 000000000000008000000000000200000000000000000001fc00001880c4000000000000000800400000000000000000000000000000000000060800008001
% 000000000000008000000000000200000000000000000001fc00001880c4000000000000400800400000000000000000000000000000000000010400004001
% 0000000000000080000000000002000000000000000000010000001800c0000000000000400000400000000020000000000000000008000000000200002001
% 0000000000000080000000000002000000000000000000010000071806c03807001cc07040c0e0400000000020000000000000000008000000000100001001
% 00000000000000f46231188c46220000000000000000000100230fd88fc47c1f807fe0f8f3c9f846231188c46231188c46231188c46231188c46231188cc67
% 00000000000000800000000000020000000000000000000100230cd89cc4ec19806730cc430998400000000000000000000000000000000000000000000401
% 000000000000008000000000000200000000000000000001f823085898c4c4198066318c420908400000000000000000000000000000000000000000000201
% 000000000000008000000000000200000000000000000001f823181898c404118046318c420b00400000000020000000000000000008000000000000000181
% 0000000000000080000000000002000000000000000000010023181898c47c11804631fc420b00400000000000000000000000000000000000000308000041
% 000000000000008000000000000207fffffffffffffffc010023181898c4fc1180463180420b00400000000000000000000000000000000000000084000021
% 0000000000000080000000000002000000000000000000010023185898c4c41180463184420b08400000000000000000000000000000000000000042000011
% 000000000000008000000000000200000000000000000001002308d898c4cc118046308c420918400000000020000000000000000008000000000001800009
% 000000000000008000000000000200000000000000000001fc370cd89dc4dc11804630dc620998400000000020000000000000000008000000000000000005
% 000000000000008000000000000200000000000000000001fc3f0f988fc4f611804630f87209f0400000000000000000000000000000000000000000000003
% 000000000000008000000000000200000000000000000000000000000000000000000000000000400000000000000000000000000000000000000004000001
% 00000000000000f46231188c46220000000000000000000000000000000000000000000000000046231188c46231188c46231188c46231188c46231188c467
% 000000000000008000000000000200000000000000000000000000000000000000000000000000400000000020000000000000000008000000000000040001
% 000000000000008000000000000200000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000420001
% 000000000000008000000000000200000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000210001
% 000000000000008000000000000200000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000108001
% 000000000000008000000000000200000000000000000000000000000000000000000000000000400000000020000000000000000008000000000000080001
% 000000000000008000000000000200000000000000000000000000000000000000000000000000400000000020000000000000000008000000000000000001
% 000000000000008000000000000200000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000001
% 000000000000008000000000000200000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000008001
% 000000000000008000000000000200000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000008001
% 000000000000008000000000000200000000000000000000000000000000000000000000000000400000000020000000000000000008000000000000000301
% 000000000000008000000000000200000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000081
% 0000000000000080000000000003ffffffffffffffffffffffffffffffffffffffffffffffffffc00000000000000000000000000000000000000000000841
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000401
% 000000000000008000000000000000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000201
% 00000000000000f46231188c46231188d46231188c46231188c46231188c46231188c4e231188c46231188c46231188c46231188c46a31188c46231188c567
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011
% 000000000000008000000000000000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 000000000000008000000000000000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000003c08000000000000000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 000000000003608000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000006008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000005808000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000007e08000000000000000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 0000008060e6608000000000000000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 00000181f006208000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000003819806608000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000007811803c08000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000001830800008000000000000000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 000001830800008000000000000000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 000001830800008000000000000000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 000001830800008000000000000000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 000001830800008000000000000000001000000000000000000400000000000000000080000000000000000020000000000000000008000000000000000001
% 00000181180000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% 00000181f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000180f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000040300000000000000008040000000000000002018000000000000000806000000000000000200400000000000000000
% 0000000000000000000000000000000c0f800000000000000180c000000000000000607c00000000000000181f000000000000000600c00000000000000000
% 0000000000000000000000000000001c0cc00000000000000381c000000000000000e046000000000000003811800000000000000e00c00000000000000000
% 0000000000000000000000000000003c08c00000000000000783c000000000000001e0c2000000000000007811800000000000001e03c00000000000000000
% 0000000000000000000000000000000c18400000000000000180c00000000000000060c2000000000000001811800000000000000603c00000000000000000
% 0000000000000000000000000000000c18400000000000000180c0000000000000006006000000000000001807000000000000000602c00000000000000000
% 0000000000000000000000000000000c18400000000000000180c000000000000000600c000000000000001807800000000000000604c00000000000000000
% 0000000000000000000000000000000c18400000000000000180c000000000000000603800000000000000180180000000000000060cc00000000000000000
% 0000000000000000000000000000000c18400000000000000180c000000000000000606000000000000000183080000000000000060fe00000000000000000
% 0000000000000000000000000000000c08c00000000000000180c00000000000000060c000000000000000183080000000000000060fe00000000000000000
% 0000000000000000000000000000000c0f800000000000000180c00000000000000060fe00000000000000181f800000000000000600c00000000000000000
% 0000000000000000000000000000000c07800000000000000180c00000000000000060fe00000000000000180f000000000000000600c00000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000007c0000c0e18300f8000c040ff000700c3f81e00000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000fe0180e0e1c303fc040e040ffc00600c3fe0600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000001870301e061c3078e060e040c0c00600c30e0600000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000018303036063c70703060f040c0400600c3060600000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000018006036063c60e03020f840c040061ec3060600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000001c006033063660c00030d840c0c0063fc3060600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000fc06073033660c00030dc40c1c00631c3fc0600000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000001f06073036660c1f830ce40ff800660c3fe0600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000078607f8362c0c1f830c640ffc00660c30f0600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000003018607f8343c0e01830c740c1c00660c3030600000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000381860e183c3c0603830c3c0c0c00660c3030600000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000183860c1c1c3c0707830c1c0c0c00671c3070600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000001ff060c0c1c1c03ff830c1c0c040063fc3fe0600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000fe061c0c181801f9820c0c0c060063ec3fe0600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000200000000000002000000000060000000600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000300000000000006000000000060000000600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000100000000000004000000000060000000600000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000018000000000000c000000000070000001e00000000000000000000000000000000000000
%%EndImage
%%EndPreview
/InitDictCount countdictstack def
gsave
save
mark
newpath
/showpage {} def
%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 { } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	
	
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 612 792 0 1 5 FMDOCUMENT
0 0 /Helvetica FMFONTDEFINE
1 0 /Bookman-LightItalic FMFONTDEFINE
2 0 /Helvetica-Narrow FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "1" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 0 0 0 1 1 1]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 54 199 544 598 490 399 60 196.5 FMBEGINEPSF
%%BeginDocument: /home/kavcic/tex/papers/TransMAG97/e4two0.epsi
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 54 199 544 598
save
countdictstack
mark
newpath
/showpage {} def
%!PS-Adobe-2.0 
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: epr4two0.ps
%%CreationDate: 04/28/97  01:32:09
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Pages: (atend)
%%BoundingBox: (atend)
%%EndComments

%%BeginProlog

% MathWorks dictionary
/MathWorks 150 dict begin

% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef

% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
/rm /rmoveto ldef
/rl /rlineto ldef
/s /show ldef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef

% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef

% orientation switch
/portraitMode 	0 def
/landscapeMode 	1 def

% coordinate system mappings
/dpi2point 0 def

% font control
/FontSize 0 def
/FMS {
	/FontSize xstore		%save size off stack
	findfont
	[FontSize 0 0 FontSize neg 0 0]
	makefont
	setfont
	}bdef

/reencode {
exch dup where
{pop load} {pop StandardEncoding} ifelse
exch
dup 3 1 roll
findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def
  currentdict
end
definefont pop
} bdef

/isroman {
findfont /CharStrings get
/Agrave known
} bdef

/FMSR {
3 1 roll 1 index
dup isroman
{reencode} {pop pop} ifelse
exch FMS
} bdef

/csm {
	1 dpi2point div -1 dpi2point div scale
	neg translate
	landscapeMode eq {90 rotate} if
	} bdef

% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4 dpi2point mul] 0 setdash } bdef

% macros for lines and objects
/L {
	lineto
	stroke
	} bdef
/MP {
	3 1 roll moveto
	1 sub {rlineto} repeat
	} bdef
/AP {
	{rlineto} repeat
	} bdef
/PP {
	closepath fill
	} bdef
/DP {
	closepath stroke
	} bdef
/MR {
	4 -2 roll moveto
	dup  0 exch rlineto
	exch 0 rlineto
	neg  0 exch rlineto
	closepath
	} bdef
/FR {
	MR stroke
	} bdef
/PR {
	MR fill
	} bdef
/L1i {
	{ currentfile picstr readhexstring pop } image
	} bdef

/tMatrix matrix def
/MakeOval {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 0 360 arc
	tMatrix setmatrix
	} bdef
/FO {
	MakeOval
	stroke
	} bdef
/PO {
	MakeOval
	fill
	} bdef

/PD {
	2 copy moveto lineto stroke
	} bdef


currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    51   197   550   604
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: graph1 1
bplot

/dpi2point 12 def
portraitMode 0216 7344 csm

  406    92  5979  4884 MR c np
76 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

1 j
c1
   0    0 6914 5187 PR
6 w
DO
4 w
c0
 898 4615 mt  898  389 L
 898  389 mt  898  389 L
1791 4615 mt 1791  389 L
1791  389 mt 1791  389 L
2684 4615 mt 2684  389 L
2684  389 mt 2684  389 L
3577 4615 mt 3577  389 L
3577  389 mt 3577  389 L
4470 4615 mt 4470  389 L
4470  389 mt 4470  389 L
5363 4615 mt 5363  389 L
5363  389 mt 5363  389 L
6256 4615 mt 6256  389 L
6256  389 mt 6256  389 L
 898 4615 mt 6256 4615 L
6256 4615 mt 6256 4615 L
 898 3559 mt 6256 3559 L
6256 3559 mt 6256 3559 L
 898 2502 mt 6256 2502 L
6256 2502 mt 6256 2502 L
 898 1446 mt 6256 1446 L
6256 1446 mt 6256 1446 L
 898  389 mt 6256  389 L
6256  389 mt 6256  389 L
 898 4615 mt  898  389 L
 898  389 mt 6256  389 L
 898 4615 mt  898  389 L
 898  389 mt 6256  389 L
 898 4615 mt  898  389 L
 898  389 mt 6256  389 L
SO
6 w
 898 4615 mt 6256 4615 L
 898  389 mt 6256  389 L
6256 4615 mt 6256  389 L
 898 4615 mt  898  389 L
6256 4615 mt 6256 4615 L
 898 4615 mt  898 4615 L
 898 4615 mt 6256 4615 L
 898 4615 mt  898  389 L
 898 4615 mt  898 4615 L
 898 4615 mt  898 4561 L
 898  389 mt  898  443 L
 858 4784 mt 
(9) s
1791 4615 mt 1791 4561 L
1791  389 mt 1791  443 L
1711 4784 mt 
(10) s
2684 4615 mt 2684 4561 L
2684  389 mt 2684  443 L
2604 4784 mt 
(11) s
3577 4615 mt 3577 4561 L
3577  389 mt 3577  443 L
3497 4784 mt 
(12) s
4470 4615 mt 4470 4561 L
4470  389 mt 4470  443 L
4390 4784 mt 
(13) s
5363 4615 mt 5363 4561 L
5363  389 mt 5363  443 L
5283 4784 mt 
(14) s
6256 4615 mt 6256 4561 L
6256  389 mt 6256  443 L
6176 4784 mt 
(15) s
 898 4615 mt  925 4615 L
6256 4615 mt 6229 4615 L
DO
 898 4615 mt 6256 4615 L
6256 4615 mt 6256 4615 L
SO
 898 4615 mt  952 4615 L
6256 4615 mt 6202 4615 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 594 4668 mt 
(10) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

 754 4579 mt 
(-6) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 898 4297 mt  925 4297 L
6256 4297 mt 6229 4297 L
DO
 898 4297 mt 6256 4297 L
6256 4297 mt 6256 4297 L
SO
 898 4111 mt  925 4111 L
6256 4111 mt 6229 4111 L
DO
 898 4111 mt 6256 4111 L
6256 4111 mt 6256 4111 L
SO
 898 3979 mt  925 3979 L
6256 3979 mt 6229 3979 L
DO
 898 3979 mt 6256 3979 L
6256 3979 mt 6256 3979 L
SO
 898 3877 mt  925 3877 L
6256 3877 mt 6229 3877 L
DO
 898 3877 mt 6256 3877 L
6256 3877 mt 6256 3877 L
SO
 898 3793 mt  925 3793 L
6256 3793 mt 6229 3793 L
DO
 898 3793 mt 6256 3793 L
6256 3793 mt 6256 3793 L
SO
 898 3722 mt  925 3722 L
6256 3722 mt 6229 3722 L
DO
 898 3722 mt 6256 3722 L
6256 3722 mt 6256 3722 L
SO
 898 3661 mt  925 3661 L
6256 3661 mt 6229 3661 L
DO
 898 3661 mt 6256 3661 L
6256 3661 mt 6256 3661 L
SO
 898 3607 mt  925 3607 L
6256 3607 mt 6229 3607 L
DO
 898 3607 mt 6256 3607 L
6256 3607 mt 6256 3607 L
SO
 898 3559 mt  925 3559 L
6256 3559 mt 6229 3559 L
DO
 898 3559 mt 6256 3559 L
6256 3559 mt 6256 3559 L
SO
 898 3559 mt  952 3559 L
6256 3559 mt 6202 3559 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 594 3612 mt 
(10) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

 754 3523 mt 
(-5) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 898 3240 mt  925 3240 L
6256 3240 mt 6229 3240 L
DO
 898 3240 mt 6256 3240 L
6256 3240 mt 6256 3240 L
SO
 898 3054 mt  925 3054 L
6256 3054 mt 6229 3054 L
DO
 898 3054 mt 6256 3054 L
6256 3054 mt 6256 3054 L
SO
 898 2922 mt  925 2922 L
6256 2922 mt 6229 2922 L
DO
 898 2922 mt 6256 2922 L
6256 2922 mt 6256 2922 L
SO
 898 2820 mt  925 2820 L
6256 2820 mt 6229 2820 L
DO
 898 2820 mt 6256 2820 L
6256 2820 mt 6256 2820 L
SO
 898 2736 mt  925 2736 L
6256 2736 mt 6229 2736 L
DO
 898 2736 mt 6256 2736 L
6256 2736 mt 6256 2736 L
SO
 898 2666 mt  925 2666 L
6256 2666 mt 6229 2666 L
DO
 898 2666 mt 6256 2666 L
6256 2666 mt 6256 2666 L
SO
 898 2604 mt  925 2604 L
6256 2604 mt 6229 2604 L
DO
 898 2604 mt 6256 2604 L
6256 2604 mt 6256 2604 L
SO
 898 2550 mt  925 2550 L
6256 2550 mt 6229 2550 L
DO
 898 2550 mt 6256 2550 L
6256 2550 mt 6256 2550 L
SO
 898 2502 mt  925 2502 L
6256 2502 mt 6229 2502 L
DO
 898 2502 mt 6256 2502 L
6256 2502 mt 6256 2502 L
SO
 898 2502 mt  952 2502 L
6256 2502 mt 6202 2502 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 594 2555 mt 
(10) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

 754 2466 mt 
(-4) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 898 2184 mt  925 2184 L
6256 2184 mt 6229 2184 L
DO
 898 2184 mt 6256 2184 L
6256 2184 mt 6256 2184 L
SO
 898 1998 mt  925 1998 L
6256 1998 mt 6229 1998 L
DO
 898 1998 mt 6256 1998 L
6256 1998 mt 6256 1998 L
SO
 898 1866 mt  925 1866 L
6256 1866 mt 6229 1866 L
DO
 898 1866 mt 6256 1866 L
6256 1866 mt 6256 1866 L
SO
 898 1764 mt  925 1764 L
6256 1764 mt 6229 1764 L
DO
 898 1764 mt 6256 1764 L
6256 1764 mt 6256 1764 L
SO
 898 1680 mt  925 1680 L
6256 1680 mt 6229 1680 L
DO
 898 1680 mt 6256 1680 L
6256 1680 mt 6256 1680 L
SO
 898 1609 mt  925 1609 L
6256 1609 mt 6229 1609 L
DO
 898 1609 mt 6256 1609 L
6256 1609 mt 6256 1609 L
SO
 898 1548 mt  925 1548 L
6256 1548 mt 6229 1548 L
DO
 898 1548 mt 6256 1548 L
6256 1548 mt 6256 1548 L
SO
 898 1494 mt  925 1494 L
6256 1494 mt 6229 1494 L
DO
 898 1494 mt 6256 1494 L
6256 1494 mt 6256 1494 L
SO
 898 1446 mt  925 1446 L
6256 1446 mt 6229 1446 L
DO
 898 1446 mt 6256 1446 L
6256 1446 mt 6256 1446 L
SO
 898 1446 mt  952 1446 L
6256 1446 mt 6202 1446 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 594 1499 mt 
(10) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

 754 1410 mt 
(-3) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 898 1127 mt  925 1127 L
6256 1127 mt 6229 1127 L
DO
 898 1127 mt 6256 1127 L
6256 1127 mt 6256 1127 L
SO
 898  941 mt  925  941 L
6256  941 mt 6229  941 L
DO
 898  941 mt 6256  941 L
6256  941 mt 6256  941 L
SO
 898  809 mt  925  809 L
6256  809 mt 6229  809 L
DO
 898  809 mt 6256  809 L
6256  809 mt 6256  809 L
SO
 898  707 mt  925  707 L
6256  707 mt 6229  707 L
DO
 898  707 mt 6256  707 L
6256  707 mt 6256  707 L
SO
 898  623 mt  925  623 L
6256  623 mt 6229  623 L
DO
 898  623 mt 6256  623 L
6256  623 mt 6256  623 L
SO
 898  553 mt  925  553 L
6256  553 mt 6229  553 L
DO
 898  553 mt 6256  553 L
6256  553 mt 6256  553 L
SO
 898  491 mt  925  491 L
6256  491 mt 6229  491 L
DO
 898  491 mt 6256  491 L
6256  491 mt 6256  491 L
SO
 898  437 mt  925  437 L
6256  437 mt 6229  437 L
DO
 898  437 mt 6256  437 L
6256  437 mt 6256  437 L
SO
 898  389 mt  925  389 L
6256  389 mt 6229  389 L
DO
 898  389 mt 6256  389 L
6256  389 mt 6256  389 L
SO
 898  389 mt  952  389 L
6256  389 mt 6202  389 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 594  442 mt 
(10) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

 754  353 mt 
(-2) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 898  389 mt 6256  389 L
 898 4615 mt 6256 4615 L
 898 4615 mt  898  389 L
6256 4615 mt 6256  389 L
 898  389 mt  898  389 L
6256  389 mt 6256  389 L
gs 898 389 5359 4227 MR c np
893 872 893 811 893 586 893 546 893 504 893 482 898 305 7 MP stroke
DA
893 836 893 824 893 670 893 598 893 476 893 440 898 486 7 MP stroke
DD
893 795 893 823 893 751 893 646 893 450 893 454 898 458 7 MP stroke

gr 
DD
2297  274 mt 
(EPR4 at 4.4 a/symbol \(2 symbols/pw50\)) s
 540 2963 mt  -90 rotate
(ERROR RATE) s
90 rotate
3209 4944 mt 
(S\(AWG\)NR) s
gs 898 389 5359 4227 MR c np
714 0 1970 3138 2 MP stroke

gr 
2863 3191 mt 
(C2 metric) s
gs 898 389 5359 4227 MR c np
DA
714 0 1970 3456 2 MP stroke

gr 
DA
2863 3509 mt 
(C1 metric) s
gs 898 389 5359 4227 MR c np
SO
714 0 1970 3774 2 MP stroke

gr 
SO
2863 3827 mt 
(Euclidian metric) s

end

eplot
%%EndObject graph 1

epage
end

showpage

%%Trailer
%%BoundingBox:    51   197   550   604
%%Pages: 001
%%EOF
cleartomark
countdictstack exch sub { end } repeat
restore

%%EndDocument
FMENDEPSF
0 0 0 0 1 1 1 K
92 172 556 222 R
7 X
V
3 H
2 Z
N
133 582 506 615 R
V
N
0 0 0 1 0 0 0 K
0 21 Q
0 X
0 0 0 1 0 0 0 K
(EPR4 at 4.4) 125 592 T
1 23 Q
(a) 244.07 592 T
0 21 Q
(/ symbol \0502 symbols/PW50\051) 264.63 592 T
(S\050A) 244 188 T
(WG\051NR [dB]) 278.23 188 T
0 18 Q
(1) 238 208 T
(1) 246.68 208 T
(10) 163 208 T
(12) 312 208 T
(13) 386 208 T
(14) 460 208 T
0 0 0 0 1 1 1 K
47 211 94 624 R
7 X
0 0 0 0 1 1 1 K
V
N
0 0 0 1 0 0 0 K
0 X
0 0 0 1 0 0 0 K
(10) 62 573 T
0 14.4 Q
(-2) 82.02 580.2 T
0 18 Q
(10) 62 485 T
0 14.4 Q
(-3) 82.02 492.2 T
0 21 Q
(ERROR RA) 0 -270 56 331 TF
(TE) 0 -270 56 440.28 TF
0 0 0 0 1 1 1 K
152 255 354.88 361 R
7 X
0 0 0 0 1 1 1 K
V
0.5 H
N
0 0 0 1 0 0 0 K
152 255 354.88 361 R
0 X
0 0 0 1 0 0 0 K
N
J
159.96 345 222.81 345 2 L
J
159.96 345 165.71 345 2 L
N
[14.581 8.241 1.902 8.241] 14.581 I
165.71 345 217.05 345 2 L
N
J
217.05 345 222.81 345 2 L
N
J
159.96 309 222.81 309 2 L
J
159.96 309 163.71 309 2 L
N
[8.559 7.418] 8.559 I
163.71 309 219.05 309 2 L
N
J
219.05 309 222.81 309 2 L
N
J
159.96 273 222.81 273 2 L
N
2 F
(C2 metric) 231.56 337 T
(C1 metric) 230.76 302 T
(Euclidian metric) 231.56 268 T
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 18 Q
(10) 62 395.36 T
0 14.4 Q
(-4) 82.02 402.56 T
0 18 Q
(10) 62 306.36 T
0 14.4 Q
(-5) 82.02 313.56 T
0 18 Q
(10) 62 222.36 T
0 14.4 Q
(-6) 82.02 229.56 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1" 1
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Descend
%%Pages: 1
%%DocumentFonts: Helvetica
%%+ Bookman-LightItalic
%%+ Helvetica-Narrow
%%EOF
countdictstack InitDictCount sub { end } repeat
cleartomark
restore
grestore

%%EndDocument
 @endspecial 784 2432 a(Figure)31 b(6:)43 b(EPR4)33 b(detection)g
(results)g(at)f(4)p Fj(:)p Fq(4)p Fj(a=)p Fq(sym)m(b)s(ol.)855
4643 y @beginspecial 42 @llx 185 @lly 545 @urx 606 @ury
2370 @rwi @setspecial
%%BeginDocument: pr4two5.epsi
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 42 185 545 606
%%BeginPreview: 504 422 1 422
% 000000000000000000000ff03fc00000000000000000000000000000000000000c000018000000000000000000000300000300001fe0e18300000000000000
% 000000000000000000000ff83ff006000000001f000fe00000000c00000000000c00001800c3e003f800000000000300000300019ff0e1c30fe07c08000000
% 000000000000000000000c1c303006000003003f800fe00001f60c00000000000c0000180187f003f80000000000030000030001983861c30fe0fe0c000000
% 000000000000000000000c0c30100e0000030031800c000007fe0800000000000c000018018e3003000000000000030000030001181863c70c00c60c000000
% 000000000000000000000c0c30101e001f87c031800c00000f9e1803e1863f3c0fc0f818030c180300007c6187e783f01f031f03181863c60c01c604000000
% 000000000000000000000c0c303036001dc7c001800f80001e0c1807e1c63ffc0fe1fc1803001803e000fc7187ff83f83f833f03181863660f818306000000
% 000000000000000000000c1c3070360018c3000f800fe0001c0c100630c631c60c318c1803003003f800c6318638c30c31833182183833660fe18306000000
% 000000000000000000000ff83fe0660000c3000f800c6000380c100600cc31860c330618030060031800c0330630c30c60c330021ff036660c618306000000
% 000000000000000000000ff03ff0c6000fc30001c000700038183007c0cc31860c3306180301c0001c00f8330630c30c60c33e061fe0362c00718306000000
% 000000000000000000000c003070ff801cc30060c000300030183000f0e831860c330618030780000c001e3a0630c30c60c307861800343c00318306000000
% 000000000000000000000c003030ff8038c30060c018300030182000307831860c330618030600060c00061e0630c30c60c3018418003c3c1830c606000000
% 000000000000000000000c003030060031c30071801c600018396006307831860c338c18030c00071800c61e0630c30c7183318c18001c3c1c60ce06000000
% 000000000000000000000c00301006003be3803f830fe0001cff6007f07031860fe1fc18030ff8c3f800fe1c0630c3f83f833f8c18001c1c0fe0fe06000000
% 000000000000000000000c00301806001fe3c01f030fc00007de4007e03031860fc0f818030ff8c3f000fc0c0630c3f01f033f08180018180fc07c04000000
% 000000000000000000000000000000000000000000000000000000000030000000000000010000000000000c00000000000000000000000000000004000000
% 00000000000000000000000000000000000000000000000000000000006000000000000001800000000000180000000000000000000000000000000c000000
% 0000000000000000000000000000000000000000000000000000000000e0000000000000008000000000003800000000000000000000000000000008000000
% 0000000000000000000000000000000000000000000000000000000000c000000000000000c000000000003000000000000000000000000000000018000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000001c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000001c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000040300040ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% 000000c0f870408010000000000200000000008000000000100000000004000000000080000000002000000000040000000001000000000020000000000801
% 000001c0cc00408018000000000200000000008000000000100000000004000000000080000000002000000000040000000001000000000020000000000801
% 000003c08c00408017000000000200000000008000000000100000000004000000000080000000002000000000040000000001000000000020000000000801
% 000000c18400408010800000000200000000008000000000100000000004000000000080000000002000000000040000000001000000000020000000000801
% 000000c1840000f47231188c46231188c46231988c46231198c46231188c46231188c4e231188c46231188c46235188c46231188c4623118ac46231188cc67
% 000000c1840000801f018000000200000000008000000000100000000004000000000080000000002000000000040000000001000000000020000000000801
% 000000c18400008000f07000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000c184000080000f0800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000c08c0000800000f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000c0f80000f472311fbc46231188c46231988c46231198c46231188c46231188c4e231188c46231188c46235188c46231188c4623118ac46231188cc67
% 000000c078000080100000f7000200000000008000000000100000000004000000000080000000002000000000040000000001000000000020000000000801
% 00000000000000800000000f800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000780000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000078000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008010000000007a00000000008000000000100000000004000000000080000000002000000000040000000001000000000020000000000801
% 00000000000000f46231188c46279188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c467
% 000000000000008000000000000078000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000800000000000003f800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008010000000000206780000008000000000100000000004000000000080000000002000000000040000000001000000000020000000000801
% 000000000000008010000000000200078000008000000000100000000004000000000080000000002000000000040000000001000000000020000000000801
% 0000000000000080000000000000000c7800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000038780000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000f46231188c46231188c47a31188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c467
% 000000000000008010000000000200000007808000000000100000000004000000000080000000002000000000040000000001000000000020000000000801
% 0000000000000080000000000000000000c0780000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000038078000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000004007000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008010000000000200000000008e00000000100000000004000000000080000000002000000000040000000001000000000020000000000801
% 0000000000000080100000000002000000001c81c0000000100000000004000000000080000000002000000000040000000001000000000020000000000801
% 000000000000008000000000000000000000038038000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000f46231188c46231188c46231198dc6231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c467
% 0000000000000080100000000002000000000080f0380000100000000004000000000080000000002000000000040000000001000000000020000000000801
% 000000000000008000000000000000000000000000070000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000800000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 0000000000000080000000000000000000000000003c1c00000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008010000000000200000000008000030380100000000004000000000080000000002000000000040000000001000000000020000000000801
% 000000000000008010000000000200000000008000000070100000000004000000000080000000002000000000040000000001000000000020000000000801
% 00000000000000800000000000000000000000000000030c000000000000000000000000000000000000000000000000000000000000000000000000000001
% 0000000000000080000000000000000000000000000000e3800000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000700000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000f47231188c46231188c46231988c462311dec46231188c46231188c4e231188c46231188c46235188c46231188c4623118ac46231188cc67
% 00000000000000800000000000000000000000000000000039c000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000063800000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000700000000000000000000000000000000000000000000000000000000000000000000000001
% 0000000000000080100000000002000000000080000000001007e0000004000000000080000000002000000000040000000001000000000020000000000801
% 0000000000000080100000000002000000000080000000001000dc000004000000000080000000002000000000040000000001000000000020000000000801
% 000000000000008000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000000000001
% 0000000000000080000000000000000000000000000000000000003c0000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008010000000000200000000008000000000100000078004000000000080000000002000000000040000000001000000000020000000000801
% 000000000000008000000000000000000000000000000000000000007000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000000001
% 0000000000000080000000000000000000000000000000000000000001c0000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000f47231188c46231188c46231988c46231198c4623118bc46231188c4e231188c46231188c46235188c46231188c4623118ac46231188cc67
% 000000000000008010000000000200000000008000000000100000000007800000000080000000002000000000040000000001000000000020000000000801
% 000000000000008000000000000000000000000000000000000000000000f00000000000000000000000000000000000000000000000000000000000000001
% 0000000000000080000000000000000000000000000000000000000000001e0000000000000000000000000000000000000000000000000000000000000001
% 00000000000000800000000000000000000000000000000000000000000001c000000000000000000000000000000000000000000000000000000000000001
% 000000000000008010000000000200000000008000000000100000000004003c00000080000000002000000000040000000001000000000020000000000801
% 000000000000008000000000000000000000000000000000000000000000000780000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000070000000000000000000000000000000000000000000000000000000000001
% 00000000000000800000000000000000000000000000000000000000000000000f000000000000000000000000000000000000000000000000000000000001
% 000000000000008010000000000200000000008000000000100000000004000001e00080000000002000000000040000000001000000000020000000000801
% 0000000000000080100000000002000000000080000000001000000000040000003e0080000000002000000000040000000001000000000020000000000801
% 00000000000000800000000000000000000000000000000000000000000000000001c000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000007c00000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000001f80000000000000000000000000000000000000000000000000000001
% 0000000000000080100000000002000000000080000000001000000000040000000002f0000000002000000000040000000001000000000020000000000801
% 00000000000000800000000000000000000000000000000000000000000000000000000f000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000006e00000000000000000000000000000000000000000000000000001
% 000000000000008010000000000000000000000000000000000000000000000000000001de0000000000000000000000000000000000000000000000000001
% 00000000000000f47231188c46231188c46231988c46231198c46231188c46231188c4e231d88c46231188c46235188c46231188c4623118ac46231188cc67
% 000000000000008010000000000200000000008000000000100000000004000000000080003800002000000000040000000001000000000020000000000801
% 00000000000000800180000000000000000000000000000000000000000000000000000000e780000000000000000000000000000000000000000000000001
% 000000000000008000600000000000000000000000000000000000000000000000000000001c70000000000000000000000000000000000000000000000001
% 00000000000000800018000000000000000000000000000000000000000000000000000000000f000000000000000000000000000000000000000000000001
% 000000000000008010000000000200000000008000000000100000000004000000000080000000e02000000000040000000001000000000020000000000801
% 00000000000000800000800000000000000000000000000000000000000000000000000000000e1e0000000000000000000000000000000000000000000001
% 00000000000000800000000000000000000000000000000000000000000000000000000000000181c000000000000000000000000000000000000000000001
% 000000000000008000000800000000000000000000000000000000000000000000000000000000003c00000000000000000000000000000000000000000001
% 00000000000000801000040000020000000000800000000010000000000400000000008000000001a3c0000000040000000001000000000020000000000801
% 00000000000000801000030000020000000000800000000010000000000400000000008000000000703c000000040000000001000000000020000000000801
% 0000000000000080000000c0000000000000000000000000000000000000000000000000000000000803800000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000780000000000000000000000000000000000000001
% 00000000000000800000000400000000000000000000000000000000000000000000000000000000001c078000000000000000000000000000000000000001
% 000000000000008010000000000200000000008000000000100000000004000000000080000000002003007800040000000001000000000020000000000801
% 000000000000008000000000400000000000000000000000000000000000000000000000000000000000000780000000000000000000000000000000000001
% 000000000000008000000000300000000000000000000000000000000000000000000000000000000000030078000000000000000000000000000000000001
% 0000000000000080000000000c000000000000000000000000000000000000000000000000000000000000e007000000000000000000000000000000000001
% 000000000000008010000000000200000000008000000000100000000004000000000080000000002000001000f40000000001000000000020000000000801
% 0000000000000080100000000002000000000080000000001000000000040000000000800000000020000000400f0000000001000000000020000000000801
% 00000000000000800000000000600000000000000000000000000000000000000000000000000000000000003800f000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000006000f00000000000000000000000000000001
% 0000000000000080000000000002000000000000000000000000000000000000000000000000000000000000000000f0000000000000000000000000000001
% 00000000000000801000000000038000000000800000000010000000000400000000008000000000200000000006000f000001000000000020000000000801
% 00000000000000800000000000006000000000000000000000000000000000000000000000000000000000000001c000e00000000000000000000000000001
% 000000000003c080000000000000000000000000000000000000000000000000000000000000000000000000000020001e0000000000000000000000000001
% 00000000000660800000000000000000000000000000000000000000000000000000000000000000000000000000008001e000000000000000000000000001
% 000000000006208010000000000203000000008000000000100000000004000000000080000000002000000000040070001e01000000000020000000000801
% 00000000000060801000000000020000000000800000000010000000000400000000008000000000200000000004000c0001e1000000000020000000000801
% 000000806000c0800000000000000010000000000000000000000000000000000000000000000000000000000000000000001e000000000000000000000001
% 00000181f0e38080000000000000000c00000000000000000000000000000000000000000000000000000000000000000c0001e00000000000000000000001
% 00000381980700fc6231188c4623118bc46231188c46231188c46231188c46231188c46231188c46231188c46231188c47a3119fc46231188c46231188c47f
% 00000781180600801000000000020000000000800000000010000000000400000000008000000000200000000004000000400100f800000020000000000801
% 000001830807e08000000000000000001000000000000000000000000000000000000000000000000000000000000000000100000780000000000000000001
% 0000018308000080000000000000000010000000000000000000000000000000000000000000000000000000000000000000e000007c000000000000000001
% 000001830800008000000000000000000000000000000000000000000000000000000000000000000000000000000000000018000003e00000000000000001
% 00000183080000f47231188c46231188c5e231988c46231198c46231188c46231188c4e231188c46231188c46235188c46231188c4623f18ac46231188cc67
% 00000183080000801000000000020000006000800000000010000000000400000000008000000000200000000004000000000118000000f020000000000801
% 000001811800008000000000000000000018000000000000000000000000000000000000000000000000000000000000000000070000000f80000000000001
% 00000181f00000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000800000007c000000000001
% 00000180f000008000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000200000003c00000000001
% 000c0000000000f47231188c46231188c46231988c46231198c46231188c46231188c4e231188c46231188c46235188c46231188c5e23118ac7e231188cc67
% c30c0000000000800000000000000000000008000000000000000000000000000000000000000000000000000000000000000000003000000001f000000001
% c30c00000000008000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000f80000001
% c30c00000000008000000000000000000000030000000000000000000000000000000000000000000000000000000000000000000000300000000078000001
% c30c0000000000801000000000020000000000c0000000001000000000040000000000800000000020000000000400000000010000000e0020000007c00801
% c30c000000000080100000000002000000000080000000001000000000040000000000800000000020000000000400000000010000000100200000003e0801
% c30c0000000000f46231188c46231188c462311c8c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231189e467
% c30c00000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000700000000001801
% fffc000000000080000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000e0000000000001
% fffc00000000008010000000000200000000008030000000100000000004000000000080000000002000000000040000000001000000000020000000000801
% 000000000000008000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000400000000001
% 000000000000008000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000000000000380000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000001
% 00000000000000f47231188c46231188c46231988c66231198c46231188c46231188c4e231188c46231188c46235188c46231188c4623118ac46231188cc67
% c00000000000008010000000000200000000008000000000100000000004000000000080000000002000000000040000000001000000000020000e00000801
% c000000000000080000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000001c0000001
% c00000000000008000000000000000000000000000018000000000000000000000000000000000000000000000000000000000000000000000000000000001
% c00000000000008000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000800001
% fffc00000000008010000000000200000000008000000000100000000004000000000080000000002000000000040000000001000000000020000000700801
% fffc00000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080001
% c00000000000008000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000000000000000000001
% c0000000000000f46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188dc67
% c00000000000008010000000000200000000008000000010100000000004000000000080000000002000000000040000000001000000000020000000000801
% c0000000000000801000000000020000000000800000000c100000000004000000000080000000002000000000040000000001000000000020000000000801
% 000000000000008000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000000000000000001
% 001c00000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00fc00000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 07f000000000008010000000000200000000008000000000100000000004000000000080000000002000000000040000000001000000000020000000000801
% 7fc000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% f8c000000000008000000000000000000000000000000000018000000000000000000000000000000000000000000000000000000000000000000000000001
% e0c000000000008000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000001
% 3fc00000000000f47231188c46231188c46231988c46231198dc6231188c46231188c4e231188c46231188c46235188c46231188c4623118ac46231188cc67
% 1fe000000000008010000000000200000000008000000000100000000004000000000080000000002000000000040000000001000000000020000000000801
% 03fc00000000008000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000000000001
% 007c00000000008000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000000000001
% 000400000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000801000000000020000000000800000000010000c000004000000000080000000002000000000040000000001000000000020000000000801
% 000000000000008000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000000000001
% 000400000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 7efc00000000008010000000000200000000008000000000100000040004000000000080000000002000000000040000000001000000000020000000000801
% 67f000000000008010000000000200000000008000000000100000000004000000000080000000002000000000040000000001000000000020000000000801
% c3c000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% c18000000000008000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000001
% c1800000000000f46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c467
% c18000000000008010000000000200000000008000000000100000000404000000000080000000002000000000040000000001000000000020000000000801
% c18000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% c18000000000008000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000001
% fffc00000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% fffc00000000008010000000000200000000008000000000100000000004000000000080000000002000000000040000000001000000000020000000000801
% 000000000000008010000000000200000000008000000000100000000007000000000080000000002000000000040000000001000000000020000000000801
% 000000000000008000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008010000000000200000000008000000000100000000004020000000080000000002000000000040000000001000000000020000000000801
% 000000000000008000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000001
% 000000000000008010000000000200000000008000000000100000000004000800000080000000002000000000040000000001000000000020000000000801
% 000000000000008010000000000200000000008000000000100000000004000600000080000000002000000000040000000001000000000020000000000801
% 000400000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 7efc00000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 67f00000000000f46231188c46231188c46231188c46231188c46231188c46233188c46231188c46231188c46231188c46231188c46231188c46231188c467
% c3c000000000008010000000000200000000008000000000100000000004000000000080000000002000000000040000000001000000000020000000000801
% c18000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% c18000000000008000000000000000000000000000000000000000000000000001800000000000000000000000000000000000000000000000000000000001
% c18000000000008000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000001
% c18000000000008010000000000200000000008000000000100000000004000000100080000000002000000000040000000001000000000020000000000801
% c18000000000008010000000000200000000008000000000100000000004000000000080000000002000000000040000000001000000000020000000000801
% fffc00000000008000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000001
% fffc00000000008000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008010000000000200000000008000000000100000000004000000001880000000002000000000040000000001000000000020000000000801
% 000000000000008000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 0fe000000000008010000000000200000000008000000000100000000004000000000080000000002000000000040000000001000000000020000000000801
% 3ff000000000008010000000000200000000008000000000100000000004000000000098000000002000000000040000000001000000000020000000000801
% 703800000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 601c00000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% c00c00000000008000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000001
% c00c00000000008010000000000200000000008000000000100000000004000000000080200000002000000000040000000001000000000020000000000801
% c00c00000000008000000000000000000000000000000000000000000000000000000000180000000000000000000000000000000000000000000000000001
% c00c00000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% c00c00000000008000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000001
% 601800000000008010000000000200000000008000000000100000000004000000000080008000002000000000040000000001000000000020000000000801
% 787800000003c08010000000000200000000008000000000100000000004000000000080000000002000000000040000000001000000000020000000000801
% 3ff000000006608000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000001
% 0fc000000006608000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000001
% 000000000000408000000000000000000000000000000000000000000000000000000000000180000000000000000000000000000000000000000000000001
% 000000806001c08010000000000200000000008000000000100000000004000000000080000000002000000000040000000001000000000020000000000801
% 00000181f0e0608000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000403819804208000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000001
% 7efc07811806608000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 67f001830803c0fc7231188c46231188c46231988c46231198c46231188c46231188c4e231188cc6231188c46235188c46231188c4623118ac46231188cc7f
% c3c001830800008010000000000200000000008000000000100000000004000000000080000000602000000000040000000001000000000020000000000801
% c18001830800008000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000001
% c18001830800008000000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000001
% c1800183080000f46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c467
% c1800181180000801000000000020000000000800000000010000000000400000000008000000000e000000000040000000001000000000020000000000801
% c1800181f000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% fffc0180f000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% fffc00000000008000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000001
% 000000000000008010000000000200000000008000000000100000000004000000000080000000002300000000040000000001000000000020000000000801
% 00000000000000f47231188c46231188c46231988c46231198c46231188c46231188c4e231188c46239188c46235188c46231188c4623118ac46231188cc67
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000400000000008000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000001
% 7efc00000000008010000000000200000000008000000000100000000004000000000080000000002000000000040000000001000000000020000000000801
% 67f000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% c3c00000000000f46231188c46231188c46231188c46231188c46231188c46231188c46231188c462311e8c46231188c46231188c46231188c46231188c467
% c18000000000008000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000001
% c180000000000080100000000002000000000080000000001000000000040000000000800000000020000c0000040000000001000000000020000000000801
% c18000000000008010000000000200000000008000000000100000000004000000000080000000002000000000040000000001000000000020000000000801
% c18000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% c1800000000000800000000003ffffffffffffffffffffffffffffffffffffffffffffffff0000000000004000000000000000000000000000000000000001
% fffc00000000008000000000020000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000001
% fffc0000000000f47231188c46000000000000000000000000000000000000000000000001188c46231188c46235188c46231188c4623118ac46231188cc67
% 000000000000008000000000020000000000000000000000000000000000000000000000010000000000000600000000000000000000000000000000000001
% 000000000000008000000000020000000000000000000000000000000000000000000000010000000000000180000000000000000000000000000000000001
% 000000000000008000000000020000000000000000000000000000000000000000000000010000000000000040000000000000000000000000000000000001
% 000000000000008010000000020000000000000000000000000000000000000000000000010000002000000000040000000001000000000020000000000801
% 000c00000000008010000000020000000000000000000000000000000000000000000000010000002000000000040000000001000000000020000000000801
% c30c00000000008000000000020000000000000000000000000000000000000000000000010000000000000004000000000000000000000000000000000001
% c30c00000000008000000000020000000000000000000380000000000000000000000000010000000000000000000000000000000000000000000000000001
% c30c0000000000f46231188c460000000000000000000fc0e0000000000080000000000001188c46231188c46271188c46231188c46231188c46231188c467
% c30c00000000008010000000020000000000000000001ce1f00000000400800000000000010000002000000000240000000001000000000020000000000801
% c30c00000000008000000000020000000000000000001861980000000400000000000000010000000000000000180000000000000000000000000000000001
% c30c000000000080000000000200000000000000000010231801cc07040c070000000000010000000000000000040000000000000000000000000000000001
% c30c000000000080000000000200000000000000000030031807fe0f8f3c8fc000000000010000000000000000000000000000000000000000000000000001
% fffc000000000080100000000200000000000000000030031806730cc4308cc000000000010000002000000000040000000001000000000020000000000801
% fffc000000000080100000000207f01c07ffe0381fc0300018066318c420884000000000010000002000000000046000000001000000000020000000000801
% 00000000000000800000000002000000000000000000300030046318c420980000000000010000000000000000000000000000000000000000000000000001
% 0000000000000080000000000200000000000000000030207004631fc420980000000000010000000000000000000400000000000000000000000000000001
% 000000000000008000000000020000000000000000001021c00463180420980000000000010000000000000000000300000000000000000000000000000001
% 00000000000000f47231188c46000000000000000000186180046318442098400000000001188c46231188c46235188c46231188c4623118ac46231188cc67
% 00000000000000800000000002000000000000000000186300046308c42088c000000000010000000000000000000060000000000000000000000000000001
% 000000000000008000000000020000000000000000000cc3f804630dc6208cc000000000010000000000000000000000000000000000000000000000000001
% 000000000000008000000000020000000000000000000fc3f804630f87208f8000000000010000000000000000000000000000000000000000000000000001
% 000000000000008010000000020000000000000000000000000000000000000000000000010000002000000000040000000001000000000020000000000801
% 000000000000008010000000020000000000000000000000000000000000000000000000010000002000000000040000000001000000000020000000000801
% 000000000000008000000000020000000000000000000000000000000000000000000000010000000000000000000000200000000000000000000000000001
% 000000000000008000000000020000000000000000000000000000000000000000000000010000000000000000000000100000000000000000000000000001
% 0000000000000080000000000200000000000000000000000000000000000000000000000100000000000000000000000c0000000000000000000000000001
% 000000000000008010000000020000000000000000000000000000000000000000000000010000002000000000040000020001000000000020000000000801
% 000000000000008000000000020000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000001
% 000000000000008000000000020000000000000000000000000000000000000000000000010000000000000000000000002000000000000000000000000001
% 000000000000008000000000020000000000000000000000000000000000000000000000010000000000000000000000002000000000000000000000000001
% 00000000000000f47231188c46000000000000000000000000000000000000000000000001188c46231188c46235188c46231188c4623118ac46231188cc67
% 000000000000008010000000020000000000000000000000000000000000000000000000010000002000000000040000000201000000000020000000000801
% 000000000000008000000000020000000000000000000000000000000000000000000000010000000000000000000000000180000000000000000000000001
% 000000000000008000000000020000000000000000000000000000000000000000000000010000000000000000000000000040000000000000000000000001
% 000000000000008000000000020000000000000000000000000000000000000000000000010000000000000000000000000020000000000000000000000001
% 000000000000008010000000020000000000000000000000000000000000000000000000010000002000000000040000000001000000000020000000000801
% 000000000000008000000000020000000000000000000000000000000000000000000000010000000000000000000000000002000000000000000000000001
% 000000000000008000000000020000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000001
% 000000000000008000000000020000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000001
% 000000000000008010000000020000000000000000000000000000000000000000000000010000002000000000040000000001200000000020000000000801
% 000000000000008010000000020000000000000000000000000000000000000000000000010000002000000000040000000001180000000020000000000801
% 000000000000008000000000020000000000000000000700000000000000000000000000010000000000000000000000000000060000000000000000000001
% 000000000000008000000000020000000000000000001f80400000000001000000000000010000000000000000000000000000000000000000000000000001
% 0000000000000080000000000200000000000000000039c0c00000000401000000000000010000000000000000000000000000000000000000000000000001
% 0000000000000080100000000200000000000000000030c0c00000000400000000000000010000002000000000040000000001002000000020000000000801
% 000000000000008000000000020000000000000000002043c001cc0e04180e0000000000010000000000000000000000000000000000000000000000000001
% 000000000000008000000000020000000000000000006003c007fe1f0f791f8000000000010000000000000000000000000000000000000000000000000001
% 000000000000008000000000020000000000000000006000c00673198461198000000000010000000000000000000000000000000300000000000000000001
% 00000000000000f47231188c460000000000000000006000c0066331844110800000000001188c46231188c46235188c46231188c4e23118ac46231188cc67
% 0000000000000080100000000207c0ff81ff03ff07c06000c00463318441300000000000010000002000000000040000000001000060000020000000000801
% 000000000000008000000000020000000000000000006040c004633f8441300000000000010000000000000000000000000000000000000000000000000001
% 000000000000008000000000020000000000000000002040c00463300441300000000000010000000000000000000000000000000000000000000000000001
% 0000000000000080000000000200000000000000000030c0c00463308441308000000000010000000000000000000000000000000002000000000000000001
% 0000000000000080100000000200000000000000000030c0c00463118441118000000000010000002000000000040000000001000000000020000000000801
% 000000000000008000000000020000000000000000001980c004631b8641198000000000010000000000000000000000000000000000000000000000000001
% 000000000000008000000000020000000000000000001f80c004631f07411f0000000000010000000000000000000000000000000000300000000000000001
% 0000000000000080000000000200000000000000000000000000000000000000000000000100000000000000000000000000000000000c0000000000000001
% 000000000000008010000000020000000000000000000000000000000000000000000000010000002000000000040000000001000000020020000000000801
% 000000000000008010000000020000000000000000000000000000000000000000000000010000002000000000040000000001000000000020000000000801
% 000000000000008000000000020000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000001
% 000000000000008000000000020000000000000000000000000000000000000000000000010000000000000000000000000000000000003000000000000001
% 000000000000008000000000020000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000001
% 000000000000008010000000020000000000000000000000000000000000000000000000010000002000000000040000000001000000000220000000000801
% 000000000000008000000000020000000000000000000000000000000000000000000000010000000000000000000000000000000000000100000000000001
% 0000000000000080000000000200000000000000000000000000000000000000000000000100000000000000000000000000000000000000c0000000000001
% 000000000000008000000000020000000000000000000000000000000000000000000000010000000000000000000000000000000000000020000000000001
% 000000000000008010000000020000000000000000000000000000000000000000000000010000002000000000040000000001000000000030000000000801
% 000000000000008010000000020000000000000000000000000000000000000000000000010000002000000000040000000001000000000020000000000801
% 000000000000008000000000020000000000000000000000000000000000000000000000010000000000000000000000000000000000000003000000000001
% 000000000000008000000000020000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000001
% 000000000000008000000000020000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000001
% 000000000000c08010000000020000000000000000000000000000000000000000000000010000002000000000040000000001000000000020180000000801
% 000000000000c08000000000020000000000000000000000000000000000000000000000010000000000000000000000000000000000000000040000000001
% 000000000001c08000000000020000000000000000000000000000000000000000000000010000000000000000000000000000000000000000030000000001
% 000000000003c08000000000020000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000001
% 000000000006c08010000000020000000000000000000000000000000000000000000000010000002000000000040000000001000000000020000000000801
% 0000008060e6c08010000000020000000000000000000000000000000000000000000000010000002000000000040000000001000000000020001000000801
% 00000181f007e08000000000020000000000000000001fc0000310310000000000008010010000000000000000000000000000000000000000000000000001
% 000003819800c08000000000020000000000000000001fc0000310310000000000008010010000000000000000000000000000000000000000000000000001
% 000007811800c0fc6231188c46000000000000000000100000030030000000000000800001188c46231188c46231188c46231188c46231188c46239188c47f
% 00000183080000801000000002000000000000000000100230f313f11e0b802ef0f1e511e10000002000000000040000000001000000000020000040000801
% 00000183080000800000000002000000000000000000100231fb13f13f0f803ff1f1e713f10000000000000000000000000000000000000000000030000001
% 000001830800008000000000020000000000000000001f82319b1631310cc03311188413310000000000000000000000000000000000000000000000000001
% 000001830800008000000000020000000000000000001f82331b16310108c02313188416310000000000000000000000000000000000000000000000000001
% 00000183080000f47231188c460000000000000000001002330316310f08c02313f8841601188c46231188c46235188c46231188c4623118ac46231188cc67
% 0000018118000080100000000207ffffffffffffffc01002330316313f08c02313f88416010000002000000000040000000001000000000020000000000801
% 00000181f000008000000000020000000000000000001002331b16313108c02313008416310000000000000000000000000000000000000000000000000001
% 00000180f000008000000000020000000000000000001002311b16313308c02311188412310000000000000000000000000000000000000000000000180001
% 000000000000008000000000020000000000000000001fc3719b17713708c02311b08413310000000000000000000000000000000000000000000000060001
% 00000000000000f47231188c460000000000000000001fc3f1f313f13d88c02311f0e413e1188c46231188c46235188c46231188c4623118ac46231189cc67
% 000000000000008000000000020000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000001
% 000000000000008000000000020000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000001
% 000000000000008000000000020000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000001001
% 000000000000008010000000020000000000000000000000000000000000000000000000010000002000000000040000000001000000000020000000000801
% 000000000000008010000000020000000000000000000000000000000000000000000000010000002000000000040000000001000000000020000000000801
% 00000000000000f46231188c46000000000000000000000000000000000000000000000001188c46231188c46231188c46231188c46231188c46231188c467
% 000000000000008000000000020000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000001
% 000000000000008000000000020000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000001
% 000000000000008010000000020000000000000000000000000000000000000000000000010000002000000000040000000001000000000020000000000801
% 000000000000008000000000020000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000001
% 000000000000008000000000020000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000001
% 000000000000008000000000020000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000001
% 00000000000000f47231188c46000000000000000000000000000000000000000000000001188c46231188c46235188c46231188c4623118ac46231188cc67
% 00000000000000801000000003ffffffffffffffffffffffffffffffffffffffffffffffff0000002000000000040000000001000000000020000000000801
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008010000000000200000000008000000000100000000004000000000080000000002000000000040000000001000000000020000000000801
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000f46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c467
% 000000000000008010000000000200000000008000000000100000000004000000000080000000002000000000040000000001000000000020000000000801
% 000000000000008010000000000200000000008000000000100000000004000000000080000000002000000000040000000001000000000020000000000801
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008010000000000200000000008000000000100000000004000000000080000000002000000000040000000001000000000020000000000801
% 000000000000008010000000000200000000008000000000100000000004000000000080000000002000000000040000000001000000000020000000000801
% 000000000000008010000000000200000000008000000000100000000004000000000080000000002000000000040000000001000000000020000000000801
% 000000000000008010000000000200000000008000000000100000000004000000000080000000002000000000040000000001000000000020000000000801
% 000000000000008010000000000200000000008000000000100000000004000000000080000000002000000000040000000001000000000020000000000801
% 00000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000020100000002018000000100c000000010020000000103f00000004030000000083f8000000201800000008060000000300c0000000c0100
% 0000000000000006030000000607c000000303e000000030060000000303f0000000c078000000183f8000000607c000000181f0000000f83e0000003e0300
% 000000000000000e070000000e046000000702300000007006000000070300000001c0cc00000038008000000e046000000381180000008c33000000230700
% 000000000000001e0f0000001e0c2000000f0230000000f01e0000000f0200000003c08c00000078010000001e046000000783180000018423000000610f00
% 000000000000000603000000060c200000030230000000301e0000000302c0000000c080000000180300000006066000000183080000018461000000610300
% 00000000000000060300000006006000000300e000000030160000000303e0000000c1f800000018030000000607c000000183180000000c61000000030300
% 0000000000000006030000000600c000000300f00000003026000000030230000000c1cc00000018060000000607e000000181180000001861000000060300
% 00000000000000060300000006038000000300300000003066000000030010000000c1840000001806000000060c6000000181f800000070610000001c0300
% 0000000000000006030000000606000000030610000000307f000000030010000000c184000000180c000000060c200000018008000000c061000000300300
% 000000000000000603000000060c000000030610000000307f000000030630000000c084000000180c000000060c2000000183180000018023000000600300
% 000000000000000603000000060fe000000303f000000030060000000303f0000000c0fc000000180c0000000607e000000181f0000001fc3e0000007f0300
% 000000000000000603000000060fe000000301e000000030060000000303e0000000c07800000018080000000603c000000181e0000001fc1e0000007f0300
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000007c0000c0e18300f8000c040ff000700c3f81e00000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000fe0180e0e1c303fc040e040ffc00600c3fe0600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000001870301e061c3078e060e040c0c00600c30e0600000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000018303036063c70703060f040c0400600c3060600000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000018006036063c60e03020f840c040061ec3060600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000001c006033063660c00030d840c0c0063fc3060600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000fc06073033660c00030dc40c1c00631c3fc0600000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000001f06073036660c1f830ce40ff800660c3fe0600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000078607f8362c0c1f830c640ffc00660c30f0600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000003018607f8343c0e01830c740c1c00660c3030600000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000381860e183c3c0603830c3c0c0c00660c3030600000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000183860c1c1c3c0707830c1c0c0c00671c3070600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000001ff060c0c1c1c03ff830c1c0c040063fc3fe0600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000fe061c0c181801f9820c0c0c060063ec3fe0600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000200000000000002000000000060000000600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000300000000000006000000000060000000600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000100000000000004000000000060000000600000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000018000000000000c000000000070000001e00000000000000000000000000000000000000
%%EndImage
%%EndPreview
/InitDictCount countdictstack def
gsave
save
mark
newpath
/showpage {} def
%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 { } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	
	
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 612 792 0 1 6 FMDOCUMENT
0 0 /Helvetica FMFONTDEFINE
1 0 /Bookman-LightItalic FMFONTDEFINE
2 0 /Helvetica-Narrow FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "1" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 0 0 0 1 1 1]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 54 199 539 598 485 399 60 196.5 FMBEGINEPSF
%%BeginDocument: /home/kavcic/tex/papers/TransMAG97/p4two5.epsi
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 54 199 539 598
save
countdictstack
mark
newpath
/showpage {} def
%!PS-Adobe-2.0 
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: pr4two5.ps
%%CreationDate: 04/28/97  01:31:40
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Pages: (atend)
%%BoundingBox: (atend)
%%EndComments

%%BeginProlog

% MathWorks dictionary
/MathWorks 150 dict begin

% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef

% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
/rm /rmoveto ldef
/rl /rlineto ldef
/s /show ldef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef

% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef

% orientation switch
/portraitMode 	0 def
/landscapeMode 	1 def

% coordinate system mappings
/dpi2point 0 def

% font control
/FontSize 0 def
/FMS {
	/FontSize xstore		%save size off stack
	findfont
	[FontSize 0 0 FontSize neg 0 0]
	makefont
	setfont
	}bdef

/reencode {
exch dup where
{pop load} {pop StandardEncoding} ifelse
exch
dup 3 1 roll
findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def
  currentdict
end
definefont pop
} bdef

/isroman {
findfont /CharStrings get
/Agrave known
} bdef

/FMSR {
3 1 roll 1 index
dup isroman
{reencode} {pop pop} ifelse
exch FMS
} bdef

/csm {
	1 dpi2point div -1 dpi2point div scale
	neg translate
	landscapeMode eq {90 rotate} if
	} bdef

% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4 dpi2point mul] 0 setdash } bdef

% macros for lines and objects
/L {
	lineto
	stroke
	} bdef
/MP {
	3 1 roll moveto
	1 sub {rlineto} repeat
	} bdef
/AP {
	{rlineto} repeat
	} bdef
/PP {
	closepath fill
	} bdef
/DP {
	closepath stroke
	} bdef
/MR {
	4 -2 roll moveto
	dup  0 exch rlineto
	exch 0 rlineto
	neg  0 exch rlineto
	closepath
	} bdef
/FR {
	MR stroke
	} bdef
/PR {
	MR fill
	} bdef
/L1i {
	{ currentfile picstr readhexstring pop } image
	} bdef

/tMatrix matrix def
/MakeOval {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 0 360 arc
	tMatrix setmatrix
	} bdef
/FO {
	MakeOval
	stroke
	} bdef
/PO {
	MakeOval
	fill
	} bdef

/PD {
	2 copy moveto lineto stroke
	} bdef


currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    51   179   543   604
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: graph1 1
bplot

/dpi2point 12 def
portraitMode 0216 7344 csm

  406    92  5899  5095 MR c np
76 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

1 j
c1
   0    0 6914 5187 PR
6 w
DO
4 w
c0
1026 4615 mt 1026  389 L
1026  389 mt 1026  389 L
1536 4615 mt 1536  389 L
1536  389 mt 1536  389 L
2046 4615 mt 2046  389 L
2046  389 mt 2046  389 L
2556 4615 mt 2556  389 L
2556  389 mt 2556  389 L
3067 4615 mt 3067  389 L
3067  389 mt 3067  389 L
3577 4615 mt 3577  389 L
3577  389 mt 3577  389 L
4087 4615 mt 4087  389 L
4087  389 mt 4087  389 L
4598 4615 mt 4598  389 L
4598  389 mt 4598  389 L
5108 4615 mt 5108  389 L
5108  389 mt 5108  389 L
5618 4615 mt 5618  389 L
5618  389 mt 5618  389 L
6128 4615 mt 6128  389 L
6128  389 mt 6128  389 L
 898 4120 mt 6256 4120 L
6256 4120 mt 6256 4120 L
 898 2876 mt 6256 2876 L
6256 2876 mt 6256 2876 L
 898 1633 mt 6256 1633 L
6256 1633 mt 6256 1633 L
 898  389 mt 6256  389 L
6256  389 mt 6256  389 L
 898 4615 mt  898  389 L
 898  389 mt 6256  389 L
 898 4615 mt  898  389 L
 898  389 mt 6256  389 L
 898 4615 mt  898  389 L
 898  389 mt 6256  389 L
SO
6 w
 898 4615 mt 6256 4615 L
 898  389 mt 6256  389 L
6256 4615 mt 6256  389 L
 898 4615 mt  898  389 L
6256 4615 mt 6256 4615 L
 898 4615 mt  898 4615 L
 898 4615 mt 6256 4615 L
 898 4615 mt  898  389 L
 898 4615 mt  898 4615 L
1026 4615 mt 1026 4561 L
1026  389 mt 1026  443 L
 946 4784 mt 
(11) s
1536 4615 mt 1536 4561 L
1536  389 mt 1536  443 L
1456 4784 mt 
(12) s
2046 4615 mt 2046 4561 L
2046  389 mt 2046  443 L
1966 4784 mt 
(13) s
2556 4615 mt 2556 4561 L
2556  389 mt 2556  443 L
2476 4784 mt 
(14) s
3067 4615 mt 3067 4561 L
3067  389 mt 3067  443 L
2987 4784 mt 
(15) s
3577 4615 mt 3577 4561 L
3577  389 mt 3577  443 L
3497 4784 mt 
(16) s
4087 4615 mt 4087 4561 L
4087  389 mt 4087  443 L
4007 4784 mt 
(17) s
4598 4615 mt 4598 4561 L
4598  389 mt 4598  443 L
4518 4784 mt 
(18) s
5108 4615 mt 5108 4561 L
5108  389 mt 5108  443 L
5028 4784 mt 
(19) s
5618 4615 mt 5618 4561 L
5618  389 mt 5618  443 L
5538 4784 mt 
(20) s
6128 4615 mt 6128 4561 L
6128  389 mt 6128  443 L
6048 4784 mt 
(21) s
 898 4615 mt  925 4615 L
6256 4615 mt 6229 4615 L
DO
 898 4615 mt 6256 4615 L
6256 4615 mt 6256 4615 L
SO
 898 4494 mt  925 4494 L
6256 4494 mt 6229 4494 L
DO
 898 4494 mt 6256 4494 L
6256 4494 mt 6256 4494 L
SO
 898 4396 mt  925 4396 L
6256 4396 mt 6229 4396 L
DO
 898 4396 mt 6256 4396 L
6256 4396 mt 6256 4396 L
SO
 898 4313 mt  925 4313 L
6256 4313 mt 6229 4313 L
DO
 898 4313 mt 6256 4313 L
6256 4313 mt 6256 4313 L
SO
 898 4241 mt  925 4241 L
6256 4241 mt 6229 4241 L
DO
 898 4241 mt 6256 4241 L
6256 4241 mt 6256 4241 L
SO
 898 4177 mt  925 4177 L
6256 4177 mt 6229 4177 L
DO
 898 4177 mt 6256 4177 L
6256 4177 mt 6256 4177 L
SO
 898 4120 mt  925 4120 L
6256 4120 mt 6229 4120 L
DO
 898 4120 mt 6256 4120 L
6256 4120 mt 6256 4120 L
SO
 898 4120 mt  952 4120 L
6256 4120 mt 6202 4120 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 594 4173 mt 
(10) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

 754 4084 mt 
(-4) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 898 3746 mt  925 3746 L
6256 3746 mt 6229 3746 L
DO
 898 3746 mt 6256 3746 L
6256 3746 mt 6256 3746 L
SO
 898 3527 mt  925 3527 L
6256 3527 mt 6229 3527 L
DO
 898 3527 mt 6256 3527 L
6256 3527 mt 6256 3527 L
SO
 898 3371 mt  925 3371 L
6256 3371 mt 6229 3371 L
DO
 898 3371 mt 6256 3371 L
6256 3371 mt 6256 3371 L
SO
 898 3251 mt  925 3251 L
6256 3251 mt 6229 3251 L
DO
 898 3251 mt 6256 3251 L
6256 3251 mt 6256 3251 L
SO
 898 3152 mt  925 3152 L
6256 3152 mt 6229 3152 L
DO
 898 3152 mt 6256 3152 L
6256 3152 mt 6256 3152 L
SO
 898 3069 mt  925 3069 L
6256 3069 mt 6229 3069 L
DO
 898 3069 mt 6256 3069 L
6256 3069 mt 6256 3069 L
SO
 898 2997 mt  925 2997 L
6256 2997 mt 6229 2997 L
DO
 898 2997 mt 6256 2997 L
6256 2997 mt 6256 2997 L
SO
 898 2933 mt  925 2933 L
6256 2933 mt 6229 2933 L
DO
 898 2933 mt 6256 2933 L
6256 2933 mt 6256 2933 L
SO
 898 2876 mt  925 2876 L
6256 2876 mt 6229 2876 L
DO
 898 2876 mt 6256 2876 L
6256 2876 mt 6256 2876 L
SO
 898 2876 mt  952 2876 L
6256 2876 mt 6202 2876 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 594 2929 mt 
(10) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

 754 2840 mt 
(-3) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 898 2502 mt  925 2502 L
6256 2502 mt 6229 2502 L
DO
 898 2502 mt 6256 2502 L
6256 2502 mt 6256 2502 L
SO
 898 2283 mt  925 2283 L
6256 2283 mt 6229 2283 L
DO
 898 2283 mt 6256 2283 L
6256 2283 mt 6256 2283 L
SO
 898 2128 mt  925 2128 L
6256 2128 mt 6229 2128 L
DO
 898 2128 mt 6256 2128 L
6256 2128 mt 6256 2128 L
SO
 898 2007 mt  925 2007 L
6256 2007 mt 6229 2007 L
DO
 898 2007 mt 6256 2007 L
6256 2007 mt 6256 2007 L
SO
 898 1909 mt  925 1909 L
6256 1909 mt 6229 1909 L
DO
 898 1909 mt 6256 1909 L
6256 1909 mt 6256 1909 L
SO
 898 1825 mt  925 1825 L
6256 1825 mt 6229 1825 L
DO
 898 1825 mt 6256 1825 L
6256 1825 mt 6256 1825 L
SO
 898 1753 mt  925 1753 L
6256 1753 mt 6229 1753 L
DO
 898 1753 mt 6256 1753 L
6256 1753 mt 6256 1753 L
SO
 898 1690 mt  925 1690 L
6256 1690 mt 6229 1690 L
DO
 898 1690 mt 6256 1690 L
6256 1690 mt 6256 1690 L
SO
 898 1633 mt  925 1633 L
6256 1633 mt 6229 1633 L
DO
 898 1633 mt 6256 1633 L
6256 1633 mt 6256 1633 L
SO
 898 1633 mt  952 1633 L
6256 1633 mt 6202 1633 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 594 1686 mt 
(10) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

 754 1597 mt 
(-2) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 898 1258 mt  925 1258 L
6256 1258 mt 6229 1258 L
DO
 898 1258 mt 6256 1258 L
6256 1258 mt 6256 1258 L
SO
 898 1039 mt  925 1039 L
6256 1039 mt 6229 1039 L
DO
 898 1039 mt 6256 1039 L
6256 1039 mt 6256 1039 L
SO
 898  884 mt  925  884 L
6256  884 mt 6229  884 L
DO
 898  884 mt 6256  884 L
6256  884 mt 6256  884 L
SO
 898  763 mt  925  763 L
6256  763 mt 6229  763 L
DO
 898  763 mt 6256  763 L
6256  763 mt 6256  763 L
SO
 898  665 mt  925  665 L
6256  665 mt 6229  665 L
DO
 898  665 mt 6256  665 L
6256  665 mt 6256  665 L
SO
 898  582 mt  925  582 L
6256  582 mt 6229  582 L
DO
 898  582 mt 6256  582 L
6256  582 mt 6256  582 L
SO
 898  510 mt  925  510 L
6256  510 mt 6229  510 L
DO
 898  510 mt 6256  510 L
6256  510 mt 6256  510 L
SO
 898  446 mt  925  446 L
6256  446 mt 6229  446 L
DO
 898  446 mt 6256  446 L
6256  446 mt 6256  446 L
SO
 898  389 mt  925  389 L
6256  389 mt 6229  389 L
DO
 898  389 mt 6256  389 L
6256  389 mt 6256  389 L
SO
 898  389 mt  952  389 L
6256  389 mt 6202  389 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 594  442 mt 
(10) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

 754  353 mt 
(-1) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 898  389 mt 6256  389 L
 898 4615 mt 6256 4615 L
 898 4615 mt  898  389 L
6256 4615 mt 6256  389 L
 898  389 mt  898  389 L
6256  389 mt 6256  389 L
gs 898 389 5359 4227 MR c np
1020 216 1021 265 1020 298 1021 354 1020 252 1026 448 6 MP stroke
DA
1020 317 1021 308 1020 334 1021 301 1020 339 1026 408 6 MP stroke
DD
1020 666 1021 657 1020 615 1021 545 1020 542 1026 1253 6 MP stroke

gr 
DD
2285  274 mt 
(PR4 at 3.5 a/symbol \(2.5 symbols/pw50\)) s
 540 2963 mt  -90 rotate
(ERROR RATE) s
90 rotate
3209 4944 mt 
(S\(AWG\)NR) s
gs 898 389 5359 4227 MR c np
765 0 1536 3625 2 MP stroke

gr 
2505 3678 mt 
(C2 metric) s
gs 898 389 5359 4227 MR c np
DA
765 0 1536 3901 2 MP stroke

gr 
DA
2505 3954 mt 
(C1 metric) s
gs 898 389 5359 4227 MR c np
SO
765 0 1536 4177 2 MP stroke

gr 
SO
2505 4230 mt 
(Euclidian metric) s

end

eplot
%%EndObject graph 1

epage
end

showpage

%%Trailer
%%BoundingBox:    51   179   543   604
%%Pages: 001
%%EOF
cleartomark
countdictstack exch sub { end } repeat
restore

%%EndDocument
FMENDEPSF
0 0 0 0 1 1 1 K
92 172 556 222 R
7 X
V
3 H
2 Z
N
133 582 506 615 R
V
N
0 0 0 1 0 0 0 K
0 21 Q
0 X
0 0 0 1 0 0 0 K
(PR4 at 3.5) 125 592 T
1 23 Q
(a) 230.06 592 T
0 21 Q
(/ symbol \0502.5 symbols/PW50\051) 250.62 592 T
(S\050A) 244 188 T
(WG\051NR [dB]) 278.23 188 T
0 18 Q
(1) 100 209 T
(1) 108.68 209 T
(12) 140 209 T
(13) 181 209 T
(14) 225 209 T
0 0 0 0 1 1 1 K
47 211 94 624 R
7 X
0 0 0 0 1 1 1 K
V
N
0 0 0 1 0 0 0 K
0 X
0 0 0 1 0 0 0 K
(10) 62 463.52 T
0 14.4 Q
(-2) 82.02 470.72 T
0 18 Q
(10) 62 361.9 T
0 14.4 Q
(-3) 82.02 369.1 T
0 21 Q
(ERROR RA) 0 -270 56 331 TF
(TE) 0 -270 56 440.28 TF
0 0 0 0 1 1 1 K
144 243 336.8 349 R
7 X
0 0 0 0 1 1 1 K
V
0.5 H
N
0 0 0 1 0 0 0 K
144 243 336.8 349 R
0 X
0 0 0 1 0 0 0 K
N
J
151.56 333 211.29 333 2 L
J
151.56 333 157.31 333 2 L
N
[13.695 7.741 1.786 7.741] 13.695 I
157.31 333 205.54 333 2 L
N
J
205.54 333 211.29 333 2 L
N
J
151.56 297 211.29 297 2 L
J
151.56 297 155.31 297 2 L
N
[8.077 7] 8.077 I
155.31 297 207.54 297 2 L
N
J
207.54 297 211.29 297 2 L
N
J
151.56 261 211.29 261 2 L
N
2 F
(C2 metric) 219.61 325 T
(C1 metric) 218.85 290 T
2 20 Q
(Euclidian metric) 219.61 256 T
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 18 Q
(10) 62 258.4 T
0 14.4 Q
(-4) 82.02 265.6 T
0 18 Q
(10) 63 565.98 T
0 14.4 Q
(-1) 83.02 573.18 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 18 Q
(15) 269 209 T
(16) 311 209 T
(17) 354 209 T
(18) 396 209 T
(19) 438 209 T
(20) 481 209 T
(21) 523 209 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1" 1
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Descend
%%Pages: 1
%%DocumentFonts: Helvetica
%%+ Bookman-LightItalic
%%+ Helvetica-Narrow
%%EOF
countdictstack InitDictCount sub { end } repeat
cleartomark
restore
grestore

%%EndDocument
 @endspecial 817 4954 a(Figure)f(7:)44 b(PR4)32 b(detection)h(results)g
(at)f(3)p Fj(:)p Fq(5)p Fj(a=)p Fq(sym)m(b)s(ol.)p eop
%%Page: 25 25
25 24 bop -133 -101 a Fm(IEEE)32 b(T)-7 b(r)i(ansactions)35
b(on)e(Magnetics)p Fl(,)d(v)m(ol.)h(34,)h(Ma)m(y)f(1998)1805
b Fq(25)855 2121 y @beginspecial 42 @llx 185 @lly 545
@urx 606 @ury 2370 @rwi @setspecial
%%BeginDocument: epr4two5.epsi
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 42 185 545 606
%%BeginPreview: 504 422 1 422
% 000000000000000000000ff83fc0ff0000000000000000000000000000000000000030000060000000000000000000000c00000c00007f83860c0000000000
% 000000000000000000000ff83fe0ffc018000000007c003f8000000030000000000030000060030f800fe000000000000c00000c00067fc3870c3f81f02000
% 000000000000000000000c003070c0c01800000c00fe003f800007d830000000000030000060061fc00fe000000000000c00000c000660e1870c3f83f83000
% 000000000000000000000c003030c0403800000c00c6003000001ff8200000000000300000600638c00c0000000000000c00000c000460618f1c3003183000
% 000000000000000000000c003030c04078007e1f00c6003000003e78600f8618fcf03f03e0600c30600c0001f1861f9e0fc07c0c7c0c60618f183007181000
% 000000000000000000000c003030c0c0d800771f0006003e00007830601f8718fff03f87f0600c00600f8003f1c61ffe0fe0fe0cfc0c60618d983e060c1800
% 000000000000000000000ff83070c1c0d800630c003e003f800070304018c318c71830c630600c00c00fe00318c618e30c30c60cc60860e0cd983f860c1800
% 000000000000000000000ff83fe0ff819800030c003e00318000e03040180330c61830cc18600c01800c600300cc18c30c31830cc0087fc0d99831860c1800
% 000000000000000000000c003fc0ffc318003f0c00070001c000e060c01f0330c61830cc18600c0700007003e0cc18c30c31830cf8187f80d8b001c60c1800
% 000000000000000000000c003000c1c3fe00730c01830000c000c060c003c3a0c61830cc18600c1e0000300078e818c30c31830c1e186000d0f000c60c1800
% 000000000000000000000c003000c0c3fe00e30c01830060c000c0608000c1e0c61830cc18600c1800183000187818c30c31830c06106000f0f060c3181800
% 000000000000000000000c003000c0c01800c70c01c60071800060e58018c1e0c61830ce30600c30001c6003187818c30c31c60cc630600070f07183381800
% 000000000000000000000ffc3000c0401800ef8e00fe0c3f800073fd801fc1c0c6183f87f0600c3fe30fe003f87018c30fe0fe0cfe30600070703f83f81800
% 000000000000000000000ffc3000c06018007f8f007c0c3f00001f79001f80c0c6183f03e0600c3fe30fc003f03018c30fc07c0cfc20600060603f01f01000
% 00000000000000000000000000000000000000000000000000000000000000c000000000000004000000000000300000000000000000000000000000001000
% 000000000000000000000000000000000000000000000000000000000000018000000000000006000000000000600000000000000000000000000000003000
% 000000000000000000000000000000000000000000000000000000000000038000000000000002000000000000e00000000000000000000000000000002000
% 000000000000000000000000000000000000000000000000000000000000030000000000000003000000000000c00000000000000000000000000000006000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000001e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000003300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000003100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000403071c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000c0f80380ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% 000001c0cc030080000040080000c8000000000000010000000000000010000000000000010000000000000020000000000000020000000000000040000001
% 000003c08c03f08000000000000038000000000000010000000000000010000000000000010000000000000020000000000000020000000000000040000001
% 000000c18400008000000400000008000000000000010000000000000010000000000000010000000000000020000000000000020000000000000040000001
% 000000c1840000f462311b8c66231f88c46231188c47231188c46231189c46231188c46231188c46231188c46231188c4623118ac46231188c46235188c467
% 000000c18400008000000080180009800000000000010000000000000010000000000000010000000000000020000000000000020000000000000040000001
% 000000c18400008000000040060008600000000000010000000000000010000000000000010000000000000020000000000000020000000000000040000001
% 000000c18400008000000000010000180000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000c08c00008000000004000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000c0f80000f46231188c4623118bc46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c467
% 000000c0780000800000000000000800c000000000010000000000000010000000000000010000000000000020000000000000020000000000000040000001
% 000000000000008000000000600608003000000000010000000000000010000000000000010000000000000020000000000000020000000000000040000001
% 000000000000008000000000100180000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 0000000000000080000000000c0040000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000f46231188c46231188c5e231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c467
% 000000000000008000000000000008000060000000010000000000000010000000000000010000000000000020000000000000020000000000000040000001
% 000000000000008000000000006001000018000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000c00004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000200003000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000208100000c00000010000000000000010000000000000010000000000000020000000000000020000000000000040000001
% 00000000000000f46231188c46239988c46231188c47231188c46231189c46231188c46231188c46231188c46231188c4623118ac46231188c46235188c467
% 000000000000008000000000000060000000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000004000060000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000003000018000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000800000000000000a000c00006000010000000000000010000000000000010000000000000020000000000000020000000000000040000001
% 000000000000008000000000000000000200001800000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000f46231188c462311b8c462311b8c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c467
% 0000000000000080000000000000080c00000000c0010000000000000010000000000000010000000000000020000000000000020000000000000040000001
% 00000000000000800000000000000802000c000030010000000000000010000000000000010000000000000020000000000000020000000000000040000001
% 000000000000008000000000000000000003000008000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000002000800006000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000002000000001800000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000008000000000000610000000000000010000000000000010000000000000020000000000000020000000000000040000001
% 000000000000008000000000000000000200020000180000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000f46231188c46231188c5e231988c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c467
% 000000000000008000000000000000000040004000030000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000008000020002000018000000000000010000000000000010000000000000020000000000000020000000000000040000001
% 000000000000008000000000000008000000000000016000000000000010000000000000010000000000000020000000000000020000000000000040000001
% 000000000000008000000000000000000002000000001000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000002000000000c00000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000060000200000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000008000000300018010100000000000010000000000000010000000000000020000000000000020000000000000040000001
% 0000000000000080000000000000000000000800040000c0000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000060000000020000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000f46231188c46231988c46231188c47231d88c46231189c46231188c46231188c46231188c46231188c4623118ac46231188c46235188c467
% 000000000000008000000000000008000000003000190002000000000010000000000000010000000000000020000000000000020000000000000040000001
% 000000000000008000000000000000000000000000060001000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000018000c00000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000100000000200000000000000000000000000000000000000000000000000000000000000000000000000001
% 0000000000000080000000000000080000000000c0010000180000000010000000000000010000000000000020000000000000020000000000000040000001
% 000000000000008000000000000000000000000020000000040000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000010000400020000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000200018000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000008000000000001010180004000000010000000000000010000000000000020000000000000020000000000000040000001
% 000000000000008000000000000008000000000000010040002000000010000000000000010000000000000020000000000000020000000000000040000001
% 000000000000008000000000000000000000000000000000001800000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000180000000400000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000040000000200000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000008000000000000030001000180000010000000000000010000000000000020000000000000020000000000000040000001
% 000000000000008000000000000000000000000000000000800040000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000f46231188c46231188c46231188c462311c8c47231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c467
% 000000000000008000000000000000000000000000003000300008000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000008000000000000010000000004000010000000000000010000000000000020000000000000020000000000000040000001
% 000000000000008000000000000008000000000000010000000003000010000000000000010000000000000020000000000000020000000000000040000001
% 000000000000008000000000000000000000000000000200000000800000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000100008000400000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000080004000300000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000008000000000000010060003000080010000000000000010000000000000020000000000000020000000000000040000001
% 000000000000008000000000000000000000000000000000000800060000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000008000000000000010000000000006010000000000000010000000000000020000000000000020000000000000040000001
% 000000000000008000000000000008000000000000010000000020001010000000000000010000000000000020000000000000020000000000000040000001
% 000000000000008000000000000000000000000000000000400010000800000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000200008000600000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000100006000100000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000008000000000000010000080000000090000000000000010000000000000020000000000000020000000000000040000001
% 000000000000008000000000000000000000000000000000040000000060000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000800000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000001
% 000000000003c080000000000000080000000000000100000040000c0012000000000000010000000000000020000000000000020000000000000040000001
% 000000000006608000000000000008000000000000010000000000020011000000000000010000000000000020000000000000020000000000000040000001
% 000000000006608000000000000000000000000000000000000000010000c00000000000000000000000000000000000000000000000000000000000000001
% 000000000000408000000000000000000000000000000000000800008000200000000000000000000000000000000000000000000000000000000000000001
% 000000806001c08000000000000000000000000000000000000400000000100000000000000000000000000000000000000000000000000000000000000001
% 00000181f0e06080000000000000080000000000000100000003000000100c0000000000010000000000000020000000000000020000000000000040000001
% 00000381980420fc6231188c46231188c46231188c46231188c4e2311c8c46231188c46231188c46231188c46231188c46231188c46231188c46231188c47f
% 000007811806608000000000000000000000000000000000000000000200018000000000000000000000000000000000000000000000000000000000000001
% 000001830803c08000000000000000000000000000000000000000000180004000000000000000000000000000000000000000000000000000000000000001
% 000001830800008000000000000008000000000000010000000008000050002000000000010000000000000020000000000000020000000000000040000001
% 00000183080000f46231188c46231988c46231188c47231188c46a31189c463b1188c46231188c46231188c46231188c4623118ac46231188c46235188c467
% 000001830800008000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000001
% 000001830800008000000000000000000000000000000000000001000000000200000000000000000000000000000000000000000000000000000000000001
% 000001811800008000000000000000000000000000000000000000800000000180000000000000000000000000000000000000000000000000000000000001
% 00000181f000008000000000000008000000000000010000000000400011800040000000010000000000000020000000000000020000000000000040000001
% 00000180f00000f46231188c46231188c46231188c46231188c46231188c46233188c46231188c46231188c46231188c46231188c46231188c46231188c467
% 000000000000008000000000000000000000000000000000000000100000300018000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000008000000000000010000000000000010000003000000010000000000000020000000000000020000000000000040000001
% 000000000000008000000000000008000000000000010000000000010010000000800000010000000000000020000000000000020000000000000040000001
% 00000000000000f46231188c46231188c46231188c46231188c46231188c462311c8c46231188c46231188c46231188c46231188c46231188c46231188c467
% 000000000000008000000000000000000000000000000000000000000000004000300000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000001000003000080000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000008000000000000010000000000000810000800040000010000000000000020000000000000020000000000000040000001
% 000000000000008000000000000000000000000000000000000000000400000400030000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000200000000008000000000000000000000000000000000000000000000000000000001
% 00000000000000f46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c467
% 000000000000008000000000000008000000000000010000000000000010000000003000010000000000000020000000000000020000000000000040000001
% 000000000000008000000000000008000000000000010000000000000030000010000800010000000000000020000000000000020000000000000040000001
% 000000000000008000000000000000000000000000000000000000000000000008000600000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000006000100000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000001
% 000c00000000008000000000000008000000000000010000000000000012000000000060010000000000000020000000000000020000000000000040000001
% c30c0000000000f46231188c46231188c46231188c46231188c46231188d46231188c47231188c46231188c46231188c46231188c46231188c46231188c467
% c30c00000000008000000000000000000000000000000000000000000000c00000000008000000000000000000000000000000000000000000000000000001
% c30c000000000080000000000000000000000000000000000000000000000000000c0006000000000000000000000000000000000000000000000000000001
% c30c00000000008000000000000008000000000000010000000000000010000000020001010000000000000020000000000000020000000000000040000001
% c30c00000000008000000000000008000000000000010000000000000010040000010000c10000000000000020000000000000020000000000000040000001
% c30c00000000008000000000000000000000000000000000000000000000040000008000200000000000000000000000000000000000000000000000000001
% c30c00000000008000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000001
% fffc000000000080000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000001
% fffc0000000000f46231188c46231988c46231188c47231188c46231189c46631188c46233188c46231188c46231188c4623118ac46231188c46235188c467
% 000000000000008000000000000000000000000000000000000000000000002000000200010000000000000000000000000000000000000000000000000001
% 00000000000000800000000000000000000000000000000000000000000000100000018000c000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000800000040002000000000000000000000000000000000000000000000000001
% 000000000000008000000000000008000000000000010000000000000010000000000020011000000000000020000000000000020000000000000040000001
% c00000000000008000000000000008000000000000010000000000000010000000000000010c00000000000020000000000000020000000000000040000001
% c00000000000008000000000000000000000000000000000000000000000000080000000000200000000000000000000000000000000000000000000000001
% c00000000000008000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000001
% c000000000000080000000000000000000000000000000000000000000000000000000008000c0000000000000000000000000000000000000000000000001
% fffc00000000008000000000000008000000000000010000000000000010000000000000410020000000000020000000000000020000000000000040000001
% fffc0000000000800000000000000000000000000000000000000000000000000c000000200010000000000000000000000000000000000000000000000001
% c0000000000000f46231188c46231188c46231188c46231188c46231188c46231388c46231188c46231188c46231188c46231188c46231188c46231188c467
% c00000000000008000000000000000000000000000000000000000000000000001000000000006000000000000000000000000000000000000000000000001
% c00000000000008000000000000008000000000000010000000000000010000000000000010001000000000020000000000000020000000000000040000001
% c00000000000008000000000000008000000000000010000000000000010000000000000010000800000000020000000000000020000000000000040000001
% 000000000000008000000000000000000000000000000000000000000000000000100000004000600000000000000000000000000000000000000000000001
% 001c00000000008000000000000000000000000000000000000000000000000000100000003000100000000000000000000000000000000000000000000001
% 00fc00000000008000000000000000000000000000000000000000000000000000000000000800080000000000000000000000000000000000000000000001
% 07f000000000008000000000000008000000000000010000000000000010000000000000010400060000000020000000000000020000000000000040000001
% 7fc000000000008000000000000000000000000000000000000000000000000000010000000000010000000000000000000000000000000000000000000001
% f8c000000000008000000000000000000000000000000000000000000000000000008000000000008000000000000000000000000000000000000000000001
% e0c000000000008000000000000000000000000000000000000000000000000000004000000000006000000000000000000000000000000000000000000001
% 3fc000000000008000000000000008000000000000010000000000000010000000002000010010001000000020000000000000020000000000000040000001
% 1fe00000000000800000000000000800000000000001000000000000001000000000000001000c000800000020000000000000020000000000000040000001
% 03fc00000000008000000000000000000000000000000000000000000000000000000000000002000600000000000000000000000000000000000000000001
% 007c00000000008000000000000000000000000000000000000000000000000000000200000001000100000000000000000000000000000000000000000001
% 000400000000008000000000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000001
% 00000000000000f46231188c46231988c46231188c47231188c46231189c46231188c46231188c46237188c46231188c4623118ac46231188c46235188c467
% 000000000000008000000000000000000000000000000000000000000000000000000020000000000010000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000010000000040008000000000000000000000000000000000000000001
% 000400000000008000000000000000000000000000000000000000000000000000000008000000030004000000000000000000000000000000000000000001
% 7efc00000000008000000000000008000000000000010000000000000010000000000004010000008003000020000000000000020000000000000040000001
% 67f000000000008000000000000008000000000000010000000000000010000000000000010000004000800020000000000000020000000000000040000001
% c3c000000000008000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000001
% c18000000000008000000000000000000000000000000000000000000000000000000000400000000000300000000000000000000000000000000000000001
% c18000000000008000000000000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000001
% c18000000000008000000000000008000000000000010000000000000010000000000000010000000100040020000000000000020000000000000040000001
% c180000000000080000000000000000000000000000000000000000000000000000000000000000000c0030000000000000000000000000000000000000001
% c18000000000008000000000000000000000000000000000000000000000000000000000040000000020008000000000000000000000000000000000000001
% fffc00000000008000000000000000000000000000000000000000000000000000000000030000000010004000000000000000000000000000000000000001
% fffc00000000008000000000000008000000000000010000000000000010000000000000018000000000003020000000000000020000000000000040000001
% 000000000000008000000000000008000000000000010000000000000010000000000000010000000000000820000000000000020000000000000040000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000c00000000400300000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000300080000000000000000000000000000000000001
% 000000000000008000000000000008000000000000010000000000000010000000000000010000000000080060000000000000020000000000000040000001
% 000000000000c080000000000000000000000000000000000000000000000000000000000000c0000000000020000000000000000000000000000000000001
% 000000000000c08000000000000000000000000000000000000000000000000000000000000020000000000018000000000000000000000000000000000001
% 000000000001c08000000000000000000000000000000000000000000000000000000000000018000000000004000000000000000000000000000000000001
% 000000000003c08000000000000008000000000000010000000000000010000000000000010000000000002022000000000000020000000000000040000001
% 000000806006c08000000000000008000000000000010000000000000010000000000000010000000000001021800000000000020000000000000040000001
% 00040181f0e6c08000000000000000000000000000000000000000000000000000000000000000000000000800400000000000000000000000000000000001
% 7efc03819807e08000000000000000000000000000000000000000000000000000000000000000000000000600200000000000000000000000000000000001
% 67f007811800c0fc6231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46239188c46231188c46231188c46231188c47f
% c3c001830800c08000000000000008000000000000010000000000000010000000000000010000080000000020040000000000020000000000000040000001
% c18001830800008000000000000000000000000000000000000000000000000000000000000000060000000000020000000000000000000000000000000001
% c18001830800008000000000000000000000000000000000000000000000000000000000000000010000000008018000000000000000000000000000000001
% c1800183080000f46231188c46231188c46231188c46231188c46231188c46231188c46231188c46a31188c46631588c46231188c46231188c46231188c467
% c18001830800008000000000000008000000000000010000000000000010000000000000010000000000000022002000000000020000000000000040000001
% c18001811800008000000000000008000000000000010000000000000010000000000000010000000000000021801800000000020000000000000040000001
% fffc0181f000008000000000000000000000000000000000000000000000000000000000000000000800000000000400000000000000000000000000000001
% fffc0180f000008000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000001
% 00000000000000f46231188c46231188c46231188c46231188c46231188c46231188c46231188c46239188c46231198c46231188c46231188c46231188c467
% 000000000000008000000000000008000000000000010000000000000010000000000000010000000040000020000040000000020000000000000040000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000030000000030020000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000008000000008010000000000000000000000000000001
% 00000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000600c000000000000000000000000000001
% 0fe00000000000f46231188c46231988c46231188c47231188c46231189c46231188c46231188c46231188c46231188e4623118ac46231188c46235188c467
% 3ff000000000008000000000000008000000000000010000000000000010000000000000010000000000800020000001000000020000000000000040000001
% 703800000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000001
% 601c00000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000001
% c00c000000000080000000000000000000000000000000000000000000000000000000000000000000000c00000000c0100000000000000000000000000001
% c00c000000000080000000000000080000000000000100000000000000100000000000000100000000000200200000200c0000020000000000000040000001
% c00c0000000000f46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231189c46231189c46231188c46231188c46231188c467
% c00c00000000008000000000000000000000000000000000000000000000000000000000000000000000008000000000010000000000000000000000000001
% c00c0000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000001
% 601800000000008000000000000008000000000000010000000000000010000000000000010000000000000820000000002000020000000000000040000001
% 787800000000008000000000000008000000000000010000000000000010000000000000010000000000000020000000001000020000000000000040000001
% 3ff000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000300c00000000000000000000000001
% 0fc000000000008000000000000000000000000000000000000000000000000000000000000000000000000080000000080200000000000000000000000001
% 00000000000000f46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c467
% 0000000000000080000000000000080000000000000100000000000000100000000000000100000000000000300000000000c0020000000000000040000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000008000000000020000000000000000000000001
% 000400000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000001
% 7efc00000000008000000000000000000000000000000000000000000000000000000000000000000000000000800000001008000000000000000000000001
% 67f000000000008000000000000008000000000000010000000000000010000000000000010000000000000020800000000c06020000000000000040000001
% c3c0000000000080000000000007fffffffffffffffffffffffffffffffffffffffffffffffe00000000000020000000000201020000000000000040000001
% c18000000000008000000000000400000000000000000000000000000000000000000000000200000000000000080000000100800000000000000000000001
% c1800000000000f46231188c46240000000000000000000000000000000000000000000000028c46231188c46235188c462311e8c46231188c46231188c467
% c18000000000008000000000000400000000000000000000000000000000000000000000000200000000000000020000000000100000000000000000000001
% c180000000000080000000000004000000000000000000000000000000000000000000000002000000000000200180000000000a0000000000000040000001
% c18000000000008000000000000400000000000000000000000000000000000000000000000200000000000000000000000004060000000000000000000001
% fffc00000000008000000000000400000000000000000000000000000000000000000000000200000000000000000000000003010000000000000000000001
% fffc00000000008000000000000400000000000000000000000000000000000000000000000200000000000000000800000000808000000000000000000001
% 000000000000008000000000000400000000000000000000000000000000000000000000000200000000000020000000000000426000000000000040000001
% 000000000000008000000000000400000000000000000007000000000000000000000000000200000000000020000000000000021000000000000040000001
% 00000000000000800000000000040000000000000000001f81c000000000010000000000000200000000000000000080000000000c00000000000000000001
% 000000000000008000000000000400000000000000000039c3e000000008010000000000000200000000000000000060000000000200000000000000000001
% 000400000000008000000000000400000000000000000030c33000000008000000000000000200000000000000000010000000010100000000000000000001
% 7efc0000000000f46231188c462400000000000000000020463003980e08180e0000000000028c46231188c46231188c4623118ac4e231188c46235188c467
% 67f00000000000800000000000040000000000000000006006300ffc1f1e791f80000000000200000000000000000000000000006020000000000000000001
% c3c00000000000800000000000040000000000000000006006300ce61988611980000000000200000000000000000001800000001018000000000000000001
% c1800000000000800000000000040fe0380fffc0703f806000300cc63188411080000000000200000000000000000000000000000004000000000000000001
% c18000000000008000000000000400000000000000000060006008c63188413000000000000200000000000020000000000000020002000000000040000001
% c1800000000000800000000000040000000000000000006040e008c63f88413000000000000200000000000020000000080000020001800000000040000001
% c18000000000008000000000000400000000000000000020438008c63008413000000000000200000000000000000000040000000000400000000000000001
% c18000000000008000000000000400000000000000000030c30008c63088413080000000000200000000000000000000030000000060200000000000000001
% fffc00000000008000000000000400000000000000000030c60008c61188411180000000000200000000000000000000008000000010180000000000000001
% fffc0000000000800000000000040000000000000000001987f008c61b8c411980000000000200000000000020000000000000020008040000000040000001
% 00000000000000800000000000040000000000000000001f87f008c61f0e411f00000000000200000000000000000000000000000000030000000000000001
% 000000000000008000000000000400000000000000000000000000000000000000000000000200000000000000000000000000000000008000000000000001
% 000000000000008000000000000400000000000000000000000000000000000000000000000200000000000000000000000000000000004000000000000001
% 000000000000008000000000000400000000000000000000000000000000000000000000000200000000000020000000000000020000203000000040000001
% 000c000000000080000000000004000000000000000000000000000000000000000000000002000000000000200000000000c0020000100800000040000001
% c30c000000000080000000000004000000000000000000000000000000000000000000000002000000000000000000000000200000000c0600000000000001
% c30c0000000000f46231188c46240000000000000000000000000000000000000000000000028c46231188c46231188c46231188c46233198c46231188c467
% c30c00000000008000000000000400000000000000000000000000000000000000000000000200000000000000000000000000000000000080000000000001
% c30c00000000008000000000000400000000000000000000000000000000000000000000000200000000000020000000000000020000000060000040000001
% c30c00000000008000000000000400000000000000000000000000000000000000000000000200000000000000000000000001800000000010000000000001
% c30c00000000008000000000000400000000000000000000000000000000000000000000000200000000000000000000000000000000000808000000000001
% c30c00000000008000000000000400000000000000000000000000000000000000000000000200000000000000000000000000100000000406000000000001
% fffc000000000080000000000004000000000000000000000000000000000000000000000002000000000000200000000000000a0000000201000040000001
% fffc00000000008000000000000400000000000000000000000000000000000000000000000200000000000020000000000000060000000180c00040000001
% 000000000000008000000000000400000000000000000000000000000000000000000000000200000000000000000000000000010000000000200000000001
% 000000000000008000000000000400000000000000000000000000000000000000000000000200000000000000000000000000000000000000100000000001
% 0000000000000080000000000004000000000000000000000000000000000000000000000002000000000000000000000000000000000000000c0000000001
% 000000000000008000000000000400000000000000000000000000000000000000000000000200000000000020000000000000021800000000020040000001
% 000000000000008000000000000400000000000000000000000000000000000000000000000200000000000000000000000000000000000003018000000001
% 000000000000008000000000000400000000000000000000000000000000000000000000000200000000000000000000000000000000000000804000000001
% 000000000000008000000000000400000000000000000000000000000000000000000000000200000000000000000000000000000180000000402000000001
% 00000000000000800000000000040000000000000000000e000000000000000000000000000200000000000020000000000000020040000000201840000001
% 00000000000000800000000000040000000000000000003f008000000000020000000000000200000000000020000000000000020030000000000440000001
% 000000000000008000000000000400000000000000000073818000000008020000000000000200000000000000000000000000000000000000000200000001
% 000000000000008000000000000400000000000000000061818000000008000000000000000200000000000000000000000000000000000000010180000001
% 000000000003e08000000000000400000000000000000040878003981c08301c00000000000200000000000000000000000000000001000000008040000001
% 0000000000020080000000000004000000000000000000c007800ffc3e1ef23f00000000000200000000000020000000000000020001000000004070000001
% 0000000000060080000000000004000000000000000000c001800ce63308c23300000000000200000000000000000000000000000000000000003008000001
% 000000000007c080000000000004000000000000000000c001800cc66308822100000000000200000000000000000000000000000000100000000004000001
% 000000806006e0800000000000040f81ff03fe07fe0f80c0018008c66308826000000000000200000000000000000000000000000000080000000003000001
% 00000181f0e06080000000000004000000000000000000c0818008c67f08826000000000000200000000000020000000000000020000060000000040800001
% 000003819804608000000000000400000000000000000040818008c66008826000000000000200000000000020000000000000020000010000000040600001
% 000007811806e08000000000000400000000000000000061818008c66108826100000000000200000000000000000000000000000000000000000060100001
% 000001830803c0fc6231188c462400000000000000000061818008c6230882230000000000028c46231188c46231188c46231188c46231188c46231188c47f
% 000001830800008000000000000400000000000000000033018008c6370c823300000000000200000000000000000000000000000000001000000008060001
% 00000183080000800000000000040000000000000000003f018008c63e0e823e00000000000200000000000020000000000000020000000000000044010001
% 000001830800008000000000000400000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000008001
% 00000183080000f46231188c46240000000000000000000000000000000000000000000000028c46231188c46231188c46231188c46231198c46231188e467
% 000001811800008000000000000400000000000000000000000000000000000000000000000200000000000000000000000000000000000040000000001001
% 00000181f000008000000000000400000000000000000000000000000000000000000000000200000000000020000000000000020000000030000040100c01
% 00000180f0000080000000000004000000000000000000000000000000000000000000000002000000000000200000000000000200000000000000400c0201
% 00000000000000f46231188c46240000000000000000000000000000000000000000000000028c46231188c46231188c46231188c46231188c4623118ac567
% 0000000000000080000000000004000000000000000000000000000000000000000000000002000000000000000000000000000000000000010000000100c1
% 000000000000008000000000000400000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000021
% 000000000000008000000000000400000000000000000000000000000000000000000000000200000000000020000000000000020000000000000040000019
% 000000000000008000000000000400000000000000000000000000000000000000000000000200000000000000000000000000000000000000100000000005
% 00000000000000f46231188c46240000000000000000000000000000000000000000000000028c46231188c46231188c46231188c46231188c4e231188cc67
% 000000000000008000000000000400000000000000000000000000000000000000000000000200000000000000000000000000000000000000020000000201
% 000000000000008000000000000400000000000000000000000000000000000000000000000200000000000020000000000000020000000000010040000181
% 000000000000008000000000000400000000000000000000000000000000000000000000000200000000000020000000000000020000000000000040000001
% 000000000000008000000000000400000000000000000000000000000000000000000000000200000000000000000000000000000000000000001000000001
% 000000000000008000000000000400000000000000000000000000000000000000000000000200000000000000000000000000000000000000001000000001
% 00000000000000f46231188c46240000000000000000000000000000000000000000000000028c46231188c46231188c46231188c46231188c46231188c467
% 000000000000008000000000000400000000000000000000000000000000000000000000000200000000000020000000000000020000000000000140000003
% 000000000000008000000000000400000000000000000000000000000000000000000000000200000000000000000000000000000000000000000080000001
% 000000000000008000000000000400000000000000000000000000000000000000000000000200000000000000000000000000000000000000000040000001
% 000000000000008000000000000400000000000000000000000000000000000000000000000200000000000000000000000000000000000000000030000001
% 00000000000000800000000000040000000000000000003f800006206200000000000100200200000000000020000000000000020000000000000040000001
% 00000000000000800000000000040000000000000000003f800006206200000000000100200200000000000020000000000000020000000000000040000001
% 00000000000000f46231188c46240000000000000000002000000600600000000000010000028c46231188c46231188c46231188c46231188c46231388c467
% 0000000000000080000000000004000000000000000000200461e627e23c17005de1e3ca23c200000000000000000000000000000000000000000000000001
% 0000000000000080000000000004000000000000000000200463f627e27e1f007fe3e3ce27e200000000000000000000000000000000000000000000000001
% 00000000000000800000000000040000000000000000003f0463362c6262198066223108266200000000000020000000000000020000000000000040100001
% 00000000000000800000000000040000000000000000003f0466362c62021180462631082c62000000000000000000000000000000000000000000000c0001
% 0000000000000080000000000004000000000000000000200466062c621e11804627f1082c0200000000000000000000000000000000000000000000020001
% 00000000000000800000000000040fffffffffffffff80200466062c627e11804627f1082c0200000000000000000000000000000000000000000000010001
% 0000000000000080000000000004000000000000000000200466362c62621180462601082c6200000000000020000000000000020000000000000040000001
% 0000000000000080000000000004000000000000000000200462362c6266118046223108246200000000000020000000000000020000000000000040003001
% 00000000000000f46231188c46240000000000000000003f86e3362ee26e11804623610826628c46231188c46231188c46231188c46231188c46231188c467
% 00000000000000800000000000040000000000000000003f87e3e627e27b11804623e1c827c200000000000000000000000000000000000000000000000001
% 000000000000008000000000000400000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000301
% 000000000000008000000000000400000000000000000000000000000000000000000000000200000000000020000000000000020000000000000040000081
% 000000000000008000000000000400000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000061
% 000000000000008000000000000400000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000001
% 000000000000008000000000000400000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000001
% 000000000000008000000000000400000000000000000000000000000000000000000000000200000000000020000000000000020000000000000040000001
% 000000000000008000000000000400000000000000000000000000000000000000000000000200000000000020000000000000020000000000000040000001
% 000000000000008000000000000400000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000001
% 000000000000008000000000000400000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000001
% 00000000000000f46231188c46240000000000000000000000000000000000000000000000028c46231188c46231188c46231188c46231188c46231188c467
% 000000000000008000000000000400000000000000000000000000000000000000000000000200000000000020000000000000020000000000000040000001
% 000000000000008000000000000400000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000001
% 000000000000008000000000000400000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000001
% 0000000000000080000000000007fffffffffffffffffffffffffffffffffffffffffffffffe00000000000000000000000000000000000000000000000001
% 000000000000008000000000000008000000000000010000000000000010000000000000010000000000000020000000000000020000000000000040000001
% 000000000000008000000000000008000000000000010000000000000010000000000000010000000000000020000000000000020000000000000040000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000008000000000000010000000000000010000000000000010000000000000020000000000000020000000000000040000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000008000000000000010000000000000010000000000000010000000000000020000000000000020000000000000040000001
% 00000000000000f46231188c46231988c46231188c47231188c46231189c46231188c46231188c46231188c46231188c4623118ac46231188c46235188c467
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000008000000000000010000000000000010000000000000010000000000000020000000000000020000000000000040000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000008000000000000010000000000000010000000000000010000000000000020000000000000020000000000000040000001
% 000000000000008000000000000008000000000000010000000000000010000000000000010000000000000020000000000000020000000000000040000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000008000000000000010000000000000010000000000000010000000000000020000000000000020000000000000040000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000003c08000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000003608000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000006008000000000000008000000000000010000000000000010000000000000010000000000000020000000000000020000000000000040000001
% 000000000005808000000000000008000000000000010000000000000010000000000000010000000000000020000000000000020000000000000040000001
% 000000806007e08000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000181f0e6608000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000003819806208000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000007811806608000000000000008000000000000010000000000000010000000000000010000000000000020000000000000020000000000000040000001
% 000001830803c08000000000000008000000000000010000000000000010000000000000010000000000000020000000000000020000000000000040000001
% 000001830800008000000000000008000000000000010000000000000010000000000000010000000000000020000000000000020000000000000040000001
% 000001830800008000000000000008000000000000010000000000000010000000000000010000000000000020000000000000020000000000000040000001
% 000001830800008000000000000008000000000000010000000000000010000000000000010000000000000020000000000000020000000000000040000001
% 00000183080000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% 000001811800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000181f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000180f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000020180000000000080400000000000403000000000000100c00000000000080100000000000103f00000000000100c000000
% 000000000000000000000000000607c0000000000180c00000000000c0f800000000000303e00000000000180300000000000303f00000000000301e000000
% 000000000000000000000000000e0660000000000381c00000000001c08c000000000007023000000000003803000000000007030000000000007033000000
% 000000000000000000000000001e0460000000000783c00000000003c18400000000000f02300000000000780f00000000000f02000000000000f023000000
% 00000000000000000000000000060c20000000000180c00000000000c18400000000000302300000000000180f00000000000302c000000000003020000000
% 00000000000000000000000000060c20000000000180c00000000000c00c00000000000300e00000000000180b00000000000303e00000000000307e000000
% 00000000000000000000000000060c20000000000180c00000000000c01800000000000300f000000000001813000000000003023000000000003073000000
% 00000000000000000000000000060c20000000000180c00000000000c070000000000003003000000000001833000000000003001000000000003061000000
% 00000000000000000000000000060c20000000000180c00000000000c0c000000000000306100000000000183f800000000003001000000000003061000000
% 00000000000000000000000000060460000000000180c00000000000c18000000000000306100000000000183f800000000003063000000000003021000000
% 000000000000000000000000000607c0000000000180c00000000000c1fc00000000000303f00000000000180300000000000303f00000000000303f000000
% 000000000000000000000000000603c0000000000180c00000000000c1fc00000000000301e00000000000180300000000000303e00000000000301e000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000007c0000c0e18300f8000c040ff000700c3f81e00000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000fe0180e0e1c303fc040e040ffc00600c3fe0600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000001870301e061c3078e060e040c0c00600c30e0600000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000018303036063c70703060f040c0400600c3060600000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000018006036063c60e03020f840c040061ec3060600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000001c006033063660c00030d840c0c0063fc3060600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000fc06073033660c00030dc40c1c00631c3fc0600000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000001f06073036660c1f830ce40ff800660c3fe0600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000078607f8362c0c1f830c640ffc00660c30f0600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000003018607f8343c0e01830c740c1c00660c3030600000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000381860e183c3c0603830c3c0c0c00660c3030600000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000183860c1c1c3c0707830c1c0c0c00671c3070600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000001ff060c0c1c1c03ff830c1c0c040063fc3fe0600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000fe061c0c181801f9820c0c0c060063ec3fe0600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000200000000000002000000000060000000600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000300000000000006000000000060000000600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000100000000000004000000000060000000600000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000018000000000000c000000000070000001e00000000000000000000000000000000000000
%%EndImage
%%EndPreview
/InitDictCount countdictstack def
gsave
save
mark
newpath
/showpage {} def
%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 { } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	
	
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 612 792 0 1 6 FMDOCUMENT
0 0 /Helvetica FMFONTDEFINE
1 0 /Bookman-LightItalic FMFONTDEFINE
2 0 /Helvetica-Narrow FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "1" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 0 0 0 1 1 1]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 54 199 539 598 485 399 60 196.5 FMBEGINEPSF
%%BeginDocument: /home/kavcic/tex/papers/TransMAG97/e4two5.epsi
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 54 199 539 598
save
countdictstack
mark
newpath
/showpage {} def
%!PS-Adobe-2.0 
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: epr4two5.ps
%%CreationDate: 04/28/97  01:31:45
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Pages: (atend)
%%BoundingBox: (atend)
%%EndComments

%%BeginProlog

% MathWorks dictionary
/MathWorks 150 dict begin

% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef

% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
/rm /rmoveto ldef
/rl /rlineto ldef
/s /show ldef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef

% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef

% orientation switch
/portraitMode 	0 def
/landscapeMode 	1 def

% coordinate system mappings
/dpi2point 0 def

% font control
/FontSize 0 def
/FMS {
	/FontSize xstore		%save size off stack
	findfont
	[FontSize 0 0 FontSize neg 0 0]
	makefont
	setfont
	}bdef

/reencode {
exch dup where
{pop load} {pop StandardEncoding} ifelse
exch
dup 3 1 roll
findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def
  currentdict
end
definefont pop
} bdef

/isroman {
findfont /CharStrings get
/Agrave known
} bdef

/FMSR {
3 1 roll 1 index
dup isroman
{reencode} {pop pop} ifelse
exch FMS
} bdef

/csm {
	1 dpi2point div -1 dpi2point div scale
	neg translate
	landscapeMode eq {90 rotate} if
	} bdef

% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4 dpi2point mul] 0 setdash } bdef

% macros for lines and objects
/L {
	lineto
	stroke
	} bdef
/MP {
	3 1 roll moveto
	1 sub {rlineto} repeat
	} bdef
/AP {
	{rlineto} repeat
	} bdef
/PP {
	closepath fill
	} bdef
/DP {
	closepath stroke
	} bdef
/MR {
	4 -2 roll moveto
	dup  0 exch rlineto
	exch 0 rlineto
	neg  0 exch rlineto
	closepath
	} bdef
/FR {
	MR stroke
	} bdef
/PR {
	MR fill
	} bdef
/L1i {
	{ currentfile picstr readhexstring pop } image
	} bdef

/tMatrix matrix def
/MakeOval {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 0 360 arc
	tMatrix setmatrix
	} bdef
/FO {
	MakeOval
	stroke
	} bdef
/PO {
	MakeOval
	fill
	} bdef

/PD {
	2 copy moveto lineto stroke
	} bdef


currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    51   197   543   604
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: graph1 1
bplot

/dpi2point 12 def
portraitMode 0216 7344 csm

  406    92  5899  4884 MR c np
76 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

1 j
c1
   0    0 6914 5187 PR
6 w
DO
4 w
c0
 898 4615 mt  898  389 L
 898  389 mt  898  389 L
1612 4615 mt 1612  389 L
1612  389 mt 1612  389 L
2327 4615 mt 2327  389 L
2327  389 mt 2327  389 L
3041 4615 mt 3041  389 L
3041  389 mt 3041  389 L
3756 4615 mt 3756  389 L
3756  389 mt 3756  389 L
4470 4615 mt 4470  389 L
4470  389 mt 4470  389 L
5184 4615 mt 5184  389 L
5184  389 mt 5184  389 L
5899 4615 mt 5899  389 L
5899  389 mt 5899  389 L
 898 4615 mt 6256 4615 L
6256 4615 mt 6256 4615 L
 898 3559 mt 6256 3559 L
6256 3559 mt 6256 3559 L
 898 2502 mt 6256 2502 L
6256 2502 mt 6256 2502 L
 898 1446 mt 6256 1446 L
6256 1446 mt 6256 1446 L
 898  389 mt 6256  389 L
6256  389 mt 6256  389 L
 898 4615 mt  898  389 L
 898  389 mt 6256  389 L
 898 4615 mt  898  389 L
 898  389 mt 6256  389 L
 898 4615 mt  898  389 L
 898  389 mt 6256  389 L
SO
6 w
 898 4615 mt 6256 4615 L
 898  389 mt 6256  389 L
6256 4615 mt 6256  389 L
 898 4615 mt  898  389 L
6256 4615 mt 6256 4615 L
 898 4615 mt  898 4615 L
 898 4615 mt 6256 4615 L
 898 4615 mt  898  389 L
 898 4615 mt  898 4615 L
 898 4615 mt  898 4561 L
 898  389 mt  898  443 L
 858 4784 mt 
(9) s
1612 4615 mt 1612 4561 L
1612  389 mt 1612  443 L
1532 4784 mt 
(10) s
2327 4615 mt 2327 4561 L
2327  389 mt 2327  443 L
2247 4784 mt 
(11) s
3041 4615 mt 3041 4561 L
3041  389 mt 3041  443 L
2961 4784 mt 
(12) s
3756 4615 mt 3756 4561 L
3756  389 mt 3756  443 L
3676 4784 mt 
(13) s
4470 4615 mt 4470 4561 L
4470  389 mt 4470  443 L
4390 4784 mt 
(14) s
5184 4615 mt 5184 4561 L
5184  389 mt 5184  443 L
5104 4784 mt 
(15) s
5899 4615 mt 5899 4561 L
5899  389 mt 5899  443 L
5819 4784 mt 
(16) s
 898 4615 mt  925 4615 L
6256 4615 mt 6229 4615 L
DO
 898 4615 mt 6256 4615 L
6256 4615 mt 6256 4615 L
SO
 898 4615 mt  952 4615 L
6256 4615 mt 6202 4615 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 594 4668 mt 
(10) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

 754 4579 mt 
(-6) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 898 4297 mt  925 4297 L
6256 4297 mt 6229 4297 L
DO
 898 4297 mt 6256 4297 L
6256 4297 mt 6256 4297 L
SO
 898 4111 mt  925 4111 L
6256 4111 mt 6229 4111 L
DO
 898 4111 mt 6256 4111 L
6256 4111 mt 6256 4111 L
SO
 898 3979 mt  925 3979 L
6256 3979 mt 6229 3979 L
DO
 898 3979 mt 6256 3979 L
6256 3979 mt 6256 3979 L
SO
 898 3877 mt  925 3877 L
6256 3877 mt 6229 3877 L
DO
 898 3877 mt 6256 3877 L
6256 3877 mt 6256 3877 L
SO
 898 3793 mt  925 3793 L
6256 3793 mt 6229 3793 L
DO
 898 3793 mt 6256 3793 L
6256 3793 mt 6256 3793 L
SO
 898 3722 mt  925 3722 L
6256 3722 mt 6229 3722 L
DO
 898 3722 mt 6256 3722 L
6256 3722 mt 6256 3722 L
SO
 898 3661 mt  925 3661 L
6256 3661 mt 6229 3661 L
DO
 898 3661 mt 6256 3661 L
6256 3661 mt 6256 3661 L
SO
 898 3607 mt  925 3607 L
6256 3607 mt 6229 3607 L
DO
 898 3607 mt 6256 3607 L
6256 3607 mt 6256 3607 L
SO
 898 3559 mt  925 3559 L
6256 3559 mt 6229 3559 L
DO
 898 3559 mt 6256 3559 L
6256 3559 mt 6256 3559 L
SO
 898 3559 mt  952 3559 L
6256 3559 mt 6202 3559 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 594 3612 mt 
(10) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

 754 3523 mt 
(-5) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 898 3240 mt  925 3240 L
6256 3240 mt 6229 3240 L
DO
 898 3240 mt 6256 3240 L
6256 3240 mt 6256 3240 L
SO
 898 3054 mt  925 3054 L
6256 3054 mt 6229 3054 L
DO
 898 3054 mt 6256 3054 L
6256 3054 mt 6256 3054 L
SO
 898 2922 mt  925 2922 L
6256 2922 mt 6229 2922 L
DO
 898 2922 mt 6256 2922 L
6256 2922 mt 6256 2922 L
SO
 898 2820 mt  925 2820 L
6256 2820 mt 6229 2820 L
DO
 898 2820 mt 6256 2820 L
6256 2820 mt 6256 2820 L
SO
 898 2736 mt  925 2736 L
6256 2736 mt 6229 2736 L
DO
 898 2736 mt 6256 2736 L
6256 2736 mt 6256 2736 L
SO
 898 2666 mt  925 2666 L
6256 2666 mt 6229 2666 L
DO
 898 2666 mt 6256 2666 L
6256 2666 mt 6256 2666 L
SO
 898 2604 mt  925 2604 L
6256 2604 mt 6229 2604 L
DO
 898 2604 mt 6256 2604 L
6256 2604 mt 6256 2604 L
SO
 898 2550 mt  925 2550 L
6256 2550 mt 6229 2550 L
DO
 898 2550 mt 6256 2550 L
6256 2550 mt 6256 2550 L
SO
 898 2502 mt  925 2502 L
6256 2502 mt 6229 2502 L
DO
 898 2502 mt 6256 2502 L
6256 2502 mt 6256 2502 L
SO
 898 2502 mt  952 2502 L
6256 2502 mt 6202 2502 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 594 2555 mt 
(10) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

 754 2466 mt 
(-4) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 898 2184 mt  925 2184 L
6256 2184 mt 6229 2184 L
DO
 898 2184 mt 6256 2184 L
6256 2184 mt 6256 2184 L
SO
 898 1998 mt  925 1998 L
6256 1998 mt 6229 1998 L
DO
 898 1998 mt 6256 1998 L
6256 1998 mt 6256 1998 L
SO
 898 1866 mt  925 1866 L
6256 1866 mt 6229 1866 L
DO
 898 1866 mt 6256 1866 L
6256 1866 mt 6256 1866 L
SO
 898 1764 mt  925 1764 L
6256 1764 mt 6229 1764 L
DO
 898 1764 mt 6256 1764 L
6256 1764 mt 6256 1764 L
SO
 898 1680 mt  925 1680 L
6256 1680 mt 6229 1680 L
DO
 898 1680 mt 6256 1680 L
6256 1680 mt 6256 1680 L
SO
 898 1609 mt  925 1609 L
6256 1609 mt 6229 1609 L
DO
 898 1609 mt 6256 1609 L
6256 1609 mt 6256 1609 L
SO
 898 1548 mt  925 1548 L
6256 1548 mt 6229 1548 L
DO
 898 1548 mt 6256 1548 L
6256 1548 mt 6256 1548 L
SO
 898 1494 mt  925 1494 L
6256 1494 mt 6229 1494 L
DO
 898 1494 mt 6256 1494 L
6256 1494 mt 6256 1494 L
SO
 898 1446 mt  925 1446 L
6256 1446 mt 6229 1446 L
DO
 898 1446 mt 6256 1446 L
6256 1446 mt 6256 1446 L
SO
 898 1446 mt  952 1446 L
6256 1446 mt 6202 1446 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 594 1499 mt 
(10) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

 754 1410 mt 
(-3) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 898 1127 mt  925 1127 L
6256 1127 mt 6229 1127 L
DO
 898 1127 mt 6256 1127 L
6256 1127 mt 6256 1127 L
SO
 898  941 mt  925  941 L
6256  941 mt 6229  941 L
DO
 898  941 mt 6256  941 L
6256  941 mt 6256  941 L
SO
 898  809 mt  925  809 L
6256  809 mt 6229  809 L
DO
 898  809 mt 6256  809 L
6256  809 mt 6256  809 L
SO
 898  707 mt  925  707 L
6256  707 mt 6229  707 L
DO
 898  707 mt 6256  707 L
6256  707 mt 6256  707 L
SO
 898  623 mt  925  623 L
6256  623 mt 6229  623 L
DO
 898  623 mt 6256  623 L
6256  623 mt 6256  623 L
SO
 898  553 mt  925  553 L
6256  553 mt 6229  553 L
DO
 898  553 mt 6256  553 L
6256  553 mt 6256  553 L
SO
 898  491 mt  925  491 L
6256  491 mt 6229  491 L
DO
 898  491 mt 6256  491 L
6256  491 mt 6256  491 L
SO
 898  437 mt  925  437 L
6256  437 mt 6229  437 L
DO
 898  437 mt 6256  437 L
6256  437 mt 6256  437 L
SO
 898  389 mt  925  389 L
6256  389 mt 6229  389 L
DO
 898  389 mt 6256  389 L
6256  389 mt 6256  389 L
SO
 898  389 mt  952  389 L
6256  389 mt 6202  389 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 594  442 mt 
(10) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

 754  353 mt 
(-2) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 898  389 mt 6256  389 L
 898 4615 mt 6256 4615 L
 898 4615 mt  898  389 L
6256 4615 mt 6256  389 L
 898  389 mt  898  389 L
6256  389 mt 6256  389 L
gs 898 389 5359 4227 MR c np
1429 1032 1428 1086 1429 1045 1429 804 898 17 5 MP stroke
DA
1429 1046 1428 1008 1429 1044 1429 830 898 143 5 MP stroke
DD
1429 1005 1428 996 1429 1219 1429 906 898 203 5 MP stroke

gr 
DD
2237  274 mt 
(EPR4 at 3.5 a/symbol \(2.5 symbols/pw50\)) s
 540 2963 mt  -90 rotate
(ERROR RATE) s
90 rotate
3209 4944 mt 
(S\(AWG\)NR) s
gs 898 389 5359 4227 MR c np
572 0 1755 3138 2 MP stroke

gr 
2470 3191 mt 
(C2 metric) s
gs 898 389 5359 4227 MR c np
DA
572 0 1755 3456 2 MP stroke

gr 
DA
2470 3509 mt 
(C1 metric) s
gs 898 389 5359 4227 MR c np
SO
572 0 1755 3774 2 MP stroke

gr 
SO
2470 3827 mt 
(Euclidian metric) s

end

eplot
%%EndObject graph 1

epage
end

showpage

%%Trailer
%%BoundingBox:    51   197   543   604
%%Pages: 001
%%EOF
cleartomark
countdictstack exch sub { end } repeat
restore

%%EndDocument
FMENDEPSF
0 0 0 0 1 1 1 K
92 172 556 222 R
7 X
V
3 H
2 Z
N
133 582 506 615 R
V
N
0 0 0 1 0 0 0 K
0 21 Q
0 X
0 0 0 1 0 0 0 K
(EPR4 at 3.5) 125 592 T
1 23 Q
(a) 244.07 592 T
0 21 Q
(/ symbol \0502.5 symbols/PW50\051) 264.63 592 T
(S\050A) 244 188 T
(WG\051NR [dB]) 278.23 188 T
0 18 Q
(1) 206 209 T
(1) 214.68 209 T
(12) 263.29 209 T
(13) 324.77 209 T
0 0 0 0 1 1 1 K
47 211 94 624 R
7 X
0 0 0 0 1 1 1 K
V
N
0 0 0 1 0 0 0 K
0 X
0 0 0 1 0 0 0 K
(10) 62 479.98 T
0 14.4 Q
(-3) 82.02 487.18 T
0 18 Q
(10) 62 393.29 T
0 14.4 Q
(-4) 82.02 400.49 T
0 21 Q
(ERROR RA) 0 -270 56 331 TF
(TE) 0 -270 56 440.28 TF
0 0 0 0 1 1 1 K
151 263 343.8 369 R
7 X
0 0 0 0 1 1 1 K
V
0.5 H
N
0 0 0 1 0 0 0 K
151 263 343.8 369 R
0 X
0 0 0 1 0 0 0 K
N
J
158.56 353 218.29 353 2 L
J
158.56 353 164.31 353 2 L
N
[13.695 7.741 1.786 7.741] 13.695 I
164.31 353 212.54 353 2 L
N
J
212.54 353 218.29 353 2 L
N
J
158.56 317 218.29 317 2 L
J
158.56 317 162.31 317 2 L
N
[8.077 7] 8.077 I
162.31 317 214.54 317 2 L
N
J
214.54 317 218.29 317 2 L
N
J
158.56 281 218.29 281 2 L
N
2 F
(C2 metric) 226.61 345 T
(C1 metric) 225.85 310 T
2 20 Q
(Euclidian metric) 226.61 276 T
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 18 Q
(10) 62 304.98 T
0 14.4 Q
(-5) 82.02 312.18 T
0 18 Q
(10) 63 567.39 T
0 14.4 Q
(-2) 83.02 574.59 T
0 18 Q
(14) 386.26 209 T
(15) 444.94 209 T
(16) 505.03 209 T
(10) 148.03 209 T
(10) 62 220.98 T
0 14.4 Q
(-6) 82.02 228.18 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1" 1
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Descend
%%Pages: 1
%%DocumentFonts: Helvetica
%%+ Bookman-LightItalic
%%+ Helvetica-Narrow
%%EOF
countdictstack InitDictCount sub { end } repeat
cleartomark
restore
grestore

%%EndDocument
 @endspecial 784 2432 a(Figure)31 b(8:)43 b(EPR4)33 b(detection)g
(results)g(at)f(3)p Fj(:)p Fq(5)p Fj(a=)p Fq(sym)m(b)s(ol.)846
4643 y @beginspecial 34 @llx 184 @lly 545 @urx 608 @ury
2391 @rwi @setspecial
%%BeginDocument: margin.epsi
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 34 184 545 608
%%BeginPreview: 512 425 1 425
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000fc000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000fc000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c0000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f8000000000
% 000000000000000000000000003e00006070c1807c00060207f800000000000018000030038000000000000000000000000000000007000000000dc000000000
% 000000000000000000000000007f00c07070e181fe02070207fe0000000000001800003007000000000000000000000000000000000e00300f83c0c000000000
% 00000000000000000000000000c38180f030e183c703070206060000000000001800003006000000000000000000000000600000000c00301fc3c0c000000000
% 00000000000000000000000000c18181b031e3838183078206020000000000001800003006000000000000000000000000600000000c01f018c018c000000000
% 00000000000000000000000000c00301b031e307018107c20602003f83e03e03d87c07b00f8f81e007c1e3c3e07803c7e0f9f0007c1f01f038c00dc000000000
% 00000000000000000000000000e003019831b306000186c20606003f87f07f07f8fe0ff00f9fc1e00fe1e3c7f07803c770fbf800fe1f003030600f8000000000
% 000000000000000000000000007e03039819b306000186e2060e0030c618618638c30c700618c1800c3183063060030630630c00c60c00303060000000000000
% 000000000000000000000000000f8303981b33060fc1867207fc0030c618618c18c31830063061800c31830c1860030030630c01830c00303060000000000000
% 0000000000000000000000000003c303fc1b16060fc1863207fe0030c7f87f8c18ff1830063061800ff1830c18600303f063fc01830c00303060000000000000
% 0000000000000000000000000180c303fc1a1e0700c1863a060e0030c7f87f8c18ff1830063061800ff1830c186003073063fc01830c00303060000000000000
% 00000000000000000000000001c0c3070c1e1e0301c1861e06060030c600600c18c01830063061800c01830c1860030e30630001830c003018c0000000000000
% 00000000000000000000000000c1c3060e0e1e0383c1860e06060030c618618e38c31c700638c1800c31830e3060030c70630c01c60c003019c0000000000000
% 00000000000000000000000000ff8306060e0e01ffc1860e06020030c7f07f07f8fe0ff0061fc1800fe18307f060030ef873f800fe0c00301fc0000000000000
% 000000000000000000000000007f030e060c0c00fcc1060606030030c3e03e07d87c0fb0060f818007c18303e0600307f879f0007c0c00300f80000000000000
% 00000000000000000000000000000100000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000180000000000003000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000080000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000c0000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000403001f800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000c07801f800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000001c0cc018000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000003c08c010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000c08001600ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% 0000000c1f801f008000000002000000000000000000800000000000000000200000000000000000040000000000000000010000000000000000002000000001
% 0000000c1cc011808000000002000000000000000000800000000000000000200000000000000000040000000000000000010000000000000000002000000001
% 0000000c184000808000000002000000000000000000800000000000000000200000000000000000040000000000000000010000000000000000002000000001
% 0000000c184000808000000002000000000000000000800000000000000000200000000000000000040000000000000000010000000000000000002000000001
% 0000000c084031808000000002000000000000000000800000000000000000200000000000000000040000000000000000010000000000000000002000000001
% 0000000c0fc31f808000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 0000000c07831f008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000083800000000000000010000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000001fc1f83f0000010fc0e000000000008018000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000001fc1fc3f8030031ce1f000000004008008000000000000000000000000000000000000000000000000000001
% 000000000000000080000000000000000000000010010c2180700318619800000004000008000000000000000000000000000000000000000000000000000001
% 000000000000000080000000000000000000000010010c2080700210231800e607040c070c000000000000000000000000000000000000000000000000000001
% 000000000000000080000000000000000000000010010c2080f00630031803ff0f8f3c8fcc000000000000000000000000000000000000000000000000000001
% 000000000000000080000000000000000000000010010c2180b00630031803398cc4308ccc000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000001f81fc3f81b006300018033198c4208844000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000ff060fff060fe01f81f83f813006300030023198c4209804000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000001001002183300630207002319fc4209804000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000001001002083f8061021c002319804209804000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000001001002083f80618618002319844209844000000000000000000000000000000000000000000000000000001
% 000000000000000080000000000000000000000010010020803006186300023188c42088cc000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000001fc100208030060cc3f802318dc6208ccc000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000001fc10020c030020fc3f802318f87208f8c000000000000000000000000000000000000000000000000000001
% 0000000000000000800000000000000000000000000000000000020000000000000000000c000000000000000000000000000000000000000000004000000001
% 00000000000000008000000000000000000000000000000000000300000000000000000008000000000000000000000000000000000000000000018000000001
% 00000000000000008000000000000000000000000000000000000100000000000000000018000000000000000000000000000000000000000000060000000001
% 00000000000000008000000000000000000000000000000000000100000000000000000018000000000000000000000000000000000000000000080000000001
% 00000000000000008000000000000000000000000000000000000080000000000000000010000000000000000000000000000000000000000000300000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c00000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000018000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000300000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c00000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003000000000000001
% 00000000000000008000000000000000000000000000000000000107000000000000000020000000000000000000000000000000000000004000000000000001
% 00000000000000008000000000000000000000003f83f07e0000021f804000000000010030000000000000000000000000000000000000018000000000000001
% 00000000000000008000000000000000000000003f83f87f00600639c0c000000004010010000000000000000000000000000000000000060000000000000001
% 00000000000000008000000000000000000000002002184300e00630c0c000000004000010000000000000000000000000000000000000080000000000000001
% 00000000040300008000000000000000000000002002184100e0042043c001cc0e04180e18000000000000000000000000000000000000300000000000000001
% 000000000c0780008000000000000000000000002002184101e00c6003c007fe1f0f791f98000000000000000000000000000000000000c00000000000000001
% 000000001c0cc0008000000000000000000000002002184301600c6000c006731984611998000000000000000000000000000000000003000000000000000001
% 000000003c08c0008000000000000000000000003f03f87f03600c6000c006633184411088000000000000000000000000000000000004000000000000000001
% 000000000c0800008000000000000000000000003f03f07f02600c6000c004633184413008000000000000000000000000000000000018000000000000000001
% 000000000c1f8000fc00000000fc07fc07fe07e02002004306600c6040c004633f8441300800000000000000000000000000000000006000000000400000003f
% 000000000c1cc0008000000000000000000000002002004107f00c2040c004633004413008000000000000000000000000000000000080000000008000000001
% 000000000c1840008000000000000000000000002002004107f00c30c0c004633084413088000000000000000000000000000000000300000000030000000001
% 000000000c1840008000000000000000000000002002004100600c30c0c004631184411198000000000000000000000000000000000c00000000000000000001
% 000000000c0840008000000000000000000000003f82004100600c1980c004631b86411998000000000000000000000000000000003000000000000000000001
% 000000000c0fc0008000000000000000000000003f8200418060041f80c004631f07411f18000000000000000000000000000000004000000000000000000001
% 000000000c0780008000000000000000000000000000000000000400000000000000000018000000000000000000000000000000018000000000800000000001
% 00000000000000008000000000000000000000000000000000000600000000000000000010000000000000000000000000000000060000000003000000000001
% 0000000000000000800000000000000000000000000000000000020000000000000000003000000000000000000000000000000008000000000c000000000001
% 00000000000000008000000000000000000000000000000000000200000000000000000030000000000000000000000000000000300000000000000000000001
% 00000000000000008000000000000000000000000000000000000100000000000000000020000000000000000000000000000000c00000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000003000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000200000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000018000000000c00000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000060000000001000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000080000000002000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000300000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000003000000000000000000000000001
% 00000000000000008000000000000000000000001fc3f07e00c00000000000000000000000000000000000000000000000004000000000100000000000000001
% 00000000000000008000000000000000000000001fc3f07f00c00000000000000000000000000000000000000000000000018000000000600000000000000001
% 00000000000000008000000000000000000000001002184301c00000000000000000000000000000000000000000000000060000000001800000000000000001
% 00000000000000008000000000000000000000001002184301c00000000000000000000000000000000000000000000000080000000000000000000000000001
% 00000000000000008000000000000000000000001002184302c00000000000000000000000000000000000000000000000300000000000000000000000000001
% 00000000000000008000000000000000000000001f82187f02c00000000000000000000000000000000000000000000000c00000000000000000000000000001
% 00000000000000008000000000000000000000001f83f07e06c00000000000000000000000000000000000000000000003000000000040000000000000000001
% 00000000000000008000000000000000000000001003e04304c00000000000000000000000000000000000000000000004000000000180000000000000000001
% 0000000000000000800000000000000000000000100200430fe00000000000000000000000000000000000000000000018000000000200000000000000000001
% 0000000000000000800000000000000000000000100200430fe00000000000000000000000000000000000000000000060000000000400000000000000000001
% 00000000000000008000000000000000000000001002004300c00000000000000000000000000000000000000000000080000000000000000000000000000001
% 00000000000000008000000000000000000000001fc2004300c00000000000000000000000000000000000000000000300000000000000000000000000000001
% 00000000000000008000000000ffffffffffffe01fc2004100c00000000000000000000000000000000000000000000c00000000010000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000001000000000060000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000006000000000080000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000018000000000100000000000000000000001
% 00000000000000008000000000000000000000000400000000000000000000000000001000000000000000000000060000000000000000000000000000000001
% 0000000000000000800000000000000000000000047f00000c40c400000000000100401800000000000000000000080000000000000000000000000000000001
% 00000000000000008000000000000000000000000c7f00000c40c400000000000100400800000000000000000000300000000004000000000000000000000001
% 0000000000000000800000000000000000000000084000000c00c000000000000100000c00000000000000000000c00000000008000000000000000000000001
% 0000000000000000800000000000000000000000084008c3cc4fc4782e00bbc3c3d4478c00000000000000000001000000000030000000000000000000000001
% 0000000000000000800000000000000000000000184008c7ec4fc4fc3e00ffc7c3dc4fcc00000000000000000006000000000040000000000000000000000001
% 0000000000000000800000000000000000000000187e08c66c58c4c43300cc4461104cc400000000000000000018000000000000000000000000000000000001
% 0000000000000000800000000000000000000000187e08cc6c58c40423008c4c611058c400000000000000000060000000000000000000000000000000000001
% 0000000000000000800000000000000000000000184008cc0c58c43c23008c4fe110580400000000000000000080000000000000000000000000000000000001
% 0000000000000000800000000000000000000000184008cc0c58c4fc23008c4fe110580400000000000000000300000000003000000000000000000000000001
% 0000000000000000800000000000000000000000184008cc6c58c4c423008c4c011058c400000000000000000c0000000000c000000000000000000000000001
% 0000000000000000800000000000000000000000184008c46c58c4cc23008c44611048cc00000000000000001000000000010000000000000000000000000001
% 0000000000000000800000000000000000000000187f0dc66c5dc4dc23008c46c1104ccc00000000000000006000000000020000000000000000000000000001
% 0000000000000000800000000000000000000000087f0fc7cc4fc4f623008c47c1d04f8c00000000000000018000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000800000000000000000000000000000c00000000000000060000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000c00000000000000000000000000000800000000000000080000000000800000000000000000000000000001
% 00000000000000008000000000000000000000000400000000000000000000000000001800000000000000300000000001000000000000000000000000000001
% 00000000000000008000000000000000000000000400000000000000000000000000001800000000000000c00000000006000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000001000000000008000000000000000000000000000001
% 000000040fc01f808000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000001
% 0000000c0fc01f808000000000000000000000000000000000000000000000000000000000000000000018000000000000000000000000000000000000000001
% 0000001c0c0018008000000000000000000000000000000000000000000000000000000000000000000060000000000200000000000000000000000000000001
% 0000003c080010008000000000000000000000000000000000000000000000000000000000000000000080000000000400000000000000000000000000000001
% 0000000c0b0016008000000000000000000000000000000000000000000000000000000000000000000300000000001800000000000000000000000000000001
% 0000000c0f801f00fc00000000000000000000000000000000000000000000000000000000000000000c0000000000200000000000000000000000000000003f
% 0000000c08c011808000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000001
% 0000000c004000808000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000001
% 0000000c004000808000000000000000000000000000000000000000000000000000000000000000018000000000000000000000000000000000000000000001
% 0000000c18c031808000000000000000000000000000000000000000000000000000000000000000060000000000180000000000000000000000000000000001
% 0000000c0fc31f808000000000000000000000000000000000000000000000000000000000000000080000000000600000000000000000000000000000000001
% 0004000c0f831f008000000000000000000000000000000000000000000000000000000000000000300000000000800000000000000000000000000000000001
% 7efc0000000000008000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000001
% 67f00000000000008000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000001
% c3c00000000000008000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000001
% c1800000000000008000000000000000000000000000000000000000000000000000000000000018000000000060000000000000000000000000000000000001
% c1800000000000008000000000000000000000000000000000000000000000000000000000000060000000000080000000000000000000000000000000000001
% c1800000000000008000000000000000000000000000000000000000000000000000000000000080000000000300000000000000000000000000000000000001
% c1800000000000008000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000010000000001
% c1800000000000008000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000001
% fffc0000000000008000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000300000000001
% fffc0000000000008000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000001c00000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000018000000000030000000000000000000000000002000000000001
% 000000000000000080000000000000000000000000000000000000000000000000000000000600000000000c0000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000080000000000100000000000000000000000000020000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000c00000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000003000000000000001
% fffc000000000000800000000000000000000000000000000000000000000000000000000600000000000c000000000000000000000000004000000000000001
% 003c0000000000008000000000000000000000000000000000000000000000000000000018000000000010000000000000000000000000000000000000000001
% 007800000000000080000000000000000000000000000000000000000000000000000000600000000000600000000000000000000000000c0000000000000001
% 01e00000000000008000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000001
% 03c00000000000008000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000001800000000000000001
% 0f000000000000008000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000006000000000000000001
% 1c000000000000008000000000000000000000000000000000000000000000000000001000000000003000000000000000000000000008000000000000000001
% 78000000000000008000000000000000000000000000000000000000000000000000006000000000004000000000000000000000000000000000000000000001
% fffc0000000000008000000000000000000000000000000000000000000000000000018000000000018000000000000000000000000180000000000000000001
% fffc0000000000008000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000080000000000000000000000000000000000003000000000000000000001
% 0000000000000000800000000000000000000000000000000000000000000000000030000000000000000000000000000000000000c000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000c00000000000400000000000000000000000010000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000001000000000001800000000000000000000000000000000000000000000001
% 07f80000000000008000000000000000000000000000000000000000000000000006000000000006000000000000000000000000200000000000000000000001
% 3fff0000000000008000000000000000000000000000000000000000000000000018000000000000000000000000000000000000000000000000000000000001
% 7003c000000000008000000000000000000000000000000000000000000000000060000000000000000000000000000000000006000000000000000000000001
% 00004000000000008000000000000000000000000000000000000000000000000080000000000000000000000000000000000018000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000300000000000100000000000000000000000060000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000c00000000000600000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000001000000000000800000000000000000000000400000000000000000000000001
% 01fc0000000000008000000000000000000000000000000000000000000000006000000000003000000000000000000000000000000000000000000000000001
% 19fc000000000000800000000000000000000000000000000000000000000001800000000000000000000000000000000000c000000000000000000000000001
% 39b80000000000008000000000000000000000000000000000000000000000060000000000000000000000000000000000030000000000000000000000000001
% 619800000000000080000000000000000000000000000000000000000000000800000000000000000000000000000000000c0000000000000000000000000001
% e18c0000000000008000000000000000000000000000000000000000000000300000000000080000000000000000000000000000000000000000000000000001
% c18c0000000000008000000000000000000000000000000000000000000000c00000000000300000000000000000000000800000000000000000000000000001
% c00c0000000000008000000000000000000000000000000000000000000001000000000000c00000000000000000000000000000000000000000000000000001
% c00c0000000000008000000000000000000000000000000000000000000006000000000000000000000000000000000018000000000000000000000000000001
% e00c0000000000008000000000000000000000000000000000000000000018000000000000000000000000000000000060000000000000000000000000000001
% 701c0000040fc0008000000000000000000000000000000000000000000060000000000000000000000000000000000180000000000000000000000000000001
% 787800000c0fc0008000000000000000000000000000000000000000000080000000000020000000000000000000000000000000000000000000000000000001
% 3ff000001c0c000080000000000000000000000000000000000000000003000000000000c0000000000000000000003000000000000000000000000000000001
% 0fc000003c0800008000000000000000000000000000000000000000000c00000000000100000000000000000000000000000000000000000000000000000001
% 000000000c0b00008000000000000000000000000000000000000000001000000000000200000000000000000000020000000000000000000000000000000001
% 000000000c0f8000fc000000000000000000000000000000000000000060000000000000000000000000000000000c000000000000000000000000000000003f
% 000000000c08c0008000000000000000000000000000000000000000018000000000000000000000000000000000300000000000000000000000000000000001
% 000000000c0040008000000000000000000000000000000000000000060000000000008000000000000000000000000000000000000000000000000000000001
% f00000000c0040008000000000000000000000000000000000000000080000000000030000000000000000000006000000000000000000000000000000000001
% ff0000000c18c0008000000000000000000000000000000000000000300000000000040000000000000000000000000000000000000000000000000000000001
% 1ff800000c0fc0008000000000000000000000000000000000000000c00000000000080000000000000000000040000000000000000000000000000000000001
% 00fc00000c0f80008000000000000000000000000000000000000001000000000000000000000000000000000380000000000000000000000000000000000001
% 007c0000000000008000000000000000000000000000000000000006000000000000000000000000000000000400000000000000000000000000000000000001
% 07e00000000000008000000000000000000000000000000000000018000000000002000000000000000000000000000000000000000000000000000000000001
% 7f00000000000000800000000000000000000000000000000000006000000000000400000000000000000000c000000000000000000000000000000000000001
% f8000000000000008000000000000000000000000000000000000080000000000018000000000000000000000000000000000000000000000000000000000001
% fe000000000000008000000000000000000000000000000000000300000000000020000000000000000000080000000000000000000000000000000000000001
% 1f800000000000008000000000000000000000000000000000000c00000000000000000000000000000000700000000000000000000000000000000000000001
% 01f80000000000008000000000000000000000000000000000001000000000000000000000000000000000800000000000000000000000000000000000000001
% 003c0000000000008000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000001
% 03fc0000000000008000000000000000000000000000000000018000000000001000000000000000000010000000000000000000000000000000000000000001
% ffe00000000000008000000000000000000000000000000000060000000000006000000000000000000000000000000000000000000000000000000000000001
% fe000000000000008000000000000000000000000000000000080000000000008000000000000000000300000000000000000000000000000000000000000001
% c0000000000000008000000000000000000000000000000000300000000000010000000000000000000c00000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000c00000000000000000000000000000003000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000001
% 001c0000000000008000000000000000000000000000000006000000000000400000000000000000020000000000000000000000000000000000000000000001
% 00fc0000000000008000000000000000000000000000000018000000000000800000000000000000000000000000000000000000000000000000000000000001
% 07f00000000000008000000000000000000000000000000060000000000003000000000000000000600000000000000000000000000000000000000000000001
% 7fc00000000000008000000000000000000000000000000080000000000004000000000000000001800000000000000000000000000000000000000000000001
% f8c00000000000008000000000000000000000000000000300000000000000000000000000000006000000000000000000000000000000000000000000000001
% e0c00000000000008000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000000000000000000001
% 3fc00000000000008000000000000000000000000000001000000000000100000000000000000040000000000000000000000000000000000000000000000001
% 1fe00000000000008000000000000000000000000000006000000000000200000000000000000000000000000000000000000000000000000000000000000001
% 03fc0000000000008000000000000000000000000000018000000000000c00000000000000000800000000000000000000000000000000000000000000000001
% 007c0000000000008000000000000000000000000000060000000000001000000000000000003000000000000000000000000000000000000000000000000001
% 0004000000000000800000000000000000000000000008000000000000000000000000000000c000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000c00000000000000000000000000000180000000000000000000000000000000000000000000000000001
% 000040000000000080000000000000000000000000010000000000000c0000000000000000000000000000000000000000000000000000000000000000000001
% 7001c000000000008000000000000000000000000006000000000000300000000000000001000000000000000000000000000000000000000000000000000001
% 3fff0000000000008000000000000000000000000018000000000000400000000000000006000000000000000000000000000000000000000000000000000001
% 0ffc0000000000008000000000000000000000000060000000000000000000000000000018000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000300000000000000000000000000000300000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000c00000000000030000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000001000000000000040000000000000002000000000000000000000000000000000000000000000000000000001
% 00e0000000000000800000000000000000000000600000000000018000000000000000c000000000000000000000000000000000000000000000000000000001
% 31f80000000000008000000000000000000000018000000000000000000000000000030000000000000000000000000000000000000000000000000000000001
% 719c0000000000008000000000000000000000060000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% e38c0000000000008000000000000000000000080000000000000000000000000000400000000000000000000000000000000000000000000000000000000001
% c30c0000000000008000000000000000000000300000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% c30c0000000000008000000000000000000000c00000000000018000000000000004000000000000000000000000000000000000000000000000000000000001
% c20c0000000000008000000000000000000001000000000000060000000000000018000000000000000000000000000000000000000000000000000000000001
% c60c00000000000080000000000000000000060000000000000800000000000000e0000000000000000000000000000000000000000000000000000000000001
% 7e3c0000000000008000000000000000000018000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 3c780000000000008000000000000000000060000000000000000000000000000800000000000000000000000000000000000000000000000000000000000001
% 00600000000000008000000000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 0000000400801f808000000000000000000300000000000006000000000000008000000000000000000000000000000000000000000000000000000000000001
% 0000000c01801f808000000000000000000c00000000000008000000000000030000000000000000000000000000000000000000000000000000000000000001
% 0000001c0180180080000000000000000010000000000000300000000000001c0000000000000000000000000000000000000000000000000000000000000001
% 0000003c078010008000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 0000000c078016008000000000000000018000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000001
% 0000000c05801f008000000000000000060000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 0000000c09801180fc0000000000000008000000000000180000000000000000000000000000000000000000000000000000000000000000000000000000003f
% 0000000c1980008080000000000000003000000000000020000000000000e0000000000000000000000000000000000000000000000000000000000000000001
% 0000000c1fc000808000000000000000c0000000000000c000000000000300000000000000000000000000000000000000000000000000000000000000000001
% 0000000c1fc031808000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 0000000c01831f808000000000000006000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000001
% 0000000c01831f008000000000000018000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000020000000000000200000000000040000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000000080000000000000c0000000000000c00000000000180000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000300000000000003000000000000600000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 0000000000000000800000000000100000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000018000000000000080000000000080000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000020000000000000300000000000300000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000000080000000000c0000000000000400000000000c00000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000300000000000001800000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000002000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000040000000000600000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000180000000001800000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000600000000002000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000010000000000c00000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000060000000003000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000080000000004000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000100000000040000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000004000000001800000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000018000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000020000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000040000000080000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000001000000003000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 0000000000000000800000000000000200000001c000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 0000000000000000800000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000800000038000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000003000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 0000000000000000800000000000000001c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000200000060000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000001800000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000040080008000000002000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000c0180008000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000001c0180008000000000000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000003c07800080000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000c0780008000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000c0580008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000c098000fc0000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003f
% 000000000c1980008000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000c1fc0008000000000060000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000c1fc0008000000000180000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000c0180008000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000c0180008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 0000000403001f808000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 0000000c0f801f808000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 0000001c08c018008000000002000000000000000000800000000000000000200000000000000000040000000000000000010000000000000000002000000001
% 0000003c08c010008000000002000000000000000000800000000000000000200000000000000000040000000000000000010000000000000000002000000001
% 0000000c08c016008000000002000000000000000000800000000000000000200000000000000000040000000000000000010000000000000000002000000001
% 0000000c03801f008000000002000000000000000000800000000000000000200000000000000000040000000000000000010000000000000000002000000001
% 0000000c03c011808000000002000000000000000000800000000000000000200000000000000000040000000000000000010000000000000000002000000001
% 0000000c00c00080ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% 0000000c184000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000c184031800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000c0fc31f800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000c07831f00000000000c0000000000000000600040000000000000c001800000000000000c001800000000000000c000400000000000006003f0000000
% 0000000000000000000000003e0000000000000001f000c0000000000003e007c00000000000003e007c00000000000003e000c0000000000001f003f0000000
% 0000000000000000000000002300000000000000011801c0000000000002300460000000000000230046000000000000023000c0000000000001180300000000
% 0000000000000000000000006100000000000000030803c0000000000006100c20000000000000610046000000000000061003c0000000000003080200000000
% 0000000000000000000000006100000000000000030800c0000000000006100c20000000000000610046000000000000061003c00000000000030802c0000000
% 0000000000000000000000000300000000000000001800c000000000000030006000000000000003001c000000000000003002c00000000000001803e0000000
% 0000000000000000000000000600000000000000003000c00000000000006000c000000000000006001e000000000000006004c0000000000000300230000000
% 0000000000000000000000001c0000000000000000e000c0000000000001c003800000000000001c000600000000000001c00cc0000000000000e00010000000
% 0000000000000000000000003000000000000000018000c00000000000030006000000000000003000c200000000000003000fe0000000000001800010000000
% 0000000000000000000000006000000000000000030000c0000000000006000c000000000000006000c200000000000006000fe0000000000003000630000000
% 0000000000000000000000007f0000000000000003f860c0000000000007f0cfe00000000000007f0c7e00000000000007f0c0c0000000000003f863f0000000
% 0000000000000000000000007f0000000000000003f860c0000000000007f0cfe00000000000007f0c3c00000000000007f0c0c0000000000003f863e0000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000c00000c00000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000c00000c00060000000fe0f80000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000c00000c00060000000fe1fc0000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000c00000c00040000000c018c0000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000001f0c31f9e0fc07c0c3e0c5e0c618c038c0000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000003f0e31ffe0fe0fe0c7e0c7f0c730f83060000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000003186318e30c30c60c6308618c730fe3060000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000003006618c30c31830c60086186f30c63060000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000003e06618c30c31830c7c186186f20073060000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000787418c30c31830c0f186186960033060000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000183c18c30c31830c031061879e18318c0000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000003183c18c30c31c60c633061839e1c619c0000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000003f83818c30fe0fe0c7f307f039c0fe1fc0000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000003f01818c30fc07c0c7e207e030c0fc0f80000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000001800000000000000006000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000003000000000000000006000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000007000000000000000006000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000006000000000000000006000000000000000000000000000000000000000000000000000
%%EndImage
%%EndPreview
/InitDictCount countdictstack def
gsave
save
mark
newpath
/showpage {} def
%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 { } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	
	
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 612 792 0 1 5 FMDOCUMENT
0 0 /Helvetica FMFONTDEFINE
1 0 /Helvetica-Narrow FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "1" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 0 0 0 1 1 1]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 53 198 539 598 486 400 59 195.5 FMBEGINEPSF
%%BeginDocument: /home/kavcic/tex/papers/TransMAG97/m.epsi
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 53 198 539 598
save
countdictstack
mark
newpath
/showpage {} def
%!PS-Adobe-2.0 
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: margin.ps
%%CreationDate: 04/27/97  23:10:22
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Pages: (atend)
%%BoundingBox: (atend)
%%EndComments

%%BeginProlog

% MathWorks dictionary
/MathWorks 150 dict begin

% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef

% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
/rm /rmoveto ldef
/rl /rlineto ldef
/s /show ldef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef

% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef

% orientation switch
/portraitMode 	0 def
/landscapeMode 	1 def

% coordinate system mappings
/dpi2point 0 def

% font control
/FontSize 0 def
/FMS {
	/FontSize xstore		%save size off stack
	findfont
	[FontSize 0 0 FontSize neg 0 0]
	makefont
	setfont
	}bdef

/reencode {
exch dup where
{pop load} {pop StandardEncoding} ifelse
exch
dup 3 1 roll
findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def
  currentdict
end
definefont pop
} bdef

/isroman {
findfont /CharStrings get
/Agrave known
} bdef

/FMSR {
3 1 roll 1 index
dup isroman
{reencode} {pop pop} ifelse
exch FMS
} bdef

/csm {
	1 dpi2point div -1 dpi2point div scale
	neg translate
	landscapeMode eq {90 rotate} if
	} bdef

% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4 dpi2point mul] 0 setdash } bdef

% macros for lines and objects
/L {
	lineto
	stroke
	} bdef
/MP {
	3 1 roll moveto
	1 sub {rlineto} repeat
	} bdef
/AP {
	{rlineto} repeat
	} bdef
/PP {
	closepath fill
	} bdef
/DP {
	closepath stroke
	} bdef
/MR {
	4 -2 roll moveto
	dup  0 exch rlineto
	exch 0 rlineto
	neg  0 exch rlineto
	closepath
	} bdef
/FR {
	MR stroke
	} bdef
/PR {
	MR fill
	} bdef
/L1i {
	{ currentfile picstr readhexstring pop } image
	} bdef

/tMatrix matrix def
/MakeOval {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 0 360 arc
	tMatrix setmatrix
	} bdef
/FO {
	MakeOval
	stroke
	} bdef
/PO {
	MakeOval
	fill
	} bdef

/PD {
	2 copy moveto lineto stroke
	} bdef


currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    50   197   543   604
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: graph1 1
bplot

/dpi2point 12 def
portraitMode 0216 7344 csm

  395    92  5910  4884 MR c np
76 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

1 j
c1
   0    0 6914 5187 PR
6 w
DO
4 w
SO
6 w
c0
 898 4615 mt 6256 4615 L
 898  389 mt 6256  389 L
6256 4615 mt 6256  389 L
 898 4615 mt  898  389 L
6256 4615 mt 6256 4615 L
 898 4615 mt  898 4615 L
 898 4615 mt 6256 4615 L
 898 4615 mt  898  389 L
 898 4615 mt  898 4615 L
1345 4615 mt 1345 4561 L
1345  389 mt 1345  443 L
1305 4784 mt 
(2) s
2238 4615 mt 2238 4561 L
2238  389 mt 2238  443 L
2138 4784 mt 
(2.1) s
3131 4615 mt 3131 4561 L
3131  389 mt 3131  443 L
3031 4784 mt 
(2.2) s
4023 4615 mt 4023 4561 L
4023  389 mt 4023  443 L
3923 4784 mt 
(2.3) s
4917 4615 mt 4917 4561 L
4917  389 mt 4917  443 L
4817 4784 mt 
(2.4) s
5810 4615 mt 5810 4561 L
5810  389 mt 5810  443 L
5710 4784 mt 
(2.5) s
 898 4615 mt  952 4615 L
6256 4615 mt 6202 4615 L
 583 4668 mt 
(13.5) s
 898 3911 mt  952 3911 L
6256 3911 mt 6202 3911 L
 703 3964 mt 
(14) s
 898 3206 mt  952 3206 L
6256 3206 mt 6202 3206 L
 583 3259 mt 
(14.5) s
 898 2502 mt  952 2502 L
6256 2502 mt 6202 2502 L
 703 2555 mt 
(15) s
 898 1798 mt  952 1798 L
6256 1798 mt 6202 1798 L
 583 1851 mt 
(15.5) s
 898 1093 mt  952 1093 L
6256 1093 mt 6202 1093 L
 703 1146 mt 
(16) s
 898  389 mt  952  389 L
6256  389 mt 6202  389 L
 583  442 mt 
(16.5) s
 898  389 mt 6256  389 L
 898 4615 mt 6256 4615 L
 898 4615 mt  898  389 L
6256 4615 mt 6256  389 L
 898  389 mt  898  389 L
6256  389 mt 6256  389 L
gs 898 389 5359 4227 MR c np
4465 -2606 1345 3418 2 MP stroke
DA
4465 -2747 1345 3840 2 MP stroke
DD
4465 -2042 1345 3981 2 MP stroke

gr 
DD
3121 4944 mt 
(symbols/pw50) s
2269  274 mt 
(S\(AWG\)NR needed for error rate of 1e-5) s
 529 2870 mt  -90 rotate
(S\(AWG\)NR) s
90 rotate
2327  794 mt 
(EPR4 \(Euclidian metric\)) s
2327 1217 mt 
(EPR4 \(C1 metric\)) s
2327 1639 mt 
(EPR4 \(C2 metric\)) s
gs 898 389 5359 4227 MR c np
SO
893 0 1345 741 2 MP stroke
DA
893 0 1345 1164 2 MP stroke
DD
893 0 1345 1586 2 MP stroke

gr 
SO

end

eplot
%%EndObject graph 1

epage
end

showpage

%%Trailer
%%BoundingBox:    50   197   543   604
%%Pages: 001
%%EOF
cleartomark
countdictstack exch sub { end } repeat
restore

%%EndDocument
FMENDEPSF
0 0 0 0 1 1 1 K
92 172 556 222 R
7 X
V
3 H
2 Z
N
133 582 506 615 R
V
N
0 0 0 1 0 0 0 K
0 21 Q
0 X
0 0 0 1 0 0 0 K
(symbols/pw50) 255 187 T
0 18 Q
(2) 131 209 T
(2.1) 200.15 209 T
(2.2) 271.02 209 T
(2.3) 347.08 209 T
0 0 0 0 1 1 1 K
47 211 94 624 R
7 X
0 0 0 0 1 1 1 K
V
N
0 0 0 1 0 0 0 K
0 21 Q
0 X
0 0 0 1 0 0 0 K
(S\050A) 0 -270 48 349 TF
(WG\051NR) 0 -270 48 383.23 TF
0 0 0 0 1 1 1 K
130 461.4 346.33 562 R
7 X
0 0 0 0 1 1 1 K
V
0.5 H
N
0 0 0 1 0 0 0 K
J
139.46 548.63 188.39 548.63 2 L
J
139.46 548.63 145.21 548.63 2 L
0 X
0 0 0 1 0 0 0 K
N
[10.626 6.006 1.386 6.006] 10.626 I
145.21 548.63 182.64 548.63 2 L
N
J
182.64 548.63 188.39 548.63 2 L
N
J
139.46 518.54 187.55 518.54 2 L
J
139.46 518.54 143.21 518.54 2 L
N
[8.824 7.647] 8.824 I
143.21 518.54 183.8 518.54 2 L
N
J
183.8 518.54 187.55 518.54 2 L
N
J
139.46 488.45 188.39 488.45 2 L
N
1 F
(EPR4 \050C2 metric\051) 196.28 541.9 T
(EPR4 \050C1 metric\051) 195.33 513.48 T
1 20 Q
(EPR4) 196.28 486.77 T
J
0 18 Q
(2.4) 423.14 209 T
(2.5) 495.75 209 T
(16.5) 59 570.23 T
1 20 Q
(\050Euclidian metric\051) 196.28 470.06 T
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 21 Q
(S\050A) 137 589 T
(WG\051NR needed for error rate of 10) 171.23 589 T
0 16.8 Q
(-5) 495.68 597.4 T
0 18 Q
(16) 66.51 511.82 T
(15.5) 59 453.42 T
(15) 66.51 395.01 T
(14.5) 59 336.6 T
(14) 66.51 278.19 T
(13.5) 59 219.78 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1" 1
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Descend
%%Pages: 1
%%DocumentFonts: Helvetica
%%+ Helvetica-Narrow
%%EOF
countdictstack InitDictCount sub { end } repeat
cleartomark
restore
grestore

%%EndDocument
 @endspecial 88 4954 a(Figure)g(9:)43 b(S\(A)-11 b(W)m(G\)NR)33
b(margins)e(needed)j(for)e(error)g(rate)h(of)f(10)2550
4918 y Fd(\000)p Fi(5)2676 4954 y Fq(with)h(EPR4)f(detectors.)p
eop
%%Page: 26 26
26 25 bop -133 -101 a Fm(IEEE)32 b(T)-7 b(r)i(ansactions)35
b(on)e(Magnetics)p Fl(,)d(v)m(ol.)h(34,)h(Ma)m(y)f(1998)1805
b Fq(26)855 2121 y @beginspecial 42 @llx 185 @lly 545
@urx 606 @ury 2370 @rwi @setspecial
%%BeginDocument: pr4three0.epsi
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 42 185 545 606
%%BeginPreview: 504 422 1 422
% 000000000000000000000ff03fc00000000000000000000000000000000000000c00001800000000000000000600000c00007f83860c000000000000000000
% 000000000000000000000ff83ff006000000001f0007c00000000c00000000000c00001800c3e000000000000600000c00067fc3870c1fc1f0200000000000
% 000000000000000000000c1c303006000003003f800fe00001f60c00000000000c0000180187f000000000000600000c000660e1870c1fc3f8300000000000
% 000000000000000000000c0c30100e0000030071801c600007fe0800000000000c00001801863000000000000600000c000460618f1c180318300000000000
% 000000000000000000000c0c30101e001f87c060c01870000f9e1803e1863f3c0fc0f81803063001f0c31f9e07e07c0c3e0c60618f18180718100000000000
% 000000000000000000000c0c303036001dc7c000c01830001e0c1807e1c63ffc0fe1fc1803003003f0e31ffe07f0fe0c7e0c60618d981f060c180000000000
% 000000000000000000000c1c3070360018c30001801870001c0c100630c631c60c318c180301f003186318e30618c60c630860e0cd981fc60c180000000000
% 000000000000000000000ff83fe0660000c30003000c7000380c100600cc31860c3306180301f003006618c30619830c60087fc0d99818c60c180000000000
% 000000000000000000000ff03ff0c6000fc3000e000ff00038183007c0cc31860c33061803003803e06618c30619830c7c187f80d8b000e60c180000000000
% 000000000000000000000c003070ff801cc3003c0007b00030183000f0e831860c330618030c1800787418c30619830c0f186000d0f000660c180000000000
% 000000000000000000000c003030ff8038c300300000600030182000307831860c330618030c1800183c18c30619830c03106000f0f0306318180000000000
% 000000000000000000000c003030060031c30060001ce00018396006307831860c338c18030e3003183c18c30619c60c6330600070f038c338180000000000
% 000000000000000000000c00301006003be3807fc30fc0001cff6007f07031860fe1fc180307f003f83818c307f0fe0c7f30600070701fc3f8180000000000
% 000000000000000000000c00301806001fe3c07fc30f800007de4007e03031860fc0f8180303e003f01818c307e07c0c7e20600060601f81f0100000000000
% 000000000000000000000000000000000000000000000000000000000030000000000000010000000018000000000000000000000000000000100000000000
% 000000000000000000000000000000000000000000000000000000000060000000000000018000000030000000000000000000000000000000300000000000
% 0000000000000000000000000000000000000000000000000000000000e0000000000000008000000070000000000000000000000000000000200000000000
% 0000000000000000000000000000000000000000000000000000000000c000000000000000c000000060000000000000000000000000000000600000000000
% 000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000100c00100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000303e1c100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000703300100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000f02300100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000306100100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000306100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000030610000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% 000000306100008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000306100008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000302300008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000303e00008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000301e00008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000f46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c467
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000f46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c467
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000003000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000180002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000f46231388e46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231988c46231188c46231188c467
% 000000000000008000000c01002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000200c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000180000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000008042000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000006030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000800000000180c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000402000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000003800000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000002400000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 00000000000000f46231188c47231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c467
% 00000000000000800000000000c080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000003060000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000002010000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 00000000000000800000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000042000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000021800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000002018400000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000002006300000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 0000000000000080000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000098000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000002000064000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000000000013000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000f46231188c46231188cc6231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c467
% 000000000000008000000000000000000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000002000000100000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 0000000000000080000000000020000001c0000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 0000000000000080000000000000000000e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000038000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000002000000003000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000000000000000c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000180000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000002000000000040800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000002000000000030800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000001c00000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000002000000000000f00000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 00000000000000f46231188c46231188c462311a8c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c467
% 000000000000008000000000000000000000000180000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000002000000000000833000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 00000000000000800000000000200000000000080c800000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000000000000000000002600000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000001800000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000002000000000000800300000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000000000000000000000086000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000061800000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000010e00000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000800000000000200000000000080000c000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000002000000000000800002000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000000000000000000000001808000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000706000000000000000000000000000000000000000000000000000000000000000000000000000001
% 0000000000000080000000000000000000000000000000c1800000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000002000000000000800000038000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000001c30000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000800000000000000000000000000000000030c000000000000000000000000000000000000000000000000000000000000000000000000001
% 0000000000000080000000000020000000000008000000000e3400000000000100000000000080000000000020000000000008000000000004000000000001
% 00000000000000f46231188c46231188c46231188c46231189c46231188c46231188c46231188c46231188c46231188c46231988c46231188c46231188c467
% 000000000000008000000000000000000000000000000000007000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000c60000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000398000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000002000000000000800000000000466000000000100000000000080000000000020000000000008000000000004000000000001
% 00000000000000800000000000000000000000000000000000001c000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000ec0000000000000000000000000000000000000000000000000000000000000000000001
% 0000000000000080000000000020000000000008000000000004001b0000000100000000000080000000000020000000000008000000000004000000000001
% 00000000000000800000000000200000000000080000000000040007c000000100000000000080000000000020000000000008000000000004000000000001
% 00000000000000800000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000003800000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000780000000000000000000000000000000000000000000000000000000000000000001
% 0000000000000080000000000020000000000008000000000004000001e0000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000000000000000000000000000000000000038000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000800000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000001800000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000002000000000000800000000000400000000700100000000000080000000000020000000000008000000000004000000000001
% 0000000000000080000000000020000000000008000000000004000000000c0100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000000000000000000000000000000000000000038000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000001c00000000000000000000000000000000000000000000000000000000000001
% 000c00000000008000000000002000000000000800000000000400000000000700000000000080000000000020000000000008000000000004000000000001
% c30c000000000080000000000000000000000000000000000000000000000001e0000000000000000000000000000000000000000000000000000000000001
% c30c00000000008000000000000000000000000000000000000000000000000078000000000000000000000000000000000000000000000000000000000001
% c30c00000000008000000000000000000000000000000000000000000000000007000000000000000000000000000000000000000000000000000000000001
% c30c00000000008000000000002000000000000800000000000400000000000100c00000000080000000000020000000000008000000000004000000000001
% c30c00000000008000000000002000000000000800000000000400000000000100f80000000080000000000020000000000008000000000004000000000001
% c30c00000000008000000000000000000000000000000000000000000000000000360000000000000000000000000000000000000000000000000000000001
% c30c0000000000800000000000000000000000000000000000000000000000000009c000000000000000000000000000000000000000000000000000000001
% fffc00000000008000006000000000000000000000000000000000000000000000003800000000000000000000000000000000000000000000000000000001
% fffc0000000000f46231188c46231188c46231188c46231188c46231188c46231188c66231188c46231188c46231188c46231988c46231188c46231188c467
% 0000000000000080000000000000000000000000000000000000000000000000000019f0000000000000000000000000000000000000000000000000000001
% 00000000000000800000060000000000000000000000000000000000000000000000060fc00000000000000000000000000000000000000000000000000001
% 0000000000000080000001000000000000000000000000000000000000000000000001803f8000000000000000000000000000000000000000000000000001
% 000000000000008000000080002000000000000800000000000400000000000100000003807e80000000000020000000000008000000000004000000000001
% c000000000000080000000400020000000000008000000000004000000000001000000007001f8000000000020000000000008000000000004000000000001
% c00000000000008000000000000000000000000000000000000000000000000000000000003007f00000000000000000000000000000000000000000000001
% c00000000000008000000000000000000000000000000000000000000000000000000000000f000fc000000000000000000000000000000000000000000001
% c00000000000008000000004000000000000000000000000000000000000000000000000000000003f00000000000000000000000000000000000000000001
% fffc00000000008000000000002000000000000800000000000400000000000100000000000083f000fe000020000000000008000000000004000000000001
% fffc00000000008000000000000000000000000000000000000000000000000000000000000000000001f80000000000000000000000000000000000000001
% c00000000000008000000000400000000000000000000000000000000000000000000000000000003e0007e000000000000000000000000000000000000001
% c00000000000008000000000200000000000000000000000000000000000000000000000000000000100001fc0000000000000000000000000000000000001
% c0000000000000800000000018200000000000080000000000040000000000010000000000008000000380003f000000000008000000000004000000000001
% c00000000000008000000000002000000000000800000000000400000000000100000000000080000000600020fe0000000008000000000004000000000001
% 00000000000000800000000000000000000000000000000000000000000000000000000000000000000000700001f800000000000000000000000000000001
% 001c00000000008000000000008000000000000000000000000000000000000000000000000000000000000e000007e0000000000000000000000000000001
% 00fc0000000000800000000000800000000000000000000000000000000000000000000000000000000000000600001ff00000000000000000000000000001
% 07f000000000008000000000002000000000000800000000000400000000000100000000000080000000000021e000000ff808000000000004000000000001
% 7fc0000000000080000000000000000000000000000000000000000000000000000000000000000000000000000040000007fc000000000000000000000001
% f8c000000000008000000000000c00000000000000000000000000000000000000000000000000000000000000003e00000003fe0000000000000000000001
% e0c00000000000800000000000020000000000000000000000000000000000000000000000000000000000000000000000000001fe00000000000000000001
% 3fc000000000008000000000002100000000000800000000000400000000000100000000000080000000000020000007e000080001ff000004000000000001
% 1fe000000000008000000000002080000000000800000000000400000000000100000000000080000000000020000000007e08000000ff8004000000000001
% 03fc0000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000fe00000007fc0000000000001
% 007c0000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000fe0000003fe00000000001
% 00040000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000fe000001fe000000001
% 00000000000000800000000000200000000000080000000000040000000000010000000000008000000000002000000000000800000000fe04001ff0000001
% 00000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000fe0000c000001
% 00000000000000800000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000fe00000001
% 00040000000000800000000000000060000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e000001
% 7efc00000000008000000000002000100000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 67f000000000008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% c3c000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% c18000000000008000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% c18000000000008000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% c18000000000008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% c18000000000008000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% c18000000000008000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% fffc00000000008000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% fffc00000000008000000000002000000200000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000002000000100000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000003c08000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000006608000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000006208000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000608000000000000000000000c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000806000c08000000000002000000000200800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 00000181f0e3808000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000403819807008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 7efc07811806008000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 67f001830807e0fc6231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c47f
% c3c001830800008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% c18001830800008000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% c18001830800008000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% c18001830800008000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% c18001811800008000000000002000000000000c00000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% c1800181f000008000000000002000000000000a00000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% fffc0180f000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% fffc00000000008000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000f46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c467
% 000000000000008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000001800000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 0fe000000000008000000000002000000000000800400000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 3ff000000000008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 703800000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 601c00000000008000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000001
% c00c0000000000f46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c467
% c00c00000000008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% c00c00000000008000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000000000000000000001
% c00c00000000008000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000001
% c00c00000000008000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 601800000000008000000000002000000000000800000c00000400000000000100000000000080000000000020000000000008000000000004000000000001
% 787800000000008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 3ff000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 0fc0000000000080000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000f46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231988c46231188c46231188c467
% 000000000000008000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000400000000008000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000001
% 7efc00000000008000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000000000000000001
% 67f000000000008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% c3c000000000008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% c18000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% c18000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% c18000000000008000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000000000000001
% c18000000000008000000000002000000000000800000000002400000000000100000000000080000000000020000000000008000000000004000000000001
% c18000000000008000000000000000000000000000000000001800000000000000000000000000000000000000000000000000000000000000000000000001
% fffc00000000008000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000001
% fffc0000000000f46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c467
% 000000000000008000000000002000000000000800000000000440000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000002000000000000800000000000440000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000000000001
% 000400000000008000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000001
% 7efc00000000008000000000002000000000000800000000000401800000000100000000000080000000000020000000000008000000000004000000000001
% 67f000000000008000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000001
% c3c000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% c18000000000008000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000001
% c18000000000008000000000002000000000000800000000000400040000000100000000000080000000000020000000000008000000000004000000000001
% c18000000000008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% c18000000000008000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000000001
% c1800000000000f46231188c46231188c46231188c46231188c46231388c46231188c46231188c46231188c46231188c46231188c46231188c46231188c467
% fffc00000000008000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000001
% fffc00000000008000000000002000000000000800000000000400000400000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000c00000000008000000000002000000000000800000000000400000004000100000000000080000000000020000000000008000000000004000000000001
% c30c00000000008000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000001
% c30c00000000008000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000001
% c30c00000000008000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000001
% c30c00000000008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% c30c00000000008000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000001
% c30c00000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% c30c00000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% fffc00000000008000000000002000000000000800000000000400000000006100000000000080000000000020000000000008000000000004000000000001
% fffc00000000008000000000002000000000000800000000000400000000001100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000001
% 00000000000000f46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c467
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000002000000000000800000000000400000000000160000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 0000000000000087ffffffffffffffffffffffffffffffffffffffffffffffff06000000000000000000000000000000000000000000000000000000000001
% 000000000000008400000000000000000000000000000000000000000000000101000000000080000000000020000000000008000000000004000000000001
% 000000000000008400000000000000000000000000000000000000000000000100c00000000080000000000020000000000008000000000004000000000001
% 000000000000008400000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000001
% 000000000000008400000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000001
% 000000000000008400000000000000000000000000000000000000000000000100060000000000000000000000000000000000000000000000000000000001
% 000000000000008400000000000000000000000000000000000000000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008400000000000000000007000000000000000000000000000100000000000000000000000000000000000000000000000000000000000001
% 00000000000000840000000000000000001f81c000000000010000000000000100002000000000000000000000000000000000000000000000000000000001
% 000000000000008400000000000000000039c3e000000004010000000000000100001800000000000000000000000000000000000000000000000000000001
% 000000000000008400000000000000000030c33000000004000000000000000100000400000080000000000020000000000008000000000004000000000001
% 000000000000008400000000000000000020463001cc0e040c0e00000000000100000200000080000000000020000000000008000000000004000000000001
% 000000000000008400000000000000000060063007fe1f0f3d1f80000000000100000020000000000000000000000000000000000000000000000000000001
% 000000000000008400000000000000000060063006731984311980000000000100000000000000000000000000000000000000000000000000000000000001
% 00000000000000840fe0381fffc0703fc060003006633184211080000000000100000001c00000000000000000000000000000000000000000000000000001
% 000000000000008400000000000000000060006004633184213000000000000100000000300080000000000020000000000008000000000004000000000001
% 00000000000000840000000000000000006040e004633f84213000000000000100000000008000000000000000000000000000000000000000000000000001
% 00000000000000f40000000000000000002043800463300421300000000000011188c46231188c46231188c46231188c46231188c46231188c46231188c467
% 000000000000008400000000000000000030c30004633084213080000000000100000000000700000000000000000000000000000000000000000000000001
% 000000000000008400000000000000000030c600046311842111800000000001000000000000c0000000000020000000000008000000000004000000000001
% 00000000000000840000000000000000001987f004631b86211980000000000100000000000082000000000020000000000008000000000004000000000001
% 00000000000000840000000000000000001f87f004631f07211f00000000000100000000000000200000000000000000000000000000000000000000000001
% 0000000000000084000000000000000000000000000000000000000000000001000000000000001c0000000000000000000000000000000000000000000001
% 000000000000008400000000000000000000000000000000000000000000000100000000000000030000000000000000000000000000000000000000000001
% 000000000000008400000000000000000000000000000000000000000000000100000000000080000800000020000000000008000000000004000000000001
% 000000000000008400000000000000000000000000000000000000000000000100000000000000000080000000000000000000000000000000000000000001
% 000000000000008400000000000000000000000000000000000000000000000100000000000000000078000000000000000000000000000000000000000001
% 000000000000008400000000000000000000000000000000000000000000000100000000000000000004000000000000000000000000000000000000000001
% 000000000000008400000000000000000000000000000000000000000000000100000000000080000000200020000000000008000000000004000000000001
% 000000000000008400000000000000000000000000000000000000000000000100000000000080000000020020000000000008000000000004000000000001
% 00000000000000840000000000000000000000000000000000000000000000010000000000000000000001e000000000000000000000000000000000000001
% 000000000000008400000000000000000000000000000000000000000000000100000000000000000000001000000000000000000000000000000000000001
% 000000000000008400000000000000000000000000000000000000000000000100000000000000000000000080000000000000000000000000000000000001
% 000000000000008400000000000000000000000000000000000000000000000100000000000080000000000028000000000008000000000004000000000001
% 000000000000008400000000000000000000000000000000000000000000000100000000000000000000000007800000000000000000000000000000000001
% 000000000000008400000000000000000000000000000000000000000000000100000000000000000000000000400000000000000000000000000000000001
% 000000000000008400000000000000000000000000000000000000000000000100000000000000000000000000060000000000000000000000000000000001
% 00000000000000840000000000000000000e000000000000000000000000000100000000000080000000000020003000000008000000000004000000000001
% 00000000000000840000000000000000003f004000000000010000000000000100000000000080000000000020000e00000008000000000004000000000001
% 00000000000000840000000000000000007380c000000008010000000000000100000000000000000000000000000100000000000000000000000000000001
% 00000000000000840000000000000000006180c000000008000000000000000100000000000000000000000000000018800000000000000000000000000001
% 00000000000000840000000000000000004083c003981c08181c000000000001000000000000000000000000000000007c0000000000000000000000000001
% 0000000000000084000000000000000000c003c00ffc3e1e793f00000000000100000000000080000000000020000000002008000000000004000000000001
% 0000000000000084000000000000000000c000c00ce633086133000000000001000000000000000000000000000000000001e0000000000000000000000001
% 0000000000000084000000000000000000c000c00cc66308412100000000000100000000000000000000000000000000000018c00000000000000000000001
% 00000000000000840f81ff03fe07fc0fc0c000c008c66308416000000000000100000000000000000000000000000000000000060000000000000000000001
% 0000000000000084000000000000000000c080c008c67f0841600000000000010000000000008000000000002000000000000801e000000004000000000001
% 00000000000000840000000000000000004080c008c66008416000000000000100000000000080000000000020000000000008000310000004000000000001
% 00000000000000f40000000000000000006180c008c6610841610000000000011188c46231188c46231188c46231188c46231188c46fb1188c46231188c467
% 00000000000000840000000000000000006180c008c62308412300000000000100000000000000000000000000000000000000000000040000000000000001
% 00000000000000840000000000000000003300c008c6370c413300000000000100000000000000000000000000000000000000000000003c00000000000001
% 00000000000000840000000000000000003f00c008c63e0e413e0000000000010000000000008000000000002000000000000800000000031c000000000001
% 000000000000008400000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000e00000000001
% 0000000000000084000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000001c0000000001
% 000000000000008400000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000006200000001
% 0000000000000084000000000000000000000000000000000000000000000001000000000000800000000000200000000000080000000000040001f0000001
% 000000000000008400000000000000000000000000000000000000000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008400000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000001
% 000000000000008400000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000001
% 000000000000008400000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000001
% 000000000000008400000000000000000000000000000000000000000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008400000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000001
% 000000000000008400000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000001
% 000000000000008400000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000001
% 000000000000008400000000000000000000000000000000000000000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008400000000000000000000000000000000000000000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008400000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000001
% 000000000000008400000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000001
% 00000000000000840000000000000000003f800006203100000000000080200100000000000000000000000000000000000000000000000000000000000001
% 00000000000000840000000000000000003f800006203100000000000080200100000000000080000000000020000000000008000000000004000000000001
% 000000000000008400000000000000000020000006003000000000000080000100000000000000000000000000000000000000000000000000000000000001
% 0000000000000084000000000000000000200461e623f13c17005de0f1ea21e100000000000000000000000000000000000000000000000000000000000001
% 0000000000000084000000000000000000200463f623f17e1f007fe1f1ee23f100000000000000000000000000000000000000000000000000000000000001
% 00000000000000840000000000000000003f046336263162198066211888233100000000000080000000000020000000000008000000000004000000000001
% 00000000000000840000000000000000003f046636263102118046231888263100000000000080000000000020000000000008000000000004000000000001
% 00000000000000840000000000000000002004660626311e11804623f888260100000000000000000000000000000000000000000000000000000000000001
% 00000000000000840fffffffffffffffc02004660626317e11804623f888260100000000000000000000000000000000000000000000000000000000000001
% 000000000000008400000000000000000020046636263162118046230088263100000000000000000000000000000000000000000000000000000000000001
% 000000000000008400000000000000000020046236263166118046211888223100000000000080000000000020000000000008000000000004000000000001
% 00000000000000840000000000000000003f86e33627716e11804621b088233100000000000000000000000000000000000000000000000000000000000001
% 00000000000000840000000000000000003f87e3e623f17b11804621f0e823e100000000000000000000000000000000000000000000000000000000000001
% 000000000000008400000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000001
% 000000000000008400000000000000000000000000000000000000000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008400000000000000000000000000000000000000000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008400000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000001
% 000000000000008400000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000001
% 000000000000008400000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000001
% 000000000000008400000000000000000000000000000000000000000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000001e08400000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000001
% 000000000003308400000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000001
% 000000000003308400000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000001
% 000000000000208400000000000000000000000000000000000000000000000100000000000080000000000020000000000008000000000004000000000001
% 000000403000e087ffffffffffffffffffffffffffffffffffffffffffffffff00000000000080000000000020000000000008000000000004000000000001
% 000000c0f870308000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000001c0cc02108000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000003c08c03308000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000c18401e08000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000c18400008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000c18400008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000c18400008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000c18400008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000c08c0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% 000000c0f800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000c07800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000806000000000403000000000300c0000000006018000000001801000000001806000000000601800000000601800000000000
% 000000000000000000000000180f000000000c0f800000000f83e000000001f07c000000007c03000000007c0f000000001f07c00000001f07c00000000000
% 0000000000000000000000003819800000001c08c000000008c330000000011846000000004603000000004619800000001184600000001186600000000000
% 0000000000000000000000007811800000003c08c00000001842300000000308c200000000c20f00000000c211800000003084600000001184600000000000
% 0000000000000000000000001810000000000c0cc00000001846100000000308c200000000c20f00000000c21000000000308660000000118c200000000000
% 000000000000000000000000183f000000000c0f8000000000c61000000000180600000000060b00000000063f000000000187c0000000070c200000000000
% 0000000000000000000000001839800000000c0fc000000001861000000000300c000000000c13000000000c39800000000307e0000000078c200000000000
% 0000000000000000000000001830800000000c18c000000007061000000000e038000000003833000000003830800000000e0c60000000018c200000000000
% 0000000000000000000000001830800000000c18400000000c061000000001806000000000603f80000000603080000000180c20000000308c200000000000
% 0000000000000000000000001810800000000c18400000001802300000000300c000000000c03f80000000c01080000000300c200000003084600000000000
% 000000000000000000000000181f800000000c0fc00000001fc3e000000003f8fe00000000fe0300000000fe1f800000003f87e00000001f87c00000000000
% 000000000000000000000000180f000000000c07800000001fc1e000000003f8fe00000000fe0300000000fe0f000000003f83c00000000f03c00000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000007c0000c0e18300f8000c040ff000700c3f81e00000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000fe0180e0e1c303fc040e040ffc00600c3fe0600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000001870301e061c3078e060e040c0c00600c30e0600000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000018303036063c70703060f040c0400600c3060600000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000018006036063c60e03020f840c040061ec3060600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000001c006033063660c00030d840c0c0063fc3060600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000fc06073033660c00030dc40c1c00631c3fc0600000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000001f06073036660c1f830ce40ff800660c3fe0600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000078607f8362c0c1f830c640ffc00660c30f0600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000003018607f8343c0e01830c740c1c00660c3030600000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000381860e183c3c0603830c3c0c0c00660c3030600000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000183860c1c1c3c0707830c1c0c0c00671c3070600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000001ff060c0c1c1c03ff830c1c0c040063fc3fe0600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000fe061c0c181801f9820c0c0c060063ec3fe0600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000200000000000002000000000060000000600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000300000000000006000000000060000000600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000100000000000004000000000060000000600000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000018000000000000c000000000070000001e00000000000000000000000000000000000000
%%EndImage
%%EndPreview
/InitDictCount countdictstack def
gsave
save
mark
newpath
/showpage {} def
%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 { } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	
	
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 612 792 0 1 6 FMDOCUMENT
0 0 /Helvetica FMFONTDEFINE
1 0 /Bookman-LightItalic FMFONTDEFINE
2 0 /Helvetica-Narrow FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "1" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 0 0 0 1 1 1]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 54 199 544 598 490 399 60 196.5 FMBEGINEPSF
%%BeginDocument: /home/kavcic/tex/papers/TransMAG97/p4three0.epsi
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 54 199 544 598
save
countdictstack
mark
newpath
/showpage {} def
%!PS-Adobe-2.0 
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: pr4three0.ps
%%CreationDate: 04/28/97  01:31:07
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Pages: (atend)
%%BoundingBox: (atend)
%%EndComments

%%BeginProlog

% MathWorks dictionary
/MathWorks 150 dict begin

% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef

% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
/rm /rmoveto ldef
/rl /rlineto ldef
/s /show ldef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef

% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef

% orientation switch
/portraitMode 	0 def
/landscapeMode 	1 def

% coordinate system mappings
/dpi2point 0 def

% font control
/FontSize 0 def
/FMS {
	/FontSize xstore		%save size off stack
	findfont
	[FontSize 0 0 FontSize neg 0 0]
	makefont
	setfont
	}bdef

/reencode {
exch dup where
{pop load} {pop StandardEncoding} ifelse
exch
dup 3 1 roll
findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def
  currentdict
end
definefont pop
} bdef

/isroman {
findfont /CharStrings get
/Agrave known
} bdef

/FMSR {
3 1 roll 1 index
dup isroman
{reencode} {pop pop} ifelse
exch FMS
} bdef

/csm {
	1 dpi2point div -1 dpi2point div scale
	neg translate
	landscapeMode eq {90 rotate} if
	} bdef

% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4 dpi2point mul] 0 setdash } bdef

% macros for lines and objects
/L {
	lineto
	stroke
	} bdef
/MP {
	3 1 roll moveto
	1 sub {rlineto} repeat
	} bdef
/AP {
	{rlineto} repeat
	} bdef
/PP {
	closepath fill
	} bdef
/DP {
	closepath stroke
	} bdef
/MR {
	4 -2 roll moveto
	dup  0 exch rlineto
	exch 0 rlineto
	neg  0 exch rlineto
	closepath
	} bdef
/FR {
	MR stroke
	} bdef
/PR {
	MR fill
	} bdef
/L1i {
	{ currentfile picstr readhexstring pop } image
	} bdef

/tMatrix matrix def
/MakeOval {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 0 360 arc
	tMatrix setmatrix
	} bdef
/FO {
	MakeOval
	stroke
	} bdef
/PO {
	MakeOval
	fill
	} bdef

/PD {
	2 copy moveto lineto stroke
	} bdef


currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    51   197   550   604
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: graph1 1
bplot

/dpi2point 12 def
portraitMode 0216 7344 csm

  406    92  5979  4884 MR c np
76 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

1 j
c1
   0    0 6914 5187 PR
6 w
DO
4 w
c0
 898 4615 mt  898  389 L
 898  389 mt  898  389 L
1493 4615 mt 1493  389 L
1493  389 mt 1493  389 L
2089 4615 mt 2089  389 L
2089  389 mt 2089  389 L
2684 4615 mt 2684  389 L
2684  389 mt 2684  389 L
3279 4615 mt 3279  389 L
3279  389 mt 3279  389 L
3875 4615 mt 3875  389 L
3875  389 mt 3875  389 L
4470 4615 mt 4470  389 L
4470  389 mt 4470  389 L
5065 4615 mt 5065  389 L
5065  389 mt 5065  389 L
5661 4615 mt 5661  389 L
5661  389 mt 5661  389 L
6256 4615 mt 6256  389 L
6256  389 mt 6256  389 L
 898 4615 mt 6256 4615 L
6256 4615 mt 6256 4615 L
 898 2502 mt 6256 2502 L
6256 2502 mt 6256 2502 L
 898  389 mt 6256  389 L
6256  389 mt 6256  389 L
 898 4615 mt  898  389 L
 898  389 mt 6256  389 L
 898 4615 mt  898  389 L
 898  389 mt 6256  389 L
 898 4615 mt  898  389 L
 898  389 mt 6256  389 L
SO
6 w
 898 4615 mt 6256 4615 L
 898  389 mt 6256  389 L
6256 4615 mt 6256  389 L
 898 4615 mt  898  389 L
6256 4615 mt 6256 4615 L
 898 4615 mt  898 4615 L
 898 4615 mt 6256 4615 L
 898 4615 mt  898  389 L
 898 4615 mt  898 4615 L
 898 4615 mt  898 4561 L
 898  389 mt  898  443 L
 818 4784 mt 
(14) s
1493 4615 mt 1493 4561 L
1493  389 mt 1493  443 L
1413 4784 mt 
(16) s
2089 4615 mt 2089 4561 L
2089  389 mt 2089  443 L
2009 4784 mt 
(18) s
2684 4615 mt 2684 4561 L
2684  389 mt 2684  443 L
2604 4784 mt 
(20) s
3279 4615 mt 3279 4561 L
3279  389 mt 3279  443 L
3199 4784 mt 
(22) s
3875 4615 mt 3875 4561 L
3875  389 mt 3875  443 L
3795 4784 mt 
(24) s
4470 4615 mt 4470 4561 L
4470  389 mt 4470  443 L
4390 4784 mt 
(26) s
5065 4615 mt 5065 4561 L
5065  389 mt 5065  443 L
4985 4784 mt 
(28) s
5661 4615 mt 5661 4561 L
5661  389 mt 5661  443 L
5581 4784 mt 
(30) s
6256 4615 mt 6256 4561 L
6256  389 mt 6256  443 L
6176 4784 mt 
(32) s
 898 4615 mt  925 4615 L
6256 4615 mt 6229 4615 L
DO
 898 4615 mt 6256 4615 L
6256 4615 mt 6256 4615 L
SO
 898 4615 mt  952 4615 L
6256 4615 mt 6202 4615 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 594 4668 mt 
(10) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

 754 4579 mt 
(-3) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 898 3979 mt  925 3979 L
6256 3979 mt 6229 3979 L
DO
 898 3979 mt 6256 3979 L
6256 3979 mt 6256 3979 L
SO
 898 3607 mt  925 3607 L
6256 3607 mt 6229 3607 L
DO
 898 3607 mt 6256 3607 L
6256 3607 mt 6256 3607 L
SO
 898 3343 mt  925 3343 L
6256 3343 mt 6229 3343 L
DO
 898 3343 mt 6256 3343 L
6256 3343 mt 6256 3343 L
SO
 898 3138 mt  925 3138 L
6256 3138 mt 6229 3138 L
DO
 898 3138 mt 6256 3138 L
6256 3138 mt 6256 3138 L
SO
 898 2971 mt  925 2971 L
6256 2971 mt 6229 2971 L
DO
 898 2971 mt 6256 2971 L
6256 2971 mt 6256 2971 L
SO
 898 2829 mt  925 2829 L
6256 2829 mt 6229 2829 L
DO
 898 2829 mt 6256 2829 L
6256 2829 mt 6256 2829 L
SO
 898 2707 mt  925 2707 L
6256 2707 mt 6229 2707 L
DO
 898 2707 mt 6256 2707 L
6256 2707 mt 6256 2707 L
SO
 898 2599 mt  925 2599 L
6256 2599 mt 6229 2599 L
DO
 898 2599 mt 6256 2599 L
6256 2599 mt 6256 2599 L
SO
 898 2502 mt  925 2502 L
6256 2502 mt 6229 2502 L
DO
 898 2502 mt 6256 2502 L
6256 2502 mt 6256 2502 L
SO
 898 2502 mt  952 2502 L
6256 2502 mt 6202 2502 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 594 2555 mt 
(10) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

 754 2466 mt 
(-2) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 898 1866 mt  925 1866 L
6256 1866 mt 6229 1866 L
DO
 898 1866 mt 6256 1866 L
6256 1866 mt 6256 1866 L
SO
 898 1494 mt  925 1494 L
6256 1494 mt 6229 1494 L
DO
 898 1494 mt 6256 1494 L
6256 1494 mt 6256 1494 L
SO
 898 1230 mt  925 1230 L
6256 1230 mt 6229 1230 L
DO
 898 1230 mt 6256 1230 L
6256 1230 mt 6256 1230 L
SO
 898 1025 mt  925 1025 L
6256 1025 mt 6229 1025 L
DO
 898 1025 mt 6256 1025 L
6256 1025 mt 6256 1025 L
SO
 898  858 mt  925  858 L
6256  858 mt 6229  858 L
DO
 898  858 mt 6256  858 L
6256  858 mt 6256  858 L
SO
 898  716 mt  925  716 L
6256  716 mt 6229  716 L
DO
 898  716 mt 6256  716 L
6256  716 mt 6256  716 L
SO
 898  594 mt  925  594 L
6256  594 mt 6229  594 L
DO
 898  594 mt 6256  594 L
6256  594 mt 6256  594 L
SO
 898  486 mt  925  486 L
6256  486 mt 6229  486 L
DO
 898  486 mt 6256  486 L
6256  486 mt 6256  486 L
SO
 898  389 mt  925  389 L
6256  389 mt 6229  389 L
DO
 898  389 mt 6256  389 L
6256  389 mt 6256  389 L
SO
 898  389 mt  952  389 L
6256  389 mt 6202  389 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 594  442 mt 
(10) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

 754  353 mt 
(-1) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 898  389 mt 6256  389 L
 898 4615 mt 6256 4615 L
 898 4615 mt  898  389 L
6256 4615 mt 6256  389 L
 898  389 mt  898  389 L
6256  389 mt 6256  389 L
gs 898 389 5359 4227 MR c np
1190 135 1191 187 1191 474 1190 773 1196 624 5 MP stroke
DA
1190 104 1191 222 1191 542 1190 640 1196 712 5 MP stroke
DD
1190 192 1191 336 1191 776 1190 929 1196 1843 5 MP stroke

gr 
DD
2345  274 mt 
(PR4 at 2.9 a/symbol \(3 symbols/pw50\)) s
 540 2963 mt  -90 rotate
(ERROR RATE) s
90 rotate
3209 4944 mt 
(S\(AWG\)NR) s
gs 898 389 5359 4227 MR c np
744 0 1047 3465 2 MP stroke

gr 
1910 3518 mt 
(C2 metric) s
gs 898 389 5359 4227 MR c np
DA
744 0 1047 3774 2 MP stroke

gr 
DA
1910 3827 mt 
(C1 metric) s
gs 898 389 5359 4227 MR c np
SO
744 0 1047 4083 2 MP stroke

gr 
SO
1910 4136 mt 
(Euclidian metric) s

end

eplot
%%EndObject graph 1

epage
end

showpage

%%Trailer
%%BoundingBox:    51   197   550   604
%%Pages: 001
%%EOF
cleartomark
countdictstack exch sub { end } repeat
restore

%%EndDocument
FMENDEPSF
0 0 0 0 1 1 1 K
92 172 556 222 R
7 X
V
3 H
2 Z
N
133 582 506 615 R
V
N
0 0 0 1 0 0 0 K
0 21 Q
0 X
0 0 0 1 0 0 0 K
(PR4 at 2.9) 125 592 T
1 23 Q
(a) 230.06 592 T
0 21 Q
(/ symbol \0503 symbols/PW50\051) 250.62 592 T
(S\050A) 244 188 T
(WG\051NR [dB]) 278.23 188 T
0 18 Q
(18) 187 210 T
(16) 138 210 T
(20) 237 210 T
(22) 288 210 T
(24) 338 210 T
(26) 386 210 T
(28) 436 210 T
(30) 484 210 T
0 0 0 0 1 1 1 K
47 211 94 624 R
7 X
0 0 0 0 1 1 1 K
V
N
0 0 0 1 0 0 0 K
0 X
0 0 0 1 0 0 0 K
(10) 65 572 T
0 14.4 Q
(-1) 85.02 579.2 T
0 18 Q
(10) 62 394 T
0 14.4 Q
(-2) 82.02 401.2 T
0 18 Q
(10) 63 222 T
0 14.4 Q
(-3) 83.02 229.2 T
0 21 Q
(ERROR RA) 0 -270 56 331 TF
(TE) 0 -270 56 440.28 TF
0 0 0 0 1 1 1 K
103 234 296.88 326 R
7 X
0 0 0 0 1 1 1 K
V
0.5 H
N
0 0 0 1 0 0 0 K
103 234 296.88 326 R
0 X
0 0 0 1 0 0 0 K
N
J
110.6 312.11 170.66 312.11 2 L
J
110.6 312.11 116.35 312.11 2 L
N
[13.789 7.794 1.799 7.794] 13.789 I
116.35 312.11 164.91 312.11 2 L
N
J
164.91 312.11 170.66 312.11 2 L
N
J
110.6 280.87 170.66 280.87 2 L
J
110.6 280.87 114.35 280.87 2 L
N
[8.128 7.044] 8.128 I
114.35 280.87 166.91 280.87 2 L
N
J
166.91 280.87 170.66 280.87 2 L
N
J
110.6 249.62 170.66 249.62 2 L
N
2 F
(C2 metric) 179.03 304.46 T
(C1 metric) 178.27 274.09 T
2 20 Q
(Euclidian metric) 179.03 244.58 T
0 0 0 1 0 0 0 K
J
FMENDPAGE
%%EndPage: "1" 1
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Descend
%%Pages: 1
%%DocumentFonts: Helvetica
%%+ Bookman-LightItalic
%%+ Helvetica-Narrow
%%EOF
countdictstack InitDictCount sub { end } repeat
cleartomark
restore
grestore

%%EndDocument
 @endspecial 793 2432 a(Figure)31 b(10:)43 b(PR4)33 b(detection)f
(results)h(at)f(2)p Fj(:)p Fq(9)p Fj(a=)p Fq(sym)m(b)s(ol.)855
4643 y @beginspecial 42 @llx 185 @lly 545 @urx 606 @ury
2370 @rwi @setspecial
%%BeginDocument: epr4three0.epsi
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 42 185 545 606
%%BeginPreview: 504 422 1 422
% 000000000000000000000ff83fc0ff00000000000000000000000000000000000000300000600000000000000000180000300001fe0e183000000000000000
% 000000000000000000000ff83fe0ffc018000000007c001f0000000030000000000030000060030f800000000000180000300019ff0e1c307f03e080000000
% 000000000000000000000c003070c0c01800000c00fe003f800007d830000000000030000060061fc0000000000018000030001983861c307f07f0c0000000
% 000000000000000000000c003030c0403800000c01c6007180001ff8200000000000300000600618c0000000000018000030001181863c70600630c0000000
% 000000000000000000000c003030c04078007e1f01830061c0003e78600f8618fcf03f03e0600c18c007c30c7e781f81f030f83181863c60600e3040000000
% 000000000000000000000c003030c0c0d800771f00030060c0007830601f8718fff03f87f0600c00c00fc38c7ff81fc3f831f831818636607c0c1860000000
% 000000000000000000000ff83070c1c0d800630c00060061c00070304018c318c71830c630600c07c00c618c638c186318318c21838336607f0c1860000000
% 000000000000000000000ff83fe0ff819800030c000c0031c000e03040180330c61830cc18600c07c00c0198630c18660c318021ff036660630c1860000000
% 000000000000000000000c003fc0ffc318003f0c0038003fc000e060c01f0330c61830cc18600c00e00f8198630c18660c31f061fe0362c0038c1860000000
% 000000000000000000000c003000c1c3fe00730c00f0001ec000c060c003c3a0c61830cc18600c306001e1d0630c18660c303c61800343c0018c1860000000
% 000000000000000000000c003000c0c3fe00e30c00c000018000c0608000c1e0c61830cc18600c30600060f0630c18660c300c418003c3c0c1863060000000
% 000000000000000000000c003000c0c01800c70c01800073800060e58018c1e0c61830ce30600c38c00c60f0630c186718318cc18001c3c0e3067060000000
% 000000000000000000000ffc3000c0401800ef8e01ff0c3f000073fd801fc1c0c6183f87f0600c1fc00fe0e0630c1fc3f831fcc18001c1c07f07f060000000
% 000000000000000000000ffc3000c06018007f8f01ff0c3e00001f79001f80c0c6183f03e0600c0f800fc060630c1f81f031f881800181807e03e040000000
% 00000000000000000000000000000000000000000000000000000000000000c000000000000004000000006000000000000000000000000000000040000000
% 00000000000000000000000000000000000000000000000000000000000001800000000000000600000000c0000000000000000000000000000000c0000000
% 00000000000000000000000000000000000000000000000000000000000003800000000000000200000001c000000000000000000000000000000080000000
% 000000000000000000000000000000000000000000000000000000000000030000000000000003000000018000000000000000000000000000000180000000
% 000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000100c00100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000303e1c100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000703300100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000f02300100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000306100100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000306100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000030610000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% 000000306100008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000306100008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000302300008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000303e00008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000301e00008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000f46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c467
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000f46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c467
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000f46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231988c46231188c46231188c467
% 000000000000008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 00000000000000f46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c467
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000003000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000c00002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000f46231198c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c467
% 000000000000008000000060000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000018002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000006002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000001800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000180000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000062000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000800000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000003000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000002000002c00000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000001800002300000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 0000000000000080000006000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000800000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000008002003000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 00000000000000f46231188e46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c467
% 000000000000008000000001800000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000400000180000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000002000060000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000012000018000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 00000000000000800000000000c000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000003000001800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000800000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000002000000180000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000030000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000800000000000000c00000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000002002000003000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000002000000000c00800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000000000000000300000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 0000000000000080000000000000000400000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000030000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000800000000000200000c000008800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000001800000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000600000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 0000000000000080000000000020000000c0000980000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 00000000000000f46231188c46231188c4723118ec46231188c46231188c46231188c46231188c46231188c46231188c46231988c46231188c46231188c467
% 000000000000008000000000000000000008000018000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000001800000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000002000000000380800400000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000000000000000060000300000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 0000000000000080000000000000000000000100000c0000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000800000000000200000000000080000c000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000002000000000000e00003000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000000000000000000180000c00000000000000000000000000000000000000000000000000000000000000000000000000000001
% 0000000000000080000000000000000000000000400003c0000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000038000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000002000000000000800000007000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000000000000000000000800000e00000000000000000000000000000000000000000000000000000000000000000000000000001
% 0000000000000080000000000000000000000000006000001e0000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000800000000000000000000000000018000001c000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000002000000000000800000000003c00000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000002000000000000800000000000700000000000100000000000080000000000020000000000008000000000004000000000001
% 0000000000000080000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000800000000000000000000000000000180000001e000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000700000001c00000000000000000000000000000000000000000000000000000000000000000000001
% 000c00000000008000000000002000000000000800000000000400380000000100000000000080000000000020000000000008000000000004000000000001
% c30c00000000008000000000000000000000000000000000000000070000000000000000000000000000000000000000000000000000000000000000000001
% c30c0000000000800000000000000000000000000000000380000000f000000000000000000000000000000000000000000000000000000000000000000001
% c30c00000000008000000000000000000000000000000000700000000e00000000000000000000000000000000000000000000000000000000000000000001
% c30c000000000080000000000020000000000008000000000004000001c0000100000000000080000000000020000000000008000000000004000000000001
% c30c00000000008000000000002000000000000800000000000400000038000100000000000080000000000020000000000008000000000004000000000001
% c30c00000000008000000000000000000000000000000000007000000007000000000000000000000000000000000000000000000000000000000000000001
% c30c00000000008000000000000000000000000000000000000e00000000f00000000000000000000000000000000000000000000000000000000000000001
% fffc000000000080000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000001
% fffc0000000000f46231188c46231188c46231188c46231188c46231188c47e31188c46231188c46231188c46231188c46231988c46231188c46231188c467
% 000000000000008000000000000000000000000000000000000007000000003800000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000c00000000700000000000000000000000000000000000000000000000000000000000001
% 0000000000000080000000000000000000000000000000000000000000000000f0000000000000000000000000000000000000000000000000000000000001
% 00000000000000800000000000200000000000080000000000040000000000010e000000000080000000000020000000000008000000000004000000000001
% c0000000000000800000000000200000000000080000000000040000e000000101c00000000080000000000020000000000008000000000004000000000001
% c00000000000008000000000000000000000000000000000000000001c00000000380000000000000000000000000000000000000000000000000000000001
% c00000000000008000000000000000000000000000000000000000000000000000078000000000000000000000000000000000000000000000000000000001
% c00000000000008000000000000000000000000000000000000000000010000000007000000000000000000000000000000000000000000000000000000001
% fffc0000000000800000000000200000000000080000000000040000000e000100000e00000080000000000020000000000008000000000004000000000001
% fffc000000000080000000000000000000000000000000000000000000018000000001f0000000000000000000000000000000000000000000000000000001
% c0000000000000800000000000000000000000000000000000000000000000000000000f800000000000000000000000000000000000000000000000000001
% c000000000000080000000000000000000000000000000000000000000000000000000007c0000000000000000000000000000000000000000000000000001
% c0000000000000800000000000200000000000080000000000040000000001c10000000003e080000000000020000000000008000000000004000000000001
% c00000000000008000000000002000000000000800000000000400000000003100000000001f80000000000020000000000008000000000004000000000001
% 0000000000000080000000000000000000000000000000000000000000000000000000000000fc000000000000000000000000000000000000000000000001
% 001c00000000008000000000000000000000000000000000000000000000000020000000000003e00000000000000000000000000000000000000000000001
% 00fc000000000080000000000000000000000000000000000000000000000000180000000000001f0000000000000000000000000000000000000000000001
% 07f00000000000800000000000200000000000080000000000040000000000010700000000008000f800000020000000000008000000000004000000000001
% 7fc0000000000080000000000000000000000000000000000000000000000000000000000000000007e0000000000000000000000000000000000000000001
% f8c00000000000800000000000000000000000000000000000000000000000000004000000000000001f000000000000000000000000000000000000000001
% e0c000000000008000000000000000000000000000000000000000000000000000038000000000000000f80000000000000000000000000000000000000001
% 3fc00000000000800000000000200000000000080000000000040000000000010000600000008000000007c020000000000008000000000004000000000001
% 1fe000000000008000000000002000000000000800000000000400000000000100000000000080000000003e20000000000008000000000004000000000001
% 03fc000000000080000000000000000000000000000000000000000000000000000000700000000000000001f8000000000000000000000000000000000001
% 007c0000000000800000000000000000000000000000000000000000000000000000000c080000000000000007c00000000000000000000000000000000001
% 00040000000000800000000000000000000000000000000000000000000000000000000007c0000000000000003e0000000000000000000000000000000001
% 0000000000000080000000000020000000000008000000000004000000000001000000000000f800000000002001f000000008000000000004000000000001
% 0000000000000080000000000000000000000000000000000000000000000000000000000000040c0000000000000fc0000000000000000000000000000001
% 00000000000000800000000000000000000000000000000000000000000000000000000000000003c00000000000003fffffe0000000000000000000000001
% 0004000000000080000000000000000000000000000000000000000000000000000000000000000000fe00000000000000001ffffffffc0000000000000001
% 7efc000000000080000000000020000000000008000000000004000000000001000000000000800000000e002000000000000800000003ffffffff80000001
% 67f00000000000800000000000200000000000080000000000040000000000010000000000008000000001c02000000000000800000000000400007c000001
% c3c0000000000080000000000000000000000000000000000000000000000000000000000000000000000000fc000000000000000000000000000000000001
% c180000000000080000000000000000000000000000000000000000000000000000000000000000000000000000f0000000000000000000000000000000001
% c1800000000000800000000000000000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000001
% c180000000000080000000000020000000000008000000000004000000000001000000000000800000000000200000fc000008000000000004000000000001
% c180000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000001fc0c0000000000000000000000001
% c1800000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000003c0f0000000000000000000001
% fffc0000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c1fc000000000000000001
% fffc000000000080000000000020000000000008000000000004000000000001000000000000800000000000200000000000080000001fc004000000000001
% 0000000000000080000000000020000000000008000000000004000000000001000000000000800000000000200000000000080000000001fc000000000001
% 0000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001fc0c0000001
% 00000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003c000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000003c08000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000006608000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000006208000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000608000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000806000c08000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 00000181f0e3808000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000403819807008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 7efc07811806008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 67f001830807e0fc6231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c47f
% c3c001830800008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% c18001830800008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% c18001830800008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% c18001830800008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% c18001811800008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% c1800181f000008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% fffc0180f000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% fffc00000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 00000000000000f46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c467
% 000000000000008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 0fe0000000000080000000000020000000000008000000000004000000000001000000003ffffffffffffffffffffffffffffffffffffffffffffffffffc01
% 3ff000000000008000000000002000000000000800000000000400000000000100000000200000000000000000000000000000000000000000000000000401
% 703800000000008000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000401
% 601c00000000008000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000401
% c00c0000000000f46231188c46231188c46231188c46231188c46231188c46231188c462200000000000000000000000000000000000000000000000000467
% c00c00000000008000000000002000000000000800000000000400000000000100000000200000000000000000000000000000000000000000000000000401
% c00c00000000008000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000401
% c00c00000000008000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000401
% c00c00000000008000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000401
% 601800000000008000000000002000000000000800000000000400000000000100000000200000000000000000000380000000000000000000000000000401
% 787800000000008000000000002000000000000800000000000400000000000100000000200000000000000000000fc0e00000000000800000000000000401
% 3ff000000000008000000000000000000000000000000000000000000000000000000000200000000000000000001ce1f00000000400800000000000000401
% 0fc000000000008000000000000000000000000000000000000000000000000000000000200000000000000000001861980000000400000000000000000401
% 0000000000000080000060000000000000000000000000000000000000000000000000002000000000000000000010231801cc07040c070000000000000401
% 00000000000000f46231188c46231188c46231188c46231188c46231188c46231188c4622000000000000000000030031807fe0f8f3c8fc000000000000467
% 0000000000000080000000000000000000000000000000000000000000000000000000002000000000000000000030031806730cc4308cc000000000000401
% 000400000000008000000300000000000000000000000000000000000000000000000000207f81c03fff80e03fc0300018066318c420884000000000000401
% 7efc000000000080000000c000000000000000000000000000000000000000000000000020000000000000000000300030046318c420980000000000000401
% 67f0000000000080000000200020000000000008000000000004000000000001000000002000000000000000000030207004631fc420980000000000000401
% c3c000000000008000000000002000000000000800000000000400000000000100000000200000000000000000001021c00463180420980000000000000401
% c18000000000008000000002000000000000000000000000000000000000000000000000200000000000000000001861800463184420984000000000000401
% c1800000000000800000000000000000000000000000000000000000000000000000000020000000000000000000186300046308c42088c000000000000401
% c18000000000008000000000200000000000000000000000000000000000000000000000200000000000000000000cc3f804630dc6208cc000000000000401
% c18000000000008000000000182000000000000800000000000400000000000100000000200000000000000000000fc3f804630f87208f8000000000000401
% c18000000000008000000000060000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000401
% fffc00000000008000000000010000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000401
% fffc0000000000f46231188c46231188c46231188c46231188c46231188c46231188c462200000000000000000000000000000000000000000000000000467
% 000000000000008000000000003000000000000800000000000400000000000100000000200000000000000000000000000000000000000000000000000401
% 000000000000008000000000002000000000000800000000000400000000000100000000200000000000000000000000000000000000000000000000000401
% 000000000000008000000000000100000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000401
% 0000000000000080000000000000c0000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000401
% 000400000000008000000000000030000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000401
% 7efc00000000008000000000002000000000000800000000000400000000000100000000200000000000000000000000000000000000000000000000000401
% 67f000000000008000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000401
% c3c000000000008000000000000001800000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000401
% c18000000000008000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000401
% c18000000000008000000000002000080000000800000000000400000000000100000000200000000000000000000000000000000000000000000000000401
% c18000000000008000000000002000060000000800000000000400000000000100000000200000000000000000000000000000000000000000000000000401
% c18000000000008000000000000000018000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000401
% c1800000000000f46231188c46231188c46231188c46231188c46231188c46231188c462200000000000000000000000000000000000000000000000000467
% fffc00000000008000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000401
% fffc00000000008000000000002000000c00000800000000000400000000000100000000200000000000000000000000000000000000000000000000000401
% 000000000000008000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000401
% 000000000000008000000000000000000040000000000000000000000000000000000000200000000000000000000000000000000000000000000000000401
% 000000000000008000000000000000000030000000000000000000000000000000000000200000000000000000000700000000000000000000000000000401
% 00000000000000800000000000200000000c000800000000000400000000000100000000200000000000000000001f80400000000001000000000000000401
% 000c000000000080000000000020000000000008000000000004000000000001000000002000000000000000000039c0c00000000801000000000000000401
% c30c000000000080000000000000000000000000000000000000000000000000000000002000000000000000000030c0c00000000800000000000000000401
% c30c00000000008000000000000000000000400000000000000000000000000000000000200000000000000000002043c001cc0e08180e0000000000000401
% c30c00000000008000000000000000000000000000000000000000000000000000000000200000000000000000006003c007fe1f1e791f8000000000000401
% c30c00000000008000000000002000000000060800000000000400000000000100000000200000000000000000006000c00673198861198000000000000401
% c30c00000000008000000000000000000000018000000000000000000000000000000000200000000000000000006000c00663318841108000000000000401
% c30c00000000008000000000000000000000006000000000000000000000000000000000207e07fc07fc07fc0fc06000c00463318841300000000000000401
% c30c00000000008000000000000000000000000000000000000000000000000000000000200000000000000000006040c004633f8841300000000000000401
% fffc00000000008000000000002000000000000a00000000000400000000000100000000200000000000000000002040c00463300841300000000000000401
% fffc00000000008000000000002000000000000a000000000004000000000001000000002000000000000000000030c0c00463308841308000000000000401
% 0000000000000080000000000000000000000000000000000000000000000000000000002000000000000000000030c0c00463118841118000000000000401
% 00000000000000f46231188c46231188c4623118bc46231188c46231188c46231188c462200000000000000000001980c004631b8c41198000000000000467
% 00000000000000800000000000000000000000000c000000000000000000000000000000200000000000000000001f80c004631f0e411f0000000000000401
% 000000000000008000000000002000000000000802000000000400000000000100000000200000000000000000000000000000000000000000000000000401
% 000000000000008000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000401
% 000000000000008000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000401
% 000000000000008000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000401
% 000000000000008000000000002000000000000800000000000400000000000100000000200000000000000000000000000000000000000000000000000401
% 000000000000008000000000002000000000000800018000000400000000000100000000200000000000000000000000000000000000000000000000000401
% 000000000000008000000000000000000000000000006000000000000000000000000000200000000000000000000000000000000000000000000000000401
% 000000000000008000000000000000000000000000001000000000000000000000000000200000000000000000000000000000000000000000000000000401
% 000000000000008000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000401
% 000000000000008000000000002000000000000800000180000400000000000100000000200000000000000000000000000000000000000000000000000401
% 000000000000008000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000401
% 000000000000008000000000000000000000000000000008000000000000000000000000200000000000000000000000000000000000000000000000000401
% 000000000000008000000000000000000000000000000006000000000000000000000000200000000000000000000000000000000000000000000000000401
% 000000000000008000000000002000000000000800000001800400000000000100000000200000000000000000000000000000000000000000000000000401
% 000000000000008000000000002000000000000800000000000400000000000100000000200000000000000000000000000000000000000000000000000401
% 000000000000008000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000401
% 000000000000008000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000401
% 000000000000008000000000000000000000000000000000004000000000000000000000200000000000000000000000000000000000000000000000000401
% 000000000000008000000000002000000000000800000000003400000000000100000000200000000000000000000000000000000000000000000000000401
% 000000000000008000000000000000000000000000000000000c00000000000000000000200000000000000000000000000000000000000000000000000401
% 00000000000000f46231188c46231188c46231188c46231188c46231188c46231188c462200000000000000000001fc00001880c4000000000000000800467
% 000000000000008000000000000000000000000000000000000000000000000000000000200000000000000000001fc00001880c4000000000000400800401
% 0000000000000080000000000020000000000008000000000004000000000001000000002000000000000000000010000001800c0000000000000400000401
% 0000000000000080000000000020000000000008000000000004000000000001000000002000000000000000000010000071806c03807001cc07040c0e0401
% 00000000000000800000000000000000000000000000000000000300000000000000000020000000000000000000100230fd88fc47c1f807fe0f8f3c9f8401
% 000000000000008000000000000000000000000000000000000000e0000000000000000020000000000000000000100230cd89cc4ec19806730cc430998401
% 000000000000008000000000000000000000000000000000000000000000000000000000200000000000000000001f823085898c4c4198066318c420908401
% 000000000000008000000000002000000000000800000000000400000000000100000000200000000000000000001f823181898c404118046318c420b00401
% 0000000000000080000000000000000000000000000000000000000100000000000000002000000000000000000010023181898c47c11804631fc420b00401
% 000000000000008000000000000000000000000000000000000000000000000000000000207fffffffffffffffc010023181898c4fc1180463180420b00401
% 0000000000000080000000000000000000000000000000000000000018000000000000002000000000000000000010023185898c4c41180463184420b08401
% 000000000000008000000000002000000000000800000000000400000600000100000000200000000000000000001002308d898c4cc118046308c420918401
% 000000000000008000000000002000000000000800000000000400000180000100000000200000000000000000001fc370cd89dc4dc11804630dc620998401
% 000000000000008000000000000000000000000000000000000000000000000000000000200000000000000000001fc3f0f988fc4f611804630f87209f0401
% 000000000000008000000000000000000000000000000000000000000008000000000000200000000000000000000000000000000000000000000000000401
% 000000000000008000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000401
% 000000000000008000000000002000000000000800000000000400000000c00100000000200000000000000000000000000000000000000000000000000401
% 000000000000008000000000000000000000000000000000000000000000300000000000200000000000000000000000000000000000000000000000000401
% 0000000000000080000000000000000000000000000000000000000000000c0000000000200000000000000000000000000000000000000000000000000401
% 000000000000008000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000401
% 000000000000008000000000002000000000000800000000000400000000004100000000200000000000000000000000000000000000000000000000000401
% 000000000000008000000000002000000000000800000000000400000000000100000000200000000000000000000000000000000000000000000000000401
% 000000000000008000000000000000000000000000000000000000000000000600000000200000000000000000000000000000000000000000000000000401
% 000000000000008000000000000000000000000000000000000000000000000180000000200000000000000000000000000000000000000000000000000401
% 000000000000008000000000000000000000000000000000000000000000000060000000200000000000000000000000000000000000000000000000000401
% 000000000000008000000000002000000000000800000000000400000000000100000000200000000000000000000000000000000000000000000000000401
% 000000000000008000000000000000000000000000000000000000000000000002000000200000000000000000000000000000000000000000000000000401
% 0000000000000080000000000000000000000000000000000000000000000000000000003ffffffffffffffffffffffffffffffffffffffffffffffffffc01
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000002000000000000800000000000400000000000100180000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000002000000000000800000000000400000000000100070000000080000000000020000000000008000000000004000000000001
% 00000000000000f46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c46231188c467
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000002000000000000800000000000400000000000100000180000080000000000020000000000008000000000004000000000001
% 0000000000000080000000000000000000000000000000000000000000000000000000fc000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000001
% 00000000000000800000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000001
% 000000000000008000000000002000000000000800000000000400000000000100000000000180000000000020000000000008000000000004000000000001
% 00000000000000800000000000200000000000080000000000040000000000010000000000008fe00000000020000000000008000000000004000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000001f00000000000000000000000000000000000000000001
% 00000000000000800000000000000000000000000000000000000000000000000000000000000000008c000000000000000000000000000000000000000001
% 0000000000000080000000000020000000000008000000000004000000000001000000000000800000007c0020000000000008000000000004000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000023000000000000000000000000000000000000001
% 0000000000000080000000000000000000000000000000000000000000000000000000000000000000000001e0000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000018400000000000000000000000000000000001
% 000000000000008000000000002000000000000800000000000400000000000100000000000080000000000020038000000008000000000004000000000001
% 000000000000008000000000002000000000000800000000000400000000000100000000000080000000000020007000000008000000000004000000000001
% 00000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000f000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000c60000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000003f80000000000000000000000001
% 000000000000008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 0000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000007e0000000000000000000001
% 0000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000031c0000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000038400000000000000001
% 00000000000000800000000000200000000000080000000000040000000000010000000000008000000000002000000000000800000003e004000000000001
% 000000000000008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000001184000000000001
% 00000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000fc00000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000063800000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000708000001
% 000000000000008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000000001e08000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000003308000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000003308000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000000000208000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000403000e08000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000c0f870308000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000001c0cc02108000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000003c08c03308000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
% 000000c18401e08000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000c18400008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000c18400008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000c18400008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000c18400008000000000002000000000000800000000000400000000000100000000000080000000000020000000000008000000000004000000000001
% 000000c08c0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
% 000000c0f800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000c07800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000806000000000403000000000300c0000000006018000000001801000000001806000000000601800000000601800000000000
% 000000000000000000000000180f000000000c0f800000000f83e000000001f07c000000007c03000000007c0f000000001f07c00000001f07c00000000000
% 0000000000000000000000003819800000001c08c000000008c330000000011846000000004603000000004619800000001184600000001186600000000000
% 0000000000000000000000007811800000003c08c00000001842300000000308c200000000c20f00000000c211800000003084600000001184600000000000
% 0000000000000000000000001810000000000c0cc00000001846100000000308c200000000c20f00000000c21000000000308660000000118c200000000000
% 000000000000000000000000183f000000000c0f8000000000c61000000000180600000000060b00000000063f000000000187c0000000070c200000000000
% 0000000000000000000000001839800000000c0fc000000001861000000000300c000000000c13000000000c39800000000307e0000000078c200000000000
% 0000000000000000000000001830800000000c18c000000007061000000000e038000000003833000000003830800000000e0c60000000018c200000000000
% 0000000000000000000000001830800000000c18400000000c061000000001806000000000603f80000000603080000000180c20000000308c200000000000
% 0000000000000000000000001810800000000c18400000001802300000000300c000000000c03f80000000c01080000000300c200000003084600000000000
% 000000000000000000000000181f800000000c0fc00000001fc3e000000003f8fe00000000fe0300000000fe1f800000003f87e00000001f87c00000000000
% 000000000000000000000000180f000000000c07800000001fc1e000000003f8fe00000000fe0300000000fe0f000000003f83c00000000f03c00000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000007c0000c0e18300f8000c040ff000700c3f81e00000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000fe0180e0e1c303fc040e040ffc00600c3fe0600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000001870301e061c3078e060e040c0c00600c30e0600000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000018303036063c70703060f040c0400600c3060600000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000018006036063c60e03020f840c040061ec3060600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000001c006033063660c00030d840c0c0063fc3060600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000fc06073033660c00030dc40c1c00631c3fc0600000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000001f06073036660c1f830ce40ff800660c3fe0600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000078607f8362c0c1f830c640ffc00660c30f0600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000003018607f8343c0e01830c740c1c00660c3030600000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000381860e183c3c0603830c3c0c0c00660c3030600000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000183860c1c1c3c0707830c1c0c0c00671c3070600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000001ff060c0c1c1c03ff830c1c0c040063fc3fe0600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000fe061c0c181801f9820c0c0c060063ec3fe0600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000200000000000002000000000060000000600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000300000000000006000000000060000000600000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000100000000000004000000000060000000600000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000018000000000000c000000000070000001e00000000000000000000000000000000000000
%%EndImage
%%EndPreview
/InitDictCount countdictstack def
gsave
save
mark
newpath
/showpage {} def
%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 { } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	
	
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 612 792 0 1 5 FMDOCUMENT
0 0 /Helvetica FMFONTDEFINE
1 0 /Bookman-LightItalic FMFONTDEFINE
2 0 /Helvetica-Narrow FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "1" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 0 0 0 1 1 1]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 54 199 544 598 490 399 60 196.5 FMBEGINEPSF
%%BeginDocument: /home/kavcic/tex/papers/TransMAG97/epr4three0.epsi
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 54 199 544 598
save
countdictstack
mark
newpath
/showpage {} def
%!PS-Adobe-2.0 
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: epr4three0.ps
%%CreationDate: 04/28/97  01:31:29
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Pages: (atend)
%%BoundingBox: (atend)
%%EndComments

%%BeginProlog

% MathWorks dictionary
/MathWorks 150 dict begin

% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef

% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
/rm /rmoveto ldef
/rl /rlineto ldef
/s /show ldef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef

% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef

% orientation switch
/portraitMode 	0 def
/landscapeMode 	1 def

% coordinate system mappings
/dpi2point 0 def

% font control
/FontSize 0 def
/FMS {
	/FontSize xstore		%save size off stack
	findfont
	[FontSize 0 0 FontSize neg 0 0]
	makefont
	setfont
	}bdef

/reencode {
exch dup where
{pop load} {pop StandardEncoding} ifelse
exch
dup 3 1 roll
findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def
  currentdict
end
definefont pop
} bdef

/isroman {
findfont /CharStrings get
/Agrave known
} bdef

/FMSR {
3 1 roll 1 index
dup isroman
{reencode} {pop pop} ifelse
exch FMS
} bdef

/csm {
	1 dpi2point div -1 dpi2point div scale
	neg translate
	landscapeMode eq {90 rotate} if
	} bdef

% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4 dpi2point mul] 0 setdash } bdef

% macros for lines and objects
/L {
	lineto
	stroke
	} bdef
/MP {
	3 1 roll moveto
	1 sub {rlineto} repeat
	} bdef
/AP {
	{rlineto} repeat
	} bdef
/PP {
	closepath fill
	} bdef
/DP {
	closepath stroke
	} bdef
/MR {
	4 -2 roll moveto
	dup  0 exch rlineto
	exch 0 rlineto
	neg  0 exch rlineto
	closepath
	} bdef
/FR {
	MR stroke
	} bdef
/PR {
	MR fill
	} bdef
/L1i {
	{ currentfile picstr readhexstring pop } image
	} bdef

/tMatrix matrix def
/MakeOval {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 0 360 arc
	tMatrix setmatrix
	} bdef
/FO {
	MakeOval
	stroke
	} bdef
/PO {
	MakeOval
	fill
	} bdef

/PD {
	2 copy moveto lineto stroke
	} bdef


currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    51   197   550   604
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: graph1 1
bplot

/dpi2point 12 def
portraitMode 0216 7344 csm

  406    92  5979  4884 MR c np
76 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

1 j
c1
   0    0 6914 5187 PR
6 w
DO
4 w
c0
 898 4615 mt  898  389 L
 898  389 mt  898  389 L
1493 4615 mt 1493  389 L
1493  389 mt 1493  389 L
2089 4615 mt 2089  389 L
2089  389 mt 2089  389 L
2684 4615 mt 2684  389 L
2684  389 mt 2684  389 L
3279 4615 mt 3279  389 L
3279  389 mt 3279  389 L
3875 4615 mt 3875  389 L
3875  389 mt 3875  389 L
4470 4615 mt 4470  389 L
4470  389 mt 4470  389 L
5065 4615 mt 5065  389 L
5065  389 mt 5065  389 L
5661 4615 mt 5661  389 L
5661  389 mt 5661  389 L
6256 4615 mt 6256  389 L
6256  389 mt 6256  389 L
 898 4615 mt 6256 4615 L
6256 4615 mt 6256 4615 L
 898 2502 mt 6256 2502 L
6256 2502 mt 6256 2502 L
 898  389 mt 6256  389 L
6256  389 mt 6256  389 L
 898 4615 mt  898  389 L
 898  389 mt 6256  389 L
 898 4615 mt  898  389 L
 898  389 mt 6256  389 L
 898 4615 mt  898  389 L
 898  389 mt 6256  389 L
SO
6 w
 898 4615 mt 6256 4615 L
 898  389 mt 6256  389 L
6256 4615 mt 6256  389 L
 898 4615 mt  898  389 L
6256 4615 mt 6256 4615 L
 898 4615 mt  898 4615 L
 898 4615 mt 6256 4615 L
 898 4615 mt  898  389 L
 898 4615 mt  898 4615 L
 898 4615 mt  898 4561 L
 898  389 mt  898  443 L
 818 4784 mt 
(14) s
1493 4615 mt 1493 4561 L
1493  389 mt 1493  443 L
1413 4784 mt 
(16) s
2089 4615 mt 2089 4561 L
2089  389 mt 2089  443 L
2009 4784 mt 
(18) s
2684 4615 mt 2684 4561 L
2684  389 mt 2684  443 L
2604 4784 mt 
(20) s
3279 4615 mt 3279 4561 L
3279  389 mt 3279  443 L
3199 4784 mt 
(22) s
3875 4615 mt 3875 4561 L
3875  389 mt 3875  443 L
3795 4784 mt 
(24) s
4470 4615 mt 4470 4561 L
4470  389 mt 4470  443 L
4390 4784 mt 
(26) s
5065 4615 mt 5065 4561 L
5065  389 mt 5065  443 L
4985 4784 mt 
(28) s
5661 4615 mt 5661 4561 L
5661  389 mt 5661  443 L
5581 4784 mt 
(30) s
6256 4615 mt 6256 4561 L
6256  389 mt 6256  443 L
6176 4784 mt 
(32) s
 898 4615 mt  925 4615 L
6256 4615 mt 6229 4615 L
DO
 898 4615 mt 6256 4615 L
6256 4615 mt 6256 4615 L
SO
 898 4615 mt  952 4615 L
6256 4615 mt 6202 4615 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 594 4668 mt 
(10) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

 754 4579 mt 
(-3) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 898 3979 mt  925 3979 L
6256 3979 mt 6229 3979 L
DO
 898 3979 mt 6256 3979 L
6256 3979 mt 6256 3979 L
SO
 898 3607 mt  925 3607 L
6256 3607 mt 6229 3607 L
DO
 898 3607 mt 6256 3607 L
6256 3607 mt 6256 3607 L
SO
 898 3343 mt  925 3343 L
6256 3343 mt 6229 3343 L
DO
 898 3343 mt 6256 3343 L
6256 3343 mt 6256 3343 L
SO
 898 3138 mt  925 3138 L
6256 3138 mt 6229 3138 L
DO
 898 3138 mt 6256 3138 L
6256 3138 mt 6256 3138 L
SO
 898 2971 mt  925 2971 L
6256 2971 mt 6229 2971 L
DO
 898 2971 mt 6256 2971 L
6256 2971 mt 6256 2971 L
SO
 898 2829 mt  925 2829 L
6256 2829 mt 6229 2829 L
DO
 898 2829 mt 6256 2829 L
6256 2829 mt 6256 2829 L
SO
 898 2707 mt  925 2707 L
6256 2707 mt 6229 2707 L
DO
 898 2707 mt 6256 2707 L
6256 2707 mt 6256 2707 L
SO
 898 2599 mt  925 2599 L
6256 2599 mt 6229 2599 L
DO
 898 2599 mt 6256 2599 L
6256 2599 mt 6256 2599 L
SO
 898 2502 mt  925 2502 L
6256 2502 mt 6229 2502 L
DO
 898 2502 mt 6256 2502 L
6256 2502 mt 6256 2502 L
SO
 898 2502 mt  952 2502 L
6256 2502 mt 6202 2502 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 594 2555 mt 
(10) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

 754 2466 mt 
(-2) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 898 1866 mt  925 1866 L
6256 1866 mt 6229 1866 L
DO
 898 1866 mt 6256 1866 L
6256 1866 mt 6256 1866 L
SO
 898 1494 mt  925 1494 L
6256 1494 mt 6229 1494 L
DO
 898 1494 mt 6256 1494 L
6256 1494 mt 6256 1494 L
SO
 898 1230 mt  925 1230 L
6256 1230 mt 6229 1230 L
DO
 898 1230 mt 6256 1230 L
6256 1230 mt 6256 1230 L
SO
 898 1025 mt  925 1025 L
6256 1025 mt 6229 1025 L
DO
 898 1025 mt 6256 1025 L
6256 1025 mt 6256 1025 L
SO
 898  858 mt  925  858 L
6256  858 mt 6229  858 L
DO
 898  858 mt 6256  858 L
6256  858 mt 6256  858 L
SO
 898  716 mt  925  716 L
6256  716 mt 6229  716 L
DO
 898  716 mt 6256  716 L
6256  716 mt 6256  716 L
SO
 898  594 mt  925  594 L
6256  594 mt 6229  594 L
DO
 898  594 mt 6256  594 L
6256  594 mt 6256  594 L
SO
 898  486 mt  925  486 L
6256  486 mt 6229  486 L
DO
 898  486 mt 6256  486 L
6256  486 mt 6256  486 L
SO
 898  389 mt  925  389 L
6256  389 mt 6229  389 L
DO
 898  389 mt 6256  389 L
6256  389 mt 6256  389 L
SO
 898  389 mt  952  389 L
6256  389 mt 6202  389 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 594  442 mt 
(10) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

 754  353 mt 
(-1) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 898  389 mt 6256  389 L
 898 4615 mt 6256 4615 L
 898 4615 mt  898  389 L
6256 4615 mt 6256  389 L
 898  389 mt  898  389 L
6256  389 mt 6256  389 L
gs 898 389 5359 4227 MR c np
1190 34 1191 228 1191 370 1190 631 1196 977 5 MP stroke
DA
1190 83 1191 143 1191 416 1190 583 1196 1149 5 MP stroke
DD
1190 140 1191 174 1191 561 1190 645 1196 2820 5 MP stroke

gr 
DD
2297  274 mt 
(EPR4 at 2.9 a/symbol \(3 symbols/pw50\)) s
 540 2963 mt  -90 rotate
(ERROR RATE) s
90 rotate
3209 4944 mt 
(S\(AWG\)NR) s
gs 898 389 5359 4227 MR c np
745 0 4023 3225 2 MP stroke

gr 
4887 3278 mt 
(C2 metric) s
gs 898 389 5359 4227 MR c np
DA
745 0 4023 3533 2 MP stroke

gr 
DA
4887 3586 mt 
(C1 metric) s
gs 898 389 5359 4227 MR c np
SO
745 0 4023 3842 2 MP stroke

gr 
SO
4887 3895 mt 
(Euclidian metric) s

end

eplot
%%EndObject graph 1

epage
end

showpage

%%Trailer
%%BoundingBox:    51   197   550   604
%%Pages: 001
%%EOF
cleartomark
countdictstack exch sub { end } repeat
restore

%%EndDocument
FMENDEPSF
0 0 0 0 1 1 1 K
92 172 556 222 R
7 X
V
3 H
2 Z
N
133 582 506 615 R
V
N
0 0 0 1 0 0 0 K
0 21 Q
0 X
0 0 0 1 0 0 0 K
(EPR4 at 2.9) 125 592 T
1 23 Q
(a) 244.07 592 T
0 21 Q
(/ symbol \0503 symbols/PW50\051) 264.63 592 T
(S\050A) 244 188 T
(WG\051NR [dB]) 278.23 188 T
0 18 Q
(18) 187 210 T
(16) 138 210 T
(20) 237 210 T
(22) 288 210 T
(24) 338 210 T
(26) 386 210 T
(28) 436 210 T
(30) 484 210 T
0 0 0 0 1 1 1 K
47 211 94 624 R
7 X
0 0 0 0 1 1 1 K
V
N
0 0 0 1 0 0 0 K
0 X
0 0 0 1 0 0 0 K
(10) 65 572 T
0 14.4 Q
(-1) 85.02 579.2 T
0 18 Q
(10) 62 394 T
0 14.4 Q
(-2) 82.02 401.2 T
0 18 Q
(10) 63 222 T
0 14.4 Q
(-3) 83.02 229.2 T
0 21 Q
(ERROR RA) 0 -270 56 331 TF
(TE) 0 -270 56 440.28 TF
0 0 0 0 1 1 1 K
332 282 534.88 388 R
7 X
0 0 0 0 1 1 1 K
V
0.5 H
N
0 0 0 1 0 0 0 K
332 282 534.88 388 R
0 X
0 0 0 1 0 0 0 K
N
J
339.96 372 402.81 372 2 L
J
339.96 372 345.71 372 2 L
N
[14.581 8.241 1.902 8.241] 14.581 I
345.71 372 397.05 372 2 L
N
J
397.05 372 402.81 372 2 L
N
J
339.96 336 402.81 336 2 L
J
339.96 336 343.71 336 2 L
N
[8.559 7.418] 8.559 I
343.71 336 399.05 336 2 L
N
J
399.05 336 402.81 336 2 L
N
J
339.96 300 402.81 300 2 L
N
2 F
(C2 metric) 411.56 364 T
(C1 metric) 410.76 329 T
(Euclidian metric) 411.56 295 T
0 0 0 1 0 0 0 K
J
FMENDPAGE
%%EndPage: "1" 1
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Descend
%%Pages: 1
%%DocumentFonts: Helvetica
%%+ Bookman-LightItalic
%%+ Helvetica-Narrow
%%EOF
countdictstack InitDictCount sub { end } repeat
cleartomark
restore
grestore

%%EndDocument
 @endspecial 759 4954 a(Figure)g(11:)43 b(EPR4)33 b(detection)f
(results)h(at)g(2)p Fj(:)p Fq(9)p Fj(a=)p Fq(sym)m(b)s(ol.)p
eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
